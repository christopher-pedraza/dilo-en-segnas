
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model miembro
 * 
 */
export type miembro = $Result.DefaultSelection<Prisma.$miembroPayload>
/**
 * Model isla
 * 
 */
export type isla = $Result.DefaultSelection<Prisma.$islaPayload>
/**
 * Model video_cuestionario
 * 
 */
export type video_cuestionario = $Result.DefaultSelection<Prisma.$video_cuestionarioPayload>
/**
 * Model quiz
 * 
 */
export type quiz = $Result.DefaultSelection<Prisma.$quizPayload>
/**
 * Model modelo_coml
 * 
 */
export type modelo_coml = $Result.DefaultSelection<Prisma.$modelo_comlPayload>
/**
 * Model treasure_hunt
 * 
 */
export type treasure_hunt = $Result.DefaultSelection<Prisma.$treasure_huntPayload>
/**
 * Model nivel
 * 
 */
export type nivel = $Result.DefaultSelection<Prisma.$nivelPayload>
/**
 * Model palabra
 * 
 */
export type palabra = $Result.DefaultSelection<Prisma.$palabraPayload>
/**
 * Model parte_video_cuestionario
 * 
 */
export type parte_video_cuestionario = $Result.DefaultSelection<Prisma.$parte_video_cuestionarioPayload>
/**
 * Model palabras_video_cuestionario
 * 
 */
export type palabras_video_cuestionario = $Result.DefaultSelection<Prisma.$palabras_video_cuestionarioPayload>
/**
 * Model preguntas_video_cuestionario
 * 
 */
export type preguntas_video_cuestionario = $Result.DefaultSelection<Prisma.$preguntas_video_cuestionarioPayload>
/**
 * Model respuestas_video_cuestionario
 * 
 */
export type respuestas_video_cuestionario = $Result.DefaultSelection<Prisma.$respuestas_video_cuestionarioPayload>
/**
 * Model detalles_quiz
 * 
 */
export type detalles_quiz = $Result.DefaultSelection<Prisma.$detalles_quizPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Miembros
 * const miembros = await prisma.miembro.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Miembros
   * const miembros = await prisma.miembro.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.miembro`: Exposes CRUD operations for the **miembro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Miembros
    * const miembros = await prisma.miembro.findMany()
    * ```
    */
  get miembro(): Prisma.miembroDelegate<ExtArgs>;

  /**
   * `prisma.isla`: Exposes CRUD operations for the **isla** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Islas
    * const islas = await prisma.isla.findMany()
    * ```
    */
  get isla(): Prisma.islaDelegate<ExtArgs>;

  /**
   * `prisma.video_cuestionario`: Exposes CRUD operations for the **video_cuestionario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Video_cuestionarios
    * const video_cuestionarios = await prisma.video_cuestionario.findMany()
    * ```
    */
  get video_cuestionario(): Prisma.video_cuestionarioDelegate<ExtArgs>;

  /**
   * `prisma.quiz`: Exposes CRUD operations for the **quiz** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Quizzes
    * const quizzes = await prisma.quiz.findMany()
    * ```
    */
  get quiz(): Prisma.quizDelegate<ExtArgs>;

  /**
   * `prisma.modelo_coml`: Exposes CRUD operations for the **modelo_coml** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Modelo_comls
    * const modelo_comls = await prisma.modelo_coml.findMany()
    * ```
    */
  get modelo_coml(): Prisma.modelo_comlDelegate<ExtArgs>;

  /**
   * `prisma.treasure_hunt`: Exposes CRUD operations for the **treasure_hunt** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Treasure_hunts
    * const treasure_hunts = await prisma.treasure_hunt.findMany()
    * ```
    */
  get treasure_hunt(): Prisma.treasure_huntDelegate<ExtArgs>;

  /**
   * `prisma.nivel`: Exposes CRUD operations for the **nivel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nivels
    * const nivels = await prisma.nivel.findMany()
    * ```
    */
  get nivel(): Prisma.nivelDelegate<ExtArgs>;

  /**
   * `prisma.palabra`: Exposes CRUD operations for the **palabra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Palabras
    * const palabras = await prisma.palabra.findMany()
    * ```
    */
  get palabra(): Prisma.palabraDelegate<ExtArgs>;

  /**
   * `prisma.parte_video_cuestionario`: Exposes CRUD operations for the **parte_video_cuestionario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Parte_video_cuestionarios
    * const parte_video_cuestionarios = await prisma.parte_video_cuestionario.findMany()
    * ```
    */
  get parte_video_cuestionario(): Prisma.parte_video_cuestionarioDelegate<ExtArgs>;

  /**
   * `prisma.palabras_video_cuestionario`: Exposes CRUD operations for the **palabras_video_cuestionario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Palabras_video_cuestionarios
    * const palabras_video_cuestionarios = await prisma.palabras_video_cuestionario.findMany()
    * ```
    */
  get palabras_video_cuestionario(): Prisma.palabras_video_cuestionarioDelegate<ExtArgs>;

  /**
   * `prisma.preguntas_video_cuestionario`: Exposes CRUD operations for the **preguntas_video_cuestionario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Preguntas_video_cuestionarios
    * const preguntas_video_cuestionarios = await prisma.preguntas_video_cuestionario.findMany()
    * ```
    */
  get preguntas_video_cuestionario(): Prisma.preguntas_video_cuestionarioDelegate<ExtArgs>;

  /**
   * `prisma.respuestas_video_cuestionario`: Exposes CRUD operations for the **respuestas_video_cuestionario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Respuestas_video_cuestionarios
    * const respuestas_video_cuestionarios = await prisma.respuestas_video_cuestionario.findMany()
    * ```
    */
  get respuestas_video_cuestionario(): Prisma.respuestas_video_cuestionarioDelegate<ExtArgs>;

  /**
   * `prisma.detalles_quiz`: Exposes CRUD operations for the **detalles_quiz** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Detalles_quizs
    * const detalles_quizs = await prisma.detalles_quiz.findMany()
    * ```
    */
  get detalles_quiz(): Prisma.detalles_quizDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.4.1
   * Query Engine version: 2f302df92bd8945e20ad4595a73def5b96afa54f
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    miembro: 'miembro',
    isla: 'isla',
    video_cuestionario: 'video_cuestionario',
    quiz: 'quiz',
    modelo_coml: 'modelo_coml',
    treasure_hunt: 'treasure_hunt',
    nivel: 'nivel',
    palabra: 'palabra',
    parte_video_cuestionario: 'parte_video_cuestionario',
    palabras_video_cuestionario: 'palabras_video_cuestionario',
    preguntas_video_cuestionario: 'preguntas_video_cuestionario',
    respuestas_video_cuestionario: 'respuestas_video_cuestionario',
    detalles_quiz: 'detalles_quiz'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'miembro' | 'isla' | 'video_cuestionario' | 'quiz' | 'modelo_coml' | 'treasure_hunt' | 'nivel' | 'palabra' | 'parte_video_cuestionario' | 'palabras_video_cuestionario' | 'preguntas_video_cuestionario' | 'respuestas_video_cuestionario' | 'detalles_quiz'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      miembro: {
        payload: Prisma.$miembroPayload<ExtArgs>
        fields: Prisma.miembroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.miembroFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$miembroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.miembroFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$miembroPayload>
          }
          findFirst: {
            args: Prisma.miembroFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$miembroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.miembroFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$miembroPayload>
          }
          findMany: {
            args: Prisma.miembroFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$miembroPayload>[]
          }
          create: {
            args: Prisma.miembroCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$miembroPayload>
          }
          createMany: {
            args: Prisma.miembroCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.miembroDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$miembroPayload>
          }
          update: {
            args: Prisma.miembroUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$miembroPayload>
          }
          deleteMany: {
            args: Prisma.miembroDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.miembroUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.miembroUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$miembroPayload>
          }
          aggregate: {
            args: Prisma.MiembroAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateMiembro>
          }
          groupBy: {
            args: Prisma.miembroGroupByArgs<ExtArgs>,
            result: $Utils.Optional<MiembroGroupByOutputType>[]
          }
          count: {
            args: Prisma.miembroCountArgs<ExtArgs>,
            result: $Utils.Optional<MiembroCountAggregateOutputType> | number
          }
        }
      }
      isla: {
        payload: Prisma.$islaPayload<ExtArgs>
        fields: Prisma.islaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.islaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$islaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.islaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$islaPayload>
          }
          findFirst: {
            args: Prisma.islaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$islaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.islaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$islaPayload>
          }
          findMany: {
            args: Prisma.islaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$islaPayload>[]
          }
          create: {
            args: Prisma.islaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$islaPayload>
          }
          createMany: {
            args: Prisma.islaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.islaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$islaPayload>
          }
          update: {
            args: Prisma.islaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$islaPayload>
          }
          deleteMany: {
            args: Prisma.islaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.islaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.islaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$islaPayload>
          }
          aggregate: {
            args: Prisma.IslaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateIsla>
          }
          groupBy: {
            args: Prisma.islaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<IslaGroupByOutputType>[]
          }
          count: {
            args: Prisma.islaCountArgs<ExtArgs>,
            result: $Utils.Optional<IslaCountAggregateOutputType> | number
          }
        }
      }
      video_cuestionario: {
        payload: Prisma.$video_cuestionarioPayload<ExtArgs>
        fields: Prisma.video_cuestionarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.video_cuestionarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$video_cuestionarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$video_cuestionarioPayload>
          }
          findFirst: {
            args: Prisma.video_cuestionarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$video_cuestionarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.video_cuestionarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$video_cuestionarioPayload>
          }
          findMany: {
            args: Prisma.video_cuestionarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$video_cuestionarioPayload>[]
          }
          create: {
            args: Prisma.video_cuestionarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$video_cuestionarioPayload>
          }
          createMany: {
            args: Prisma.video_cuestionarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.video_cuestionarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$video_cuestionarioPayload>
          }
          update: {
            args: Prisma.video_cuestionarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$video_cuestionarioPayload>
          }
          deleteMany: {
            args: Prisma.video_cuestionarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.video_cuestionarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.video_cuestionarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$video_cuestionarioPayload>
          }
          aggregate: {
            args: Prisma.Video_cuestionarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateVideo_cuestionario>
          }
          groupBy: {
            args: Prisma.video_cuestionarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Video_cuestionarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.video_cuestionarioCountArgs<ExtArgs>,
            result: $Utils.Optional<Video_cuestionarioCountAggregateOutputType> | number
          }
        }
      }
      quiz: {
        payload: Prisma.$quizPayload<ExtArgs>
        fields: Prisma.quizFieldRefs
        operations: {
          findUnique: {
            args: Prisma.quizFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$quizPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.quizFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$quizPayload>
          }
          findFirst: {
            args: Prisma.quizFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$quizPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.quizFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$quizPayload>
          }
          findMany: {
            args: Prisma.quizFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$quizPayload>[]
          }
          create: {
            args: Prisma.quizCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$quizPayload>
          }
          createMany: {
            args: Prisma.quizCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.quizDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$quizPayload>
          }
          update: {
            args: Prisma.quizUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$quizPayload>
          }
          deleteMany: {
            args: Prisma.quizDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.quizUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.quizUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$quizPayload>
          }
          aggregate: {
            args: Prisma.QuizAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateQuiz>
          }
          groupBy: {
            args: Prisma.quizGroupByArgs<ExtArgs>,
            result: $Utils.Optional<QuizGroupByOutputType>[]
          }
          count: {
            args: Prisma.quizCountArgs<ExtArgs>,
            result: $Utils.Optional<QuizCountAggregateOutputType> | number
          }
        }
      }
      modelo_coml: {
        payload: Prisma.$modelo_comlPayload<ExtArgs>
        fields: Prisma.modelo_comlFieldRefs
        operations: {
          findUnique: {
            args: Prisma.modelo_comlFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$modelo_comlPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.modelo_comlFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$modelo_comlPayload>
          }
          findFirst: {
            args: Prisma.modelo_comlFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$modelo_comlPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.modelo_comlFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$modelo_comlPayload>
          }
          findMany: {
            args: Prisma.modelo_comlFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$modelo_comlPayload>[]
          }
          create: {
            args: Prisma.modelo_comlCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$modelo_comlPayload>
          }
          createMany: {
            args: Prisma.modelo_comlCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.modelo_comlDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$modelo_comlPayload>
          }
          update: {
            args: Prisma.modelo_comlUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$modelo_comlPayload>
          }
          deleteMany: {
            args: Prisma.modelo_comlDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.modelo_comlUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.modelo_comlUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$modelo_comlPayload>
          }
          aggregate: {
            args: Prisma.Modelo_comlAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateModelo_coml>
          }
          groupBy: {
            args: Prisma.modelo_comlGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Modelo_comlGroupByOutputType>[]
          }
          count: {
            args: Prisma.modelo_comlCountArgs<ExtArgs>,
            result: $Utils.Optional<Modelo_comlCountAggregateOutputType> | number
          }
        }
      }
      treasure_hunt: {
        payload: Prisma.$treasure_huntPayload<ExtArgs>
        fields: Prisma.treasure_huntFieldRefs
        operations: {
          findUnique: {
            args: Prisma.treasure_huntFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$treasure_huntPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.treasure_huntFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$treasure_huntPayload>
          }
          findFirst: {
            args: Prisma.treasure_huntFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$treasure_huntPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.treasure_huntFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$treasure_huntPayload>
          }
          findMany: {
            args: Prisma.treasure_huntFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$treasure_huntPayload>[]
          }
          create: {
            args: Prisma.treasure_huntCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$treasure_huntPayload>
          }
          createMany: {
            args: Prisma.treasure_huntCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.treasure_huntDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$treasure_huntPayload>
          }
          update: {
            args: Prisma.treasure_huntUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$treasure_huntPayload>
          }
          deleteMany: {
            args: Prisma.treasure_huntDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.treasure_huntUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.treasure_huntUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$treasure_huntPayload>
          }
          aggregate: {
            args: Prisma.Treasure_huntAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTreasure_hunt>
          }
          groupBy: {
            args: Prisma.treasure_huntGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Treasure_huntGroupByOutputType>[]
          }
          count: {
            args: Prisma.treasure_huntCountArgs<ExtArgs>,
            result: $Utils.Optional<Treasure_huntCountAggregateOutputType> | number
          }
        }
      }
      nivel: {
        payload: Prisma.$nivelPayload<ExtArgs>
        fields: Prisma.nivelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nivelFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$nivelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nivelFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$nivelPayload>
          }
          findFirst: {
            args: Prisma.nivelFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$nivelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nivelFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$nivelPayload>
          }
          findMany: {
            args: Prisma.nivelFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$nivelPayload>[]
          }
          create: {
            args: Prisma.nivelCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$nivelPayload>
          }
          createMany: {
            args: Prisma.nivelCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.nivelDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$nivelPayload>
          }
          update: {
            args: Prisma.nivelUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$nivelPayload>
          }
          deleteMany: {
            args: Prisma.nivelDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.nivelUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.nivelUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$nivelPayload>
          }
          aggregate: {
            args: Prisma.NivelAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateNivel>
          }
          groupBy: {
            args: Prisma.nivelGroupByArgs<ExtArgs>,
            result: $Utils.Optional<NivelGroupByOutputType>[]
          }
          count: {
            args: Prisma.nivelCountArgs<ExtArgs>,
            result: $Utils.Optional<NivelCountAggregateOutputType> | number
          }
        }
      }
      palabra: {
        payload: Prisma.$palabraPayload<ExtArgs>
        fields: Prisma.palabraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.palabraFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.palabraFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabraPayload>
          }
          findFirst: {
            args: Prisma.palabraFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.palabraFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabraPayload>
          }
          findMany: {
            args: Prisma.palabraFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabraPayload>[]
          }
          create: {
            args: Prisma.palabraCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabraPayload>
          }
          createMany: {
            args: Prisma.palabraCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.palabraDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabraPayload>
          }
          update: {
            args: Prisma.palabraUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabraPayload>
          }
          deleteMany: {
            args: Prisma.palabraDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.palabraUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.palabraUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabraPayload>
          }
          aggregate: {
            args: Prisma.PalabraAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePalabra>
          }
          groupBy: {
            args: Prisma.palabraGroupByArgs<ExtArgs>,
            result: $Utils.Optional<PalabraGroupByOutputType>[]
          }
          count: {
            args: Prisma.palabraCountArgs<ExtArgs>,
            result: $Utils.Optional<PalabraCountAggregateOutputType> | number
          }
        }
      }
      parte_video_cuestionario: {
        payload: Prisma.$parte_video_cuestionarioPayload<ExtArgs>
        fields: Prisma.parte_video_cuestionarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.parte_video_cuestionarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$parte_video_cuestionarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.parte_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$parte_video_cuestionarioPayload>
          }
          findFirst: {
            args: Prisma.parte_video_cuestionarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$parte_video_cuestionarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.parte_video_cuestionarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$parte_video_cuestionarioPayload>
          }
          findMany: {
            args: Prisma.parte_video_cuestionarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$parte_video_cuestionarioPayload>[]
          }
          create: {
            args: Prisma.parte_video_cuestionarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$parte_video_cuestionarioPayload>
          }
          createMany: {
            args: Prisma.parte_video_cuestionarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.parte_video_cuestionarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$parte_video_cuestionarioPayload>
          }
          update: {
            args: Prisma.parte_video_cuestionarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$parte_video_cuestionarioPayload>
          }
          deleteMany: {
            args: Prisma.parte_video_cuestionarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.parte_video_cuestionarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.parte_video_cuestionarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$parte_video_cuestionarioPayload>
          }
          aggregate: {
            args: Prisma.Parte_video_cuestionarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateParte_video_cuestionario>
          }
          groupBy: {
            args: Prisma.parte_video_cuestionarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Parte_video_cuestionarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.parte_video_cuestionarioCountArgs<ExtArgs>,
            result: $Utils.Optional<Parte_video_cuestionarioCountAggregateOutputType> | number
          }
        }
      }
      palabras_video_cuestionario: {
        payload: Prisma.$palabras_video_cuestionarioPayload<ExtArgs>
        fields: Prisma.palabras_video_cuestionarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.palabras_video_cuestionarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabras_video_cuestionarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.palabras_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabras_video_cuestionarioPayload>
          }
          findFirst: {
            args: Prisma.palabras_video_cuestionarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabras_video_cuestionarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.palabras_video_cuestionarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabras_video_cuestionarioPayload>
          }
          findMany: {
            args: Prisma.palabras_video_cuestionarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabras_video_cuestionarioPayload>[]
          }
          create: {
            args: Prisma.palabras_video_cuestionarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabras_video_cuestionarioPayload>
          }
          createMany: {
            args: Prisma.palabras_video_cuestionarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.palabras_video_cuestionarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabras_video_cuestionarioPayload>
          }
          update: {
            args: Prisma.palabras_video_cuestionarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabras_video_cuestionarioPayload>
          }
          deleteMany: {
            args: Prisma.palabras_video_cuestionarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.palabras_video_cuestionarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.palabras_video_cuestionarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$palabras_video_cuestionarioPayload>
          }
          aggregate: {
            args: Prisma.Palabras_video_cuestionarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePalabras_video_cuestionario>
          }
          groupBy: {
            args: Prisma.palabras_video_cuestionarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Palabras_video_cuestionarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.palabras_video_cuestionarioCountArgs<ExtArgs>,
            result: $Utils.Optional<Palabras_video_cuestionarioCountAggregateOutputType> | number
          }
        }
      }
      preguntas_video_cuestionario: {
        payload: Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>
        fields: Prisma.preguntas_video_cuestionarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.preguntas_video_cuestionarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$preguntas_video_cuestionarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.preguntas_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$preguntas_video_cuestionarioPayload>
          }
          findFirst: {
            args: Prisma.preguntas_video_cuestionarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$preguntas_video_cuestionarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.preguntas_video_cuestionarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$preguntas_video_cuestionarioPayload>
          }
          findMany: {
            args: Prisma.preguntas_video_cuestionarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$preguntas_video_cuestionarioPayload>[]
          }
          create: {
            args: Prisma.preguntas_video_cuestionarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$preguntas_video_cuestionarioPayload>
          }
          createMany: {
            args: Prisma.preguntas_video_cuestionarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.preguntas_video_cuestionarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$preguntas_video_cuestionarioPayload>
          }
          update: {
            args: Prisma.preguntas_video_cuestionarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$preguntas_video_cuestionarioPayload>
          }
          deleteMany: {
            args: Prisma.preguntas_video_cuestionarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.preguntas_video_cuestionarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.preguntas_video_cuestionarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$preguntas_video_cuestionarioPayload>
          }
          aggregate: {
            args: Prisma.Preguntas_video_cuestionarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePreguntas_video_cuestionario>
          }
          groupBy: {
            args: Prisma.preguntas_video_cuestionarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Preguntas_video_cuestionarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.preguntas_video_cuestionarioCountArgs<ExtArgs>,
            result: $Utils.Optional<Preguntas_video_cuestionarioCountAggregateOutputType> | number
          }
        }
      }
      respuestas_video_cuestionario: {
        payload: Prisma.$respuestas_video_cuestionarioPayload<ExtArgs>
        fields: Prisma.respuestas_video_cuestionarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.respuestas_video_cuestionarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$respuestas_video_cuestionarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.respuestas_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$respuestas_video_cuestionarioPayload>
          }
          findFirst: {
            args: Prisma.respuestas_video_cuestionarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$respuestas_video_cuestionarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.respuestas_video_cuestionarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$respuestas_video_cuestionarioPayload>
          }
          findMany: {
            args: Prisma.respuestas_video_cuestionarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$respuestas_video_cuestionarioPayload>[]
          }
          create: {
            args: Prisma.respuestas_video_cuestionarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$respuestas_video_cuestionarioPayload>
          }
          createMany: {
            args: Prisma.respuestas_video_cuestionarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.respuestas_video_cuestionarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$respuestas_video_cuestionarioPayload>
          }
          update: {
            args: Prisma.respuestas_video_cuestionarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$respuestas_video_cuestionarioPayload>
          }
          deleteMany: {
            args: Prisma.respuestas_video_cuestionarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.respuestas_video_cuestionarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.respuestas_video_cuestionarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$respuestas_video_cuestionarioPayload>
          }
          aggregate: {
            args: Prisma.Respuestas_video_cuestionarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateRespuestas_video_cuestionario>
          }
          groupBy: {
            args: Prisma.respuestas_video_cuestionarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Respuestas_video_cuestionarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.respuestas_video_cuestionarioCountArgs<ExtArgs>,
            result: $Utils.Optional<Respuestas_video_cuestionarioCountAggregateOutputType> | number
          }
        }
      }
      detalles_quiz: {
        payload: Prisma.$detalles_quizPayload<ExtArgs>
        fields: Prisma.detalles_quizFieldRefs
        operations: {
          findUnique: {
            args: Prisma.detalles_quizFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalles_quizPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.detalles_quizFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalles_quizPayload>
          }
          findFirst: {
            args: Prisma.detalles_quizFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalles_quizPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.detalles_quizFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalles_quizPayload>
          }
          findMany: {
            args: Prisma.detalles_quizFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalles_quizPayload>[]
          }
          create: {
            args: Prisma.detalles_quizCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalles_quizPayload>
          }
          createMany: {
            args: Prisma.detalles_quizCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.detalles_quizDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalles_quizPayload>
          }
          update: {
            args: Prisma.detalles_quizUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalles_quizPayload>
          }
          deleteMany: {
            args: Prisma.detalles_quizDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.detalles_quizUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.detalles_quizUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalles_quizPayload>
          }
          aggregate: {
            args: Prisma.Detalles_quizAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDetalles_quiz>
          }
          groupBy: {
            args: Prisma.detalles_quizGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Detalles_quizGroupByOutputType>[]
          }
          count: {
            args: Prisma.detalles_quizCountArgs<ExtArgs>,
            result: $Utils.Optional<Detalles_quizCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type IslaCountOutputType
   */

  export type IslaCountOutputType = {
    video_cuestionario: number
    quiz: number
    modelo_coml: number
    treasure_hunt: number
    nivel: number
    palabra: number
  }

  export type IslaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    video_cuestionario?: boolean | IslaCountOutputTypeCountVideo_cuestionarioArgs
    quiz?: boolean | IslaCountOutputTypeCountQuizArgs
    modelo_coml?: boolean | IslaCountOutputTypeCountModelo_comlArgs
    treasure_hunt?: boolean | IslaCountOutputTypeCountTreasure_huntArgs
    nivel?: boolean | IslaCountOutputTypeCountNivelArgs
    palabra?: boolean | IslaCountOutputTypeCountPalabraArgs
  }

  // Custom InputTypes

  /**
   * IslaCountOutputType without action
   */
  export type IslaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IslaCountOutputType
     */
    select?: IslaCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * IslaCountOutputType without action
   */
  export type IslaCountOutputTypeCountVideo_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: video_cuestionarioWhereInput
  }


  /**
   * IslaCountOutputType without action
   */
  export type IslaCountOutputTypeCountQuizArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: quizWhereInput
  }


  /**
   * IslaCountOutputType without action
   */
  export type IslaCountOutputTypeCountModelo_comlArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: modelo_comlWhereInput
  }


  /**
   * IslaCountOutputType without action
   */
  export type IslaCountOutputTypeCountTreasure_huntArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: treasure_huntWhereInput
  }


  /**
   * IslaCountOutputType without action
   */
  export type IslaCountOutputTypeCountNivelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nivelWhereInput
  }


  /**
   * IslaCountOutputType without action
   */
  export type IslaCountOutputTypeCountPalabraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: palabraWhereInput
  }



  /**
   * Count Type Video_cuestionarioCountOutputType
   */

  export type Video_cuestionarioCountOutputType = {
    nivel: number
    parte_video_cuestionario: number
    palabras_video_cuestionario: number
  }

  export type Video_cuestionarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    nivel?: boolean | Video_cuestionarioCountOutputTypeCountNivelArgs
    parte_video_cuestionario?: boolean | Video_cuestionarioCountOutputTypeCountParte_video_cuestionarioArgs
    palabras_video_cuestionario?: boolean | Video_cuestionarioCountOutputTypeCountPalabras_video_cuestionarioArgs
  }

  // Custom InputTypes

  /**
   * Video_cuestionarioCountOutputType without action
   */
  export type Video_cuestionarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Video_cuestionarioCountOutputType
     */
    select?: Video_cuestionarioCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Video_cuestionarioCountOutputType without action
   */
  export type Video_cuestionarioCountOutputTypeCountNivelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nivelWhereInput
  }


  /**
   * Video_cuestionarioCountOutputType without action
   */
  export type Video_cuestionarioCountOutputTypeCountParte_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parte_video_cuestionarioWhereInput
  }


  /**
   * Video_cuestionarioCountOutputType without action
   */
  export type Video_cuestionarioCountOutputTypeCountPalabras_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: palabras_video_cuestionarioWhereInput
  }



  /**
   * Count Type QuizCountOutputType
   */

  export type QuizCountOutputType = {
    nivel: number
    detalles_quiz: number
  }

  export type QuizCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    nivel?: boolean | QuizCountOutputTypeCountNivelArgs
    detalles_quiz?: boolean | QuizCountOutputTypeCountDetalles_quizArgs
  }

  // Custom InputTypes

  /**
   * QuizCountOutputType without action
   */
  export type QuizCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizCountOutputType
     */
    select?: QuizCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * QuizCountOutputType without action
   */
  export type QuizCountOutputTypeCountNivelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nivelWhereInput
  }


  /**
   * QuizCountOutputType without action
   */
  export type QuizCountOutputTypeCountDetalles_quizArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalles_quizWhereInput
  }



  /**
   * Count Type Modelo_comlCountOutputType
   */

  export type Modelo_comlCountOutputType = {
    treasure_hunt: number
  }

  export type Modelo_comlCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    treasure_hunt?: boolean | Modelo_comlCountOutputTypeCountTreasure_huntArgs
  }

  // Custom InputTypes

  /**
   * Modelo_comlCountOutputType without action
   */
  export type Modelo_comlCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelo_comlCountOutputType
     */
    select?: Modelo_comlCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Modelo_comlCountOutputType without action
   */
  export type Modelo_comlCountOutputTypeCountTreasure_huntArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: treasure_huntWhereInput
  }



  /**
   * Count Type Treasure_huntCountOutputType
   */

  export type Treasure_huntCountOutputType = {
    nivel: number
  }

  export type Treasure_huntCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    nivel?: boolean | Treasure_huntCountOutputTypeCountNivelArgs
  }

  // Custom InputTypes

  /**
   * Treasure_huntCountOutputType without action
   */
  export type Treasure_huntCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Treasure_huntCountOutputType
     */
    select?: Treasure_huntCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Treasure_huntCountOutputType without action
   */
  export type Treasure_huntCountOutputTypeCountNivelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nivelWhereInput
  }



  /**
   * Count Type PalabraCountOutputType
   */

  export type PalabraCountOutputType = {
    detalles_quiz: number
    palabras_video_cuestionario: number
  }

  export type PalabraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles_quiz?: boolean | PalabraCountOutputTypeCountDetalles_quizArgs
    palabras_video_cuestionario?: boolean | PalabraCountOutputTypeCountPalabras_video_cuestionarioArgs
  }

  // Custom InputTypes

  /**
   * PalabraCountOutputType without action
   */
  export type PalabraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PalabraCountOutputType
     */
    select?: PalabraCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * PalabraCountOutputType without action
   */
  export type PalabraCountOutputTypeCountDetalles_quizArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalles_quizWhereInput
  }


  /**
   * PalabraCountOutputType without action
   */
  export type PalabraCountOutputTypeCountPalabras_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: palabras_video_cuestionarioWhereInput
  }



  /**
   * Count Type Parte_video_cuestionarioCountOutputType
   */

  export type Parte_video_cuestionarioCountOutputType = {
    preguntas_video_cuestionario: number
  }

  export type Parte_video_cuestionarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    preguntas_video_cuestionario?: boolean | Parte_video_cuestionarioCountOutputTypeCountPreguntas_video_cuestionarioArgs
  }

  // Custom InputTypes

  /**
   * Parte_video_cuestionarioCountOutputType without action
   */
  export type Parte_video_cuestionarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Parte_video_cuestionarioCountOutputType
     */
    select?: Parte_video_cuestionarioCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Parte_video_cuestionarioCountOutputType without action
   */
  export type Parte_video_cuestionarioCountOutputTypeCountPreguntas_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: preguntas_video_cuestionarioWhereInput
  }



  /**
   * Count Type Preguntas_video_cuestionarioCountOutputType
   */

  export type Preguntas_video_cuestionarioCountOutputType = {
    respuestas_video_cuestionario: number
  }

  export type Preguntas_video_cuestionarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    respuestas_video_cuestionario?: boolean | Preguntas_video_cuestionarioCountOutputTypeCountRespuestas_video_cuestionarioArgs
  }

  // Custom InputTypes

  /**
   * Preguntas_video_cuestionarioCountOutputType without action
   */
  export type Preguntas_video_cuestionarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Preguntas_video_cuestionarioCountOutputType
     */
    select?: Preguntas_video_cuestionarioCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Preguntas_video_cuestionarioCountOutputType without action
   */
  export type Preguntas_video_cuestionarioCountOutputTypeCountRespuestas_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: respuestas_video_cuestionarioWhereInput
  }



  /**
   * Models
   */

  /**
   * Model miembro
   */

  export type AggregateMiembro = {
    _count: MiembroCountAggregateOutputType | null
    _avg: MiembroAvgAggregateOutputType | null
    _sum: MiembroSumAggregateOutputType | null
    _min: MiembroMinAggregateOutputType | null
    _max: MiembroMaxAggregateOutputType | null
  }

  export type MiembroAvgAggregateOutputType = {
    id_miembro: number | null
  }

  export type MiembroSumAggregateOutputType = {
    id_miembro: number | null
  }

  export type MiembroMinAggregateOutputType = {
    id_miembro: number | null
    usuario: string | null
    contrasegna: string | null
    es_administrador: boolean | null
  }

  export type MiembroMaxAggregateOutputType = {
    id_miembro: number | null
    usuario: string | null
    contrasegna: string | null
    es_administrador: boolean | null
  }

  export type MiembroCountAggregateOutputType = {
    id_miembro: number
    usuario: number
    contrasegna: number
    es_administrador: number
    _all: number
  }


  export type MiembroAvgAggregateInputType = {
    id_miembro?: true
  }

  export type MiembroSumAggregateInputType = {
    id_miembro?: true
  }

  export type MiembroMinAggregateInputType = {
    id_miembro?: true
    usuario?: true
    contrasegna?: true
    es_administrador?: true
  }

  export type MiembroMaxAggregateInputType = {
    id_miembro?: true
    usuario?: true
    contrasegna?: true
    es_administrador?: true
  }

  export type MiembroCountAggregateInputType = {
    id_miembro?: true
    usuario?: true
    contrasegna?: true
    es_administrador?: true
    _all?: true
  }

  export type MiembroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which miembro to aggregate.
     */
    where?: miembroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of miembros to fetch.
     */
    orderBy?: miembroOrderByWithRelationInput | miembroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: miembroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` miembros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` miembros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned miembros
    **/
    _count?: true | MiembroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MiembroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MiembroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MiembroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MiembroMaxAggregateInputType
  }

  export type GetMiembroAggregateType<T extends MiembroAggregateArgs> = {
        [P in keyof T & keyof AggregateMiembro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMiembro[P]>
      : GetScalarType<T[P], AggregateMiembro[P]>
  }




  export type miembroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: miembroWhereInput
    orderBy?: miembroOrderByWithAggregationInput | miembroOrderByWithAggregationInput[]
    by: MiembroScalarFieldEnum[] | MiembroScalarFieldEnum
    having?: miembroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MiembroCountAggregateInputType | true
    _avg?: MiembroAvgAggregateInputType
    _sum?: MiembroSumAggregateInputType
    _min?: MiembroMinAggregateInputType
    _max?: MiembroMaxAggregateInputType
  }

  export type MiembroGroupByOutputType = {
    id_miembro: number
    usuario: string
    contrasegna: string
    es_administrador: boolean
    _count: MiembroCountAggregateOutputType | null
    _avg: MiembroAvgAggregateOutputType | null
    _sum: MiembroSumAggregateOutputType | null
    _min: MiembroMinAggregateOutputType | null
    _max: MiembroMaxAggregateOutputType | null
  }

  type GetMiembroGroupByPayload<T extends miembroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MiembroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MiembroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MiembroGroupByOutputType[P]>
            : GetScalarType<T[P], MiembroGroupByOutputType[P]>
        }
      >
    >


  export type miembroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_miembro?: boolean
    usuario?: boolean
    contrasegna?: boolean
    es_administrador?: boolean
  }, ExtArgs["result"]["miembro"]>

  export type miembroSelectScalar = {
    id_miembro?: boolean
    usuario?: boolean
    contrasegna?: boolean
    es_administrador?: boolean
  }


  export type $miembroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "miembro"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_miembro: number
      usuario: string
      contrasegna: string
      es_administrador: boolean
    }, ExtArgs["result"]["miembro"]>
    composites: {}
  }


  type miembroGetPayload<S extends boolean | null | undefined | miembroDefaultArgs> = $Result.GetResult<Prisma.$miembroPayload, S>

  type miembroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<miembroFindManyArgs, 'select' | 'include'> & {
      select?: MiembroCountAggregateInputType | true
    }

  export interface miembroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['miembro'], meta: { name: 'miembro' } }
    /**
     * Find zero or one Miembro that matches the filter.
     * @param {miembroFindUniqueArgs} args - Arguments to find a Miembro
     * @example
     * // Get one Miembro
     * const miembro = await prisma.miembro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends miembroFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, miembroFindUniqueArgs<ExtArgs>>
    ): Prisma__miembroClient<$Result.GetResult<Prisma.$miembroPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Miembro that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {miembroFindUniqueOrThrowArgs} args - Arguments to find a Miembro
     * @example
     * // Get one Miembro
     * const miembro = await prisma.miembro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends miembroFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, miembroFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__miembroClient<$Result.GetResult<Prisma.$miembroPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Miembro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {miembroFindFirstArgs} args - Arguments to find a Miembro
     * @example
     * // Get one Miembro
     * const miembro = await prisma.miembro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends miembroFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, miembroFindFirstArgs<ExtArgs>>
    ): Prisma__miembroClient<$Result.GetResult<Prisma.$miembroPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Miembro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {miembroFindFirstOrThrowArgs} args - Arguments to find a Miembro
     * @example
     * // Get one Miembro
     * const miembro = await prisma.miembro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends miembroFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, miembroFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__miembroClient<$Result.GetResult<Prisma.$miembroPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Miembros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {miembroFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Miembros
     * const miembros = await prisma.miembro.findMany()
     * 
     * // Get first 10 Miembros
     * const miembros = await prisma.miembro.findMany({ take: 10 })
     * 
     * // Only select the `id_miembro`
     * const miembroWithId_miembroOnly = await prisma.miembro.findMany({ select: { id_miembro: true } })
     * 
    **/
    findMany<T extends miembroFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, miembroFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$miembroPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Miembro.
     * @param {miembroCreateArgs} args - Arguments to create a Miembro.
     * @example
     * // Create one Miembro
     * const Miembro = await prisma.miembro.create({
     *   data: {
     *     // ... data to create a Miembro
     *   }
     * })
     * 
    **/
    create<T extends miembroCreateArgs<ExtArgs>>(
      args: SelectSubset<T, miembroCreateArgs<ExtArgs>>
    ): Prisma__miembroClient<$Result.GetResult<Prisma.$miembroPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Miembros.
     *     @param {miembroCreateManyArgs} args - Arguments to create many Miembros.
     *     @example
     *     // Create many Miembros
     *     const miembro = await prisma.miembro.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends miembroCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, miembroCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Miembro.
     * @param {miembroDeleteArgs} args - Arguments to delete one Miembro.
     * @example
     * // Delete one Miembro
     * const Miembro = await prisma.miembro.delete({
     *   where: {
     *     // ... filter to delete one Miembro
     *   }
     * })
     * 
    **/
    delete<T extends miembroDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, miembroDeleteArgs<ExtArgs>>
    ): Prisma__miembroClient<$Result.GetResult<Prisma.$miembroPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Miembro.
     * @param {miembroUpdateArgs} args - Arguments to update one Miembro.
     * @example
     * // Update one Miembro
     * const miembro = await prisma.miembro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends miembroUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, miembroUpdateArgs<ExtArgs>>
    ): Prisma__miembroClient<$Result.GetResult<Prisma.$miembroPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Miembros.
     * @param {miembroDeleteManyArgs} args - Arguments to filter Miembros to delete.
     * @example
     * // Delete a few Miembros
     * const { count } = await prisma.miembro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends miembroDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, miembroDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Miembros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {miembroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Miembros
     * const miembro = await prisma.miembro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends miembroUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, miembroUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Miembro.
     * @param {miembroUpsertArgs} args - Arguments to update or create a Miembro.
     * @example
     * // Update or create a Miembro
     * const miembro = await prisma.miembro.upsert({
     *   create: {
     *     // ... data to create a Miembro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Miembro we want to update
     *   }
     * })
    **/
    upsert<T extends miembroUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, miembroUpsertArgs<ExtArgs>>
    ): Prisma__miembroClient<$Result.GetResult<Prisma.$miembroPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Miembros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {miembroCountArgs} args - Arguments to filter Miembros to count.
     * @example
     * // Count the number of Miembros
     * const count = await prisma.miembro.count({
     *   where: {
     *     // ... the filter for the Miembros we want to count
     *   }
     * })
    **/
    count<T extends miembroCountArgs>(
      args?: Subset<T, miembroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MiembroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Miembro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MiembroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MiembroAggregateArgs>(args: Subset<T, MiembroAggregateArgs>): Prisma.PrismaPromise<GetMiembroAggregateType<T>>

    /**
     * Group by Miembro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {miembroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends miembroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: miembroGroupByArgs['orderBy'] }
        : { orderBy?: miembroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, miembroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMiembroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the miembro model
   */
  readonly fields: miembroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for miembro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__miembroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the miembro model
   */ 
  interface miembroFieldRefs {
    readonly id_miembro: FieldRef<"miembro", 'Int'>
    readonly usuario: FieldRef<"miembro", 'String'>
    readonly contrasegna: FieldRef<"miembro", 'String'>
    readonly es_administrador: FieldRef<"miembro", 'Boolean'>
  }
    

  // Custom InputTypes

  /**
   * miembro findUnique
   */
  export type miembroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the miembro
     */
    select?: miembroSelect<ExtArgs> | null
    /**
     * Filter, which miembro to fetch.
     */
    where: miembroWhereUniqueInput
  }


  /**
   * miembro findUniqueOrThrow
   */
  export type miembroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the miembro
     */
    select?: miembroSelect<ExtArgs> | null
    /**
     * Filter, which miembro to fetch.
     */
    where: miembroWhereUniqueInput
  }


  /**
   * miembro findFirst
   */
  export type miembroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the miembro
     */
    select?: miembroSelect<ExtArgs> | null
    /**
     * Filter, which miembro to fetch.
     */
    where?: miembroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of miembros to fetch.
     */
    orderBy?: miembroOrderByWithRelationInput | miembroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for miembros.
     */
    cursor?: miembroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` miembros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` miembros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of miembros.
     */
    distinct?: MiembroScalarFieldEnum | MiembroScalarFieldEnum[]
  }


  /**
   * miembro findFirstOrThrow
   */
  export type miembroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the miembro
     */
    select?: miembroSelect<ExtArgs> | null
    /**
     * Filter, which miembro to fetch.
     */
    where?: miembroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of miembros to fetch.
     */
    orderBy?: miembroOrderByWithRelationInput | miembroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for miembros.
     */
    cursor?: miembroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` miembros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` miembros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of miembros.
     */
    distinct?: MiembroScalarFieldEnum | MiembroScalarFieldEnum[]
  }


  /**
   * miembro findMany
   */
  export type miembroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the miembro
     */
    select?: miembroSelect<ExtArgs> | null
    /**
     * Filter, which miembros to fetch.
     */
    where?: miembroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of miembros to fetch.
     */
    orderBy?: miembroOrderByWithRelationInput | miembroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing miembros.
     */
    cursor?: miembroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` miembros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` miembros.
     */
    skip?: number
    distinct?: MiembroScalarFieldEnum | MiembroScalarFieldEnum[]
  }


  /**
   * miembro create
   */
  export type miembroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the miembro
     */
    select?: miembroSelect<ExtArgs> | null
    /**
     * The data needed to create a miembro.
     */
    data: XOR<miembroCreateInput, miembroUncheckedCreateInput>
  }


  /**
   * miembro createMany
   */
  export type miembroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many miembros.
     */
    data: miembroCreateManyInput | miembroCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * miembro update
   */
  export type miembroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the miembro
     */
    select?: miembroSelect<ExtArgs> | null
    /**
     * The data needed to update a miembro.
     */
    data: XOR<miembroUpdateInput, miembroUncheckedUpdateInput>
    /**
     * Choose, which miembro to update.
     */
    where: miembroWhereUniqueInput
  }


  /**
   * miembro updateMany
   */
  export type miembroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update miembros.
     */
    data: XOR<miembroUpdateManyMutationInput, miembroUncheckedUpdateManyInput>
    /**
     * Filter which miembros to update
     */
    where?: miembroWhereInput
  }


  /**
   * miembro upsert
   */
  export type miembroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the miembro
     */
    select?: miembroSelect<ExtArgs> | null
    /**
     * The filter to search for the miembro to update in case it exists.
     */
    where: miembroWhereUniqueInput
    /**
     * In case the miembro found by the `where` argument doesn't exist, create a new miembro with this data.
     */
    create: XOR<miembroCreateInput, miembroUncheckedCreateInput>
    /**
     * In case the miembro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<miembroUpdateInput, miembroUncheckedUpdateInput>
  }


  /**
   * miembro delete
   */
  export type miembroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the miembro
     */
    select?: miembroSelect<ExtArgs> | null
    /**
     * Filter which miembro to delete.
     */
    where: miembroWhereUniqueInput
  }


  /**
   * miembro deleteMany
   */
  export type miembroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which miembros to delete
     */
    where?: miembroWhereInput
  }


  /**
   * miembro without action
   */
  export type miembroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the miembro
     */
    select?: miembroSelect<ExtArgs> | null
  }



  /**
   * Model isla
   */

  export type AggregateIsla = {
    _count: IslaCountAggregateOutputType | null
    _avg: IslaAvgAggregateOutputType | null
    _sum: IslaSumAggregateOutputType | null
    _min: IslaMinAggregateOutputType | null
    _max: IslaMaxAggregateOutputType | null
  }

  export type IslaAvgAggregateOutputType = {
    id_isla: number | null
  }

  export type IslaSumAggregateOutputType = {
    id_isla: number | null
  }

  export type IslaMinAggregateOutputType = {
    id_isla: number | null
    nombre: string | null
    modelo_general: Buffer | null
    modelo_especifico: Buffer | null
  }

  export type IslaMaxAggregateOutputType = {
    id_isla: number | null
    nombre: string | null
    modelo_general: Buffer | null
    modelo_especifico: Buffer | null
  }

  export type IslaCountAggregateOutputType = {
    id_isla: number
    nombre: number
    modelo_general: number
    modelo_especifico: number
    _all: number
  }


  export type IslaAvgAggregateInputType = {
    id_isla?: true
  }

  export type IslaSumAggregateInputType = {
    id_isla?: true
  }

  export type IslaMinAggregateInputType = {
    id_isla?: true
    nombre?: true
    modelo_general?: true
    modelo_especifico?: true
  }

  export type IslaMaxAggregateInputType = {
    id_isla?: true
    nombre?: true
    modelo_general?: true
    modelo_especifico?: true
  }

  export type IslaCountAggregateInputType = {
    id_isla?: true
    nombre?: true
    modelo_general?: true
    modelo_especifico?: true
    _all?: true
  }

  export type IslaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which isla to aggregate.
     */
    where?: islaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of islas to fetch.
     */
    orderBy?: islaOrderByWithRelationInput | islaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: islaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` islas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` islas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned islas
    **/
    _count?: true | IslaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: IslaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: IslaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IslaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IslaMaxAggregateInputType
  }

  export type GetIslaAggregateType<T extends IslaAggregateArgs> = {
        [P in keyof T & keyof AggregateIsla]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIsla[P]>
      : GetScalarType<T[P], AggregateIsla[P]>
  }




  export type islaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: islaWhereInput
    orderBy?: islaOrderByWithAggregationInput | islaOrderByWithAggregationInput[]
    by: IslaScalarFieldEnum[] | IslaScalarFieldEnum
    having?: islaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IslaCountAggregateInputType | true
    _avg?: IslaAvgAggregateInputType
    _sum?: IslaSumAggregateInputType
    _min?: IslaMinAggregateInputType
    _max?: IslaMaxAggregateInputType
  }

  export type IslaGroupByOutputType = {
    id_isla: number
    nombre: string
    modelo_general: Buffer | null
    modelo_especifico: Buffer | null
    _count: IslaCountAggregateOutputType | null
    _avg: IslaAvgAggregateOutputType | null
    _sum: IslaSumAggregateOutputType | null
    _min: IslaMinAggregateOutputType | null
    _max: IslaMaxAggregateOutputType | null
  }

  type GetIslaGroupByPayload<T extends islaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IslaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IslaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IslaGroupByOutputType[P]>
            : GetScalarType<T[P], IslaGroupByOutputType[P]>
        }
      >
    >


  export type islaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_isla?: boolean
    nombre?: boolean
    modelo_general?: boolean
    modelo_especifico?: boolean
    video_cuestionario?: boolean | isla$video_cuestionarioArgs<ExtArgs>
    quiz?: boolean | isla$quizArgs<ExtArgs>
    modelo_coml?: boolean | isla$modelo_comlArgs<ExtArgs>
    treasure_hunt?: boolean | isla$treasure_huntArgs<ExtArgs>
    nivel?: boolean | isla$nivelArgs<ExtArgs>
    palabra?: boolean | isla$palabraArgs<ExtArgs>
    _count?: boolean | IslaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["isla"]>

  export type islaSelectScalar = {
    id_isla?: boolean
    nombre?: boolean
    modelo_general?: boolean
    modelo_especifico?: boolean
  }

  export type islaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    video_cuestionario?: boolean | isla$video_cuestionarioArgs<ExtArgs>
    quiz?: boolean | isla$quizArgs<ExtArgs>
    modelo_coml?: boolean | isla$modelo_comlArgs<ExtArgs>
    treasure_hunt?: boolean | isla$treasure_huntArgs<ExtArgs>
    nivel?: boolean | isla$nivelArgs<ExtArgs>
    palabra?: boolean | isla$palabraArgs<ExtArgs>
    _count?: boolean | IslaCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $islaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "isla"
    objects: {
      video_cuestionario: Prisma.$video_cuestionarioPayload<ExtArgs>[]
      quiz: Prisma.$quizPayload<ExtArgs>[]
      modelo_coml: Prisma.$modelo_comlPayload<ExtArgs>[]
      treasure_hunt: Prisma.$treasure_huntPayload<ExtArgs>[]
      nivel: Prisma.$nivelPayload<ExtArgs>[]
      palabra: Prisma.$palabraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_isla: number
      nombre: string
      modelo_general: Buffer | null
      modelo_especifico: Buffer | null
    }, ExtArgs["result"]["isla"]>
    composites: {}
  }


  type islaGetPayload<S extends boolean | null | undefined | islaDefaultArgs> = $Result.GetResult<Prisma.$islaPayload, S>

  type islaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<islaFindManyArgs, 'select' | 'include'> & {
      select?: IslaCountAggregateInputType | true
    }

  export interface islaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['isla'], meta: { name: 'isla' } }
    /**
     * Find zero or one Isla that matches the filter.
     * @param {islaFindUniqueArgs} args - Arguments to find a Isla
     * @example
     * // Get one Isla
     * const isla = await prisma.isla.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends islaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, islaFindUniqueArgs<ExtArgs>>
    ): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Isla that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {islaFindUniqueOrThrowArgs} args - Arguments to find a Isla
     * @example
     * // Get one Isla
     * const isla = await prisma.isla.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends islaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, islaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Isla that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {islaFindFirstArgs} args - Arguments to find a Isla
     * @example
     * // Get one Isla
     * const isla = await prisma.isla.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends islaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, islaFindFirstArgs<ExtArgs>>
    ): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Isla that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {islaFindFirstOrThrowArgs} args - Arguments to find a Isla
     * @example
     * // Get one Isla
     * const isla = await prisma.isla.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends islaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, islaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Islas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {islaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Islas
     * const islas = await prisma.isla.findMany()
     * 
     * // Get first 10 Islas
     * const islas = await prisma.isla.findMany({ take: 10 })
     * 
     * // Only select the `id_isla`
     * const islaWithId_islaOnly = await prisma.isla.findMany({ select: { id_isla: true } })
     * 
    **/
    findMany<T extends islaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, islaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Isla.
     * @param {islaCreateArgs} args - Arguments to create a Isla.
     * @example
     * // Create one Isla
     * const Isla = await prisma.isla.create({
     *   data: {
     *     // ... data to create a Isla
     *   }
     * })
     * 
    **/
    create<T extends islaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, islaCreateArgs<ExtArgs>>
    ): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Islas.
     *     @param {islaCreateManyArgs} args - Arguments to create many Islas.
     *     @example
     *     // Create many Islas
     *     const isla = await prisma.isla.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends islaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, islaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Isla.
     * @param {islaDeleteArgs} args - Arguments to delete one Isla.
     * @example
     * // Delete one Isla
     * const Isla = await prisma.isla.delete({
     *   where: {
     *     // ... filter to delete one Isla
     *   }
     * })
     * 
    **/
    delete<T extends islaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, islaDeleteArgs<ExtArgs>>
    ): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Isla.
     * @param {islaUpdateArgs} args - Arguments to update one Isla.
     * @example
     * // Update one Isla
     * const isla = await prisma.isla.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends islaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, islaUpdateArgs<ExtArgs>>
    ): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Islas.
     * @param {islaDeleteManyArgs} args - Arguments to filter Islas to delete.
     * @example
     * // Delete a few Islas
     * const { count } = await prisma.isla.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends islaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, islaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Islas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {islaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Islas
     * const isla = await prisma.isla.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends islaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, islaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Isla.
     * @param {islaUpsertArgs} args - Arguments to update or create a Isla.
     * @example
     * // Update or create a Isla
     * const isla = await prisma.isla.upsert({
     *   create: {
     *     // ... data to create a Isla
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Isla we want to update
     *   }
     * })
    **/
    upsert<T extends islaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, islaUpsertArgs<ExtArgs>>
    ): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Islas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {islaCountArgs} args - Arguments to filter Islas to count.
     * @example
     * // Count the number of Islas
     * const count = await prisma.isla.count({
     *   where: {
     *     // ... the filter for the Islas we want to count
     *   }
     * })
    **/
    count<T extends islaCountArgs>(
      args?: Subset<T, islaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IslaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Isla.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IslaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IslaAggregateArgs>(args: Subset<T, IslaAggregateArgs>): Prisma.PrismaPromise<GetIslaAggregateType<T>>

    /**
     * Group by Isla.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {islaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends islaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: islaGroupByArgs['orderBy'] }
        : { orderBy?: islaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, islaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIslaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the isla model
   */
  readonly fields: islaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for isla.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__islaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    video_cuestionario<T extends isla$video_cuestionarioArgs<ExtArgs> = {}>(args?: Subset<T, isla$video_cuestionarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'findMany'> | Null>;

    quiz<T extends isla$quizArgs<ExtArgs> = {}>(args?: Subset<T, isla$quizArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$quizPayload<ExtArgs>, T, 'findMany'> | Null>;

    modelo_coml<T extends isla$modelo_comlArgs<ExtArgs> = {}>(args?: Subset<T, isla$modelo_comlArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$modelo_comlPayload<ExtArgs>, T, 'findMany'> | Null>;

    treasure_hunt<T extends isla$treasure_huntArgs<ExtArgs> = {}>(args?: Subset<T, isla$treasure_huntArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$treasure_huntPayload<ExtArgs>, T, 'findMany'> | Null>;

    nivel<T extends isla$nivelArgs<ExtArgs> = {}>(args?: Subset<T, isla$nivelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'findMany'> | Null>;

    palabra<T extends isla$palabraArgs<ExtArgs> = {}>(args?: Subset<T, isla$palabraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$palabraPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the isla model
   */ 
  interface islaFieldRefs {
    readonly id_isla: FieldRef<"isla", 'Int'>
    readonly nombre: FieldRef<"isla", 'String'>
    readonly modelo_general: FieldRef<"isla", 'Bytes'>
    readonly modelo_especifico: FieldRef<"isla", 'Bytes'>
  }
    

  // Custom InputTypes

  /**
   * isla findUnique
   */
  export type islaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the isla
     */
    select?: islaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: islaInclude<ExtArgs> | null
    /**
     * Filter, which isla to fetch.
     */
    where: islaWhereUniqueInput
  }


  /**
   * isla findUniqueOrThrow
   */
  export type islaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the isla
     */
    select?: islaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: islaInclude<ExtArgs> | null
    /**
     * Filter, which isla to fetch.
     */
    where: islaWhereUniqueInput
  }


  /**
   * isla findFirst
   */
  export type islaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the isla
     */
    select?: islaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: islaInclude<ExtArgs> | null
    /**
     * Filter, which isla to fetch.
     */
    where?: islaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of islas to fetch.
     */
    orderBy?: islaOrderByWithRelationInput | islaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for islas.
     */
    cursor?: islaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` islas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` islas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of islas.
     */
    distinct?: IslaScalarFieldEnum | IslaScalarFieldEnum[]
  }


  /**
   * isla findFirstOrThrow
   */
  export type islaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the isla
     */
    select?: islaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: islaInclude<ExtArgs> | null
    /**
     * Filter, which isla to fetch.
     */
    where?: islaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of islas to fetch.
     */
    orderBy?: islaOrderByWithRelationInput | islaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for islas.
     */
    cursor?: islaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` islas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` islas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of islas.
     */
    distinct?: IslaScalarFieldEnum | IslaScalarFieldEnum[]
  }


  /**
   * isla findMany
   */
  export type islaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the isla
     */
    select?: islaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: islaInclude<ExtArgs> | null
    /**
     * Filter, which islas to fetch.
     */
    where?: islaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of islas to fetch.
     */
    orderBy?: islaOrderByWithRelationInput | islaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing islas.
     */
    cursor?: islaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` islas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` islas.
     */
    skip?: number
    distinct?: IslaScalarFieldEnum | IslaScalarFieldEnum[]
  }


  /**
   * isla create
   */
  export type islaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the isla
     */
    select?: islaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: islaInclude<ExtArgs> | null
    /**
     * The data needed to create a isla.
     */
    data: XOR<islaCreateInput, islaUncheckedCreateInput>
  }


  /**
   * isla createMany
   */
  export type islaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many islas.
     */
    data: islaCreateManyInput | islaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * isla update
   */
  export type islaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the isla
     */
    select?: islaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: islaInclude<ExtArgs> | null
    /**
     * The data needed to update a isla.
     */
    data: XOR<islaUpdateInput, islaUncheckedUpdateInput>
    /**
     * Choose, which isla to update.
     */
    where: islaWhereUniqueInput
  }


  /**
   * isla updateMany
   */
  export type islaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update islas.
     */
    data: XOR<islaUpdateManyMutationInput, islaUncheckedUpdateManyInput>
    /**
     * Filter which islas to update
     */
    where?: islaWhereInput
  }


  /**
   * isla upsert
   */
  export type islaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the isla
     */
    select?: islaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: islaInclude<ExtArgs> | null
    /**
     * The filter to search for the isla to update in case it exists.
     */
    where: islaWhereUniqueInput
    /**
     * In case the isla found by the `where` argument doesn't exist, create a new isla with this data.
     */
    create: XOR<islaCreateInput, islaUncheckedCreateInput>
    /**
     * In case the isla was found with the provided `where` argument, update it with this data.
     */
    update: XOR<islaUpdateInput, islaUncheckedUpdateInput>
  }


  /**
   * isla delete
   */
  export type islaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the isla
     */
    select?: islaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: islaInclude<ExtArgs> | null
    /**
     * Filter which isla to delete.
     */
    where: islaWhereUniqueInput
  }


  /**
   * isla deleteMany
   */
  export type islaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which islas to delete
     */
    where?: islaWhereInput
  }


  /**
   * isla.video_cuestionario
   */
  export type isla$video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_cuestionario
     */
    select?: video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: video_cuestionarioInclude<ExtArgs> | null
    where?: video_cuestionarioWhereInput
    orderBy?: video_cuestionarioOrderByWithRelationInput | video_cuestionarioOrderByWithRelationInput[]
    cursor?: video_cuestionarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Video_cuestionarioScalarFieldEnum | Video_cuestionarioScalarFieldEnum[]
  }


  /**
   * isla.quiz
   */
  export type isla$quizArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quiz
     */
    select?: quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: quizInclude<ExtArgs> | null
    where?: quizWhereInput
    orderBy?: quizOrderByWithRelationInput | quizOrderByWithRelationInput[]
    cursor?: quizWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuizScalarFieldEnum | QuizScalarFieldEnum[]
  }


  /**
   * isla.modelo_coml
   */
  export type isla$modelo_comlArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modelo_coml
     */
    select?: modelo_comlSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: modelo_comlInclude<ExtArgs> | null
    where?: modelo_comlWhereInput
    orderBy?: modelo_comlOrderByWithRelationInput | modelo_comlOrderByWithRelationInput[]
    cursor?: modelo_comlWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Modelo_comlScalarFieldEnum | Modelo_comlScalarFieldEnum[]
  }


  /**
   * isla.treasure_hunt
   */
  export type isla$treasure_huntArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the treasure_hunt
     */
    select?: treasure_huntSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: treasure_huntInclude<ExtArgs> | null
    where?: treasure_huntWhereInput
    orderBy?: treasure_huntOrderByWithRelationInput | treasure_huntOrderByWithRelationInput[]
    cursor?: treasure_huntWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Treasure_huntScalarFieldEnum | Treasure_huntScalarFieldEnum[]
  }


  /**
   * isla.nivel
   */
  export type isla$nivelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    where?: nivelWhereInput
    orderBy?: nivelOrderByWithRelationInput | nivelOrderByWithRelationInput[]
    cursor?: nivelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NivelScalarFieldEnum | NivelScalarFieldEnum[]
  }


  /**
   * isla.palabra
   */
  export type isla$palabraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabra
     */
    select?: palabraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabraInclude<ExtArgs> | null
    where?: palabraWhereInput
    orderBy?: palabraOrderByWithRelationInput | palabraOrderByWithRelationInput[]
    cursor?: palabraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PalabraScalarFieldEnum | PalabraScalarFieldEnum[]
  }


  /**
   * isla without action
   */
  export type islaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the isla
     */
    select?: islaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: islaInclude<ExtArgs> | null
  }



  /**
   * Model video_cuestionario
   */

  export type AggregateVideo_cuestionario = {
    _count: Video_cuestionarioCountAggregateOutputType | null
    _avg: Video_cuestionarioAvgAggregateOutputType | null
    _sum: Video_cuestionarioSumAggregateOutputType | null
    _min: Video_cuestionarioMinAggregateOutputType | null
    _max: Video_cuestionarioMaxAggregateOutputType | null
  }

  export type Video_cuestionarioAvgAggregateOutputType = {
    id_video_cuestionario: number | null
    id_isla: number | null
  }

  export type Video_cuestionarioSumAggregateOutputType = {
    id_video_cuestionario: number | null
    id_isla: number | null
  }

  export type Video_cuestionarioMinAggregateOutputType = {
    id_video_cuestionario: number | null
    nombre: string | null
    id_isla: number | null
  }

  export type Video_cuestionarioMaxAggregateOutputType = {
    id_video_cuestionario: number | null
    nombre: string | null
    id_isla: number | null
  }

  export type Video_cuestionarioCountAggregateOutputType = {
    id_video_cuestionario: number
    nombre: number
    id_isla: number
    _all: number
  }


  export type Video_cuestionarioAvgAggregateInputType = {
    id_video_cuestionario?: true
    id_isla?: true
  }

  export type Video_cuestionarioSumAggregateInputType = {
    id_video_cuestionario?: true
    id_isla?: true
  }

  export type Video_cuestionarioMinAggregateInputType = {
    id_video_cuestionario?: true
    nombre?: true
    id_isla?: true
  }

  export type Video_cuestionarioMaxAggregateInputType = {
    id_video_cuestionario?: true
    nombre?: true
    id_isla?: true
  }

  export type Video_cuestionarioCountAggregateInputType = {
    id_video_cuestionario?: true
    nombre?: true
    id_isla?: true
    _all?: true
  }

  export type Video_cuestionarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which video_cuestionario to aggregate.
     */
    where?: video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of video_cuestionarios to fetch.
     */
    orderBy?: video_cuestionarioOrderByWithRelationInput | video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned video_cuestionarios
    **/
    _count?: true | Video_cuestionarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Video_cuestionarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Video_cuestionarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Video_cuestionarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Video_cuestionarioMaxAggregateInputType
  }

  export type GetVideo_cuestionarioAggregateType<T extends Video_cuestionarioAggregateArgs> = {
        [P in keyof T & keyof AggregateVideo_cuestionario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVideo_cuestionario[P]>
      : GetScalarType<T[P], AggregateVideo_cuestionario[P]>
  }




  export type video_cuestionarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: video_cuestionarioWhereInput
    orderBy?: video_cuestionarioOrderByWithAggregationInput | video_cuestionarioOrderByWithAggregationInput[]
    by: Video_cuestionarioScalarFieldEnum[] | Video_cuestionarioScalarFieldEnum
    having?: video_cuestionarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Video_cuestionarioCountAggregateInputType | true
    _avg?: Video_cuestionarioAvgAggregateInputType
    _sum?: Video_cuestionarioSumAggregateInputType
    _min?: Video_cuestionarioMinAggregateInputType
    _max?: Video_cuestionarioMaxAggregateInputType
  }

  export type Video_cuestionarioGroupByOutputType = {
    id_video_cuestionario: number
    nombre: string
    id_isla: number
    _count: Video_cuestionarioCountAggregateOutputType | null
    _avg: Video_cuestionarioAvgAggregateOutputType | null
    _sum: Video_cuestionarioSumAggregateOutputType | null
    _min: Video_cuestionarioMinAggregateOutputType | null
    _max: Video_cuestionarioMaxAggregateOutputType | null
  }

  type GetVideo_cuestionarioGroupByPayload<T extends video_cuestionarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Video_cuestionarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Video_cuestionarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Video_cuestionarioGroupByOutputType[P]>
            : GetScalarType<T[P], Video_cuestionarioGroupByOutputType[P]>
        }
      >
    >


  export type video_cuestionarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_video_cuestionario?: boolean
    nombre?: boolean
    id_isla?: boolean
    isla?: boolean | islaDefaultArgs<ExtArgs>
    nivel?: boolean | video_cuestionario$nivelArgs<ExtArgs>
    parte_video_cuestionario?: boolean | video_cuestionario$parte_video_cuestionarioArgs<ExtArgs>
    palabras_video_cuestionario?: boolean | video_cuestionario$palabras_video_cuestionarioArgs<ExtArgs>
    _count?: boolean | Video_cuestionarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["video_cuestionario"]>

  export type video_cuestionarioSelectScalar = {
    id_video_cuestionario?: boolean
    nombre?: boolean
    id_isla?: boolean
  }

  export type video_cuestionarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    isla?: boolean | islaDefaultArgs<ExtArgs>
    nivel?: boolean | video_cuestionario$nivelArgs<ExtArgs>
    parte_video_cuestionario?: boolean | video_cuestionario$parte_video_cuestionarioArgs<ExtArgs>
    palabras_video_cuestionario?: boolean | video_cuestionario$palabras_video_cuestionarioArgs<ExtArgs>
    _count?: boolean | Video_cuestionarioCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $video_cuestionarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "video_cuestionario"
    objects: {
      isla: Prisma.$islaPayload<ExtArgs>
      nivel: Prisma.$nivelPayload<ExtArgs>[]
      parte_video_cuestionario: Prisma.$parte_video_cuestionarioPayload<ExtArgs>[]
      palabras_video_cuestionario: Prisma.$palabras_video_cuestionarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_video_cuestionario: number
      nombre: string
      id_isla: number
    }, ExtArgs["result"]["video_cuestionario"]>
    composites: {}
  }


  type video_cuestionarioGetPayload<S extends boolean | null | undefined | video_cuestionarioDefaultArgs> = $Result.GetResult<Prisma.$video_cuestionarioPayload, S>

  type video_cuestionarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<video_cuestionarioFindManyArgs, 'select' | 'include'> & {
      select?: Video_cuestionarioCountAggregateInputType | true
    }

  export interface video_cuestionarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['video_cuestionario'], meta: { name: 'video_cuestionario' } }
    /**
     * Find zero or one Video_cuestionario that matches the filter.
     * @param {video_cuestionarioFindUniqueArgs} args - Arguments to find a Video_cuestionario
     * @example
     * // Get one Video_cuestionario
     * const video_cuestionario = await prisma.video_cuestionario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends video_cuestionarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, video_cuestionarioFindUniqueArgs<ExtArgs>>
    ): Prisma__video_cuestionarioClient<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Video_cuestionario that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {video_cuestionarioFindUniqueOrThrowArgs} args - Arguments to find a Video_cuestionario
     * @example
     * // Get one Video_cuestionario
     * const video_cuestionario = await prisma.video_cuestionario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__video_cuestionarioClient<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Video_cuestionario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_cuestionarioFindFirstArgs} args - Arguments to find a Video_cuestionario
     * @example
     * // Get one Video_cuestionario
     * const video_cuestionario = await prisma.video_cuestionario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends video_cuestionarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, video_cuestionarioFindFirstArgs<ExtArgs>>
    ): Prisma__video_cuestionarioClient<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Video_cuestionario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_cuestionarioFindFirstOrThrowArgs} args - Arguments to find a Video_cuestionario
     * @example
     * // Get one Video_cuestionario
     * const video_cuestionario = await prisma.video_cuestionario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends video_cuestionarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, video_cuestionarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__video_cuestionarioClient<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Video_cuestionarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_cuestionarioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Video_cuestionarios
     * const video_cuestionarios = await prisma.video_cuestionario.findMany()
     * 
     * // Get first 10 Video_cuestionarios
     * const video_cuestionarios = await prisma.video_cuestionario.findMany({ take: 10 })
     * 
     * // Only select the `id_video_cuestionario`
     * const video_cuestionarioWithId_video_cuestionarioOnly = await prisma.video_cuestionario.findMany({ select: { id_video_cuestionario: true } })
     * 
    **/
    findMany<T extends video_cuestionarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, video_cuestionarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Video_cuestionario.
     * @param {video_cuestionarioCreateArgs} args - Arguments to create a Video_cuestionario.
     * @example
     * // Create one Video_cuestionario
     * const Video_cuestionario = await prisma.video_cuestionario.create({
     *   data: {
     *     // ... data to create a Video_cuestionario
     *   }
     * })
     * 
    **/
    create<T extends video_cuestionarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, video_cuestionarioCreateArgs<ExtArgs>>
    ): Prisma__video_cuestionarioClient<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Video_cuestionarios.
     *     @param {video_cuestionarioCreateManyArgs} args - Arguments to create many Video_cuestionarios.
     *     @example
     *     // Create many Video_cuestionarios
     *     const video_cuestionario = await prisma.video_cuestionario.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends video_cuestionarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, video_cuestionarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Video_cuestionario.
     * @param {video_cuestionarioDeleteArgs} args - Arguments to delete one Video_cuestionario.
     * @example
     * // Delete one Video_cuestionario
     * const Video_cuestionario = await prisma.video_cuestionario.delete({
     *   where: {
     *     // ... filter to delete one Video_cuestionario
     *   }
     * })
     * 
    **/
    delete<T extends video_cuestionarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, video_cuestionarioDeleteArgs<ExtArgs>>
    ): Prisma__video_cuestionarioClient<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Video_cuestionario.
     * @param {video_cuestionarioUpdateArgs} args - Arguments to update one Video_cuestionario.
     * @example
     * // Update one Video_cuestionario
     * const video_cuestionario = await prisma.video_cuestionario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends video_cuestionarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, video_cuestionarioUpdateArgs<ExtArgs>>
    ): Prisma__video_cuestionarioClient<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Video_cuestionarios.
     * @param {video_cuestionarioDeleteManyArgs} args - Arguments to filter Video_cuestionarios to delete.
     * @example
     * // Delete a few Video_cuestionarios
     * const { count } = await prisma.video_cuestionario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends video_cuestionarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, video_cuestionarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Video_cuestionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_cuestionarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Video_cuestionarios
     * const video_cuestionario = await prisma.video_cuestionario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends video_cuestionarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, video_cuestionarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Video_cuestionario.
     * @param {video_cuestionarioUpsertArgs} args - Arguments to update or create a Video_cuestionario.
     * @example
     * // Update or create a Video_cuestionario
     * const video_cuestionario = await prisma.video_cuestionario.upsert({
     *   create: {
     *     // ... data to create a Video_cuestionario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Video_cuestionario we want to update
     *   }
     * })
    **/
    upsert<T extends video_cuestionarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, video_cuestionarioUpsertArgs<ExtArgs>>
    ): Prisma__video_cuestionarioClient<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Video_cuestionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_cuestionarioCountArgs} args - Arguments to filter Video_cuestionarios to count.
     * @example
     * // Count the number of Video_cuestionarios
     * const count = await prisma.video_cuestionario.count({
     *   where: {
     *     // ... the filter for the Video_cuestionarios we want to count
     *   }
     * })
    **/
    count<T extends video_cuestionarioCountArgs>(
      args?: Subset<T, video_cuestionarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Video_cuestionarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Video_cuestionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Video_cuestionarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Video_cuestionarioAggregateArgs>(args: Subset<T, Video_cuestionarioAggregateArgs>): Prisma.PrismaPromise<GetVideo_cuestionarioAggregateType<T>>

    /**
     * Group by Video_cuestionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_cuestionarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends video_cuestionarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: video_cuestionarioGroupByArgs['orderBy'] }
        : { orderBy?: video_cuestionarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, video_cuestionarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVideo_cuestionarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the video_cuestionario model
   */
  readonly fields: video_cuestionarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for video_cuestionario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__video_cuestionarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    isla<T extends islaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, islaDefaultArgs<ExtArgs>>): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    nivel<T extends video_cuestionario$nivelArgs<ExtArgs> = {}>(args?: Subset<T, video_cuestionario$nivelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'findMany'> | Null>;

    parte_video_cuestionario<T extends video_cuestionario$parte_video_cuestionarioArgs<ExtArgs> = {}>(args?: Subset<T, video_cuestionario$parte_video_cuestionarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parte_video_cuestionarioPayload<ExtArgs>, T, 'findMany'> | Null>;

    palabras_video_cuestionario<T extends video_cuestionario$palabras_video_cuestionarioArgs<ExtArgs> = {}>(args?: Subset<T, video_cuestionario$palabras_video_cuestionarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$palabras_video_cuestionarioPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the video_cuestionario model
   */ 
  interface video_cuestionarioFieldRefs {
    readonly id_video_cuestionario: FieldRef<"video_cuestionario", 'Int'>
    readonly nombre: FieldRef<"video_cuestionario", 'String'>
    readonly id_isla: FieldRef<"video_cuestionario", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * video_cuestionario findUnique
   */
  export type video_cuestionarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_cuestionario
     */
    select?: video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which video_cuestionario to fetch.
     */
    where: video_cuestionarioWhereUniqueInput
  }


  /**
   * video_cuestionario findUniqueOrThrow
   */
  export type video_cuestionarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_cuestionario
     */
    select?: video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which video_cuestionario to fetch.
     */
    where: video_cuestionarioWhereUniqueInput
  }


  /**
   * video_cuestionario findFirst
   */
  export type video_cuestionarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_cuestionario
     */
    select?: video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which video_cuestionario to fetch.
     */
    where?: video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of video_cuestionarios to fetch.
     */
    orderBy?: video_cuestionarioOrderByWithRelationInput | video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for video_cuestionarios.
     */
    cursor?: video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of video_cuestionarios.
     */
    distinct?: Video_cuestionarioScalarFieldEnum | Video_cuestionarioScalarFieldEnum[]
  }


  /**
   * video_cuestionario findFirstOrThrow
   */
  export type video_cuestionarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_cuestionario
     */
    select?: video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which video_cuestionario to fetch.
     */
    where?: video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of video_cuestionarios to fetch.
     */
    orderBy?: video_cuestionarioOrderByWithRelationInput | video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for video_cuestionarios.
     */
    cursor?: video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of video_cuestionarios.
     */
    distinct?: Video_cuestionarioScalarFieldEnum | Video_cuestionarioScalarFieldEnum[]
  }


  /**
   * video_cuestionario findMany
   */
  export type video_cuestionarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_cuestionario
     */
    select?: video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which video_cuestionarios to fetch.
     */
    where?: video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of video_cuestionarios to fetch.
     */
    orderBy?: video_cuestionarioOrderByWithRelationInput | video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing video_cuestionarios.
     */
    cursor?: video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` video_cuestionarios.
     */
    skip?: number
    distinct?: Video_cuestionarioScalarFieldEnum | Video_cuestionarioScalarFieldEnum[]
  }


  /**
   * video_cuestionario create
   */
  export type video_cuestionarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_cuestionario
     */
    select?: video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: video_cuestionarioInclude<ExtArgs> | null
    /**
     * The data needed to create a video_cuestionario.
     */
    data: XOR<video_cuestionarioCreateInput, video_cuestionarioUncheckedCreateInput>
  }


  /**
   * video_cuestionario createMany
   */
  export type video_cuestionarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many video_cuestionarios.
     */
    data: video_cuestionarioCreateManyInput | video_cuestionarioCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * video_cuestionario update
   */
  export type video_cuestionarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_cuestionario
     */
    select?: video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: video_cuestionarioInclude<ExtArgs> | null
    /**
     * The data needed to update a video_cuestionario.
     */
    data: XOR<video_cuestionarioUpdateInput, video_cuestionarioUncheckedUpdateInput>
    /**
     * Choose, which video_cuestionario to update.
     */
    where: video_cuestionarioWhereUniqueInput
  }


  /**
   * video_cuestionario updateMany
   */
  export type video_cuestionarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update video_cuestionarios.
     */
    data: XOR<video_cuestionarioUpdateManyMutationInput, video_cuestionarioUncheckedUpdateManyInput>
    /**
     * Filter which video_cuestionarios to update
     */
    where?: video_cuestionarioWhereInput
  }


  /**
   * video_cuestionario upsert
   */
  export type video_cuestionarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_cuestionario
     */
    select?: video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: video_cuestionarioInclude<ExtArgs> | null
    /**
     * The filter to search for the video_cuestionario to update in case it exists.
     */
    where: video_cuestionarioWhereUniqueInput
    /**
     * In case the video_cuestionario found by the `where` argument doesn't exist, create a new video_cuestionario with this data.
     */
    create: XOR<video_cuestionarioCreateInput, video_cuestionarioUncheckedCreateInput>
    /**
     * In case the video_cuestionario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<video_cuestionarioUpdateInput, video_cuestionarioUncheckedUpdateInput>
  }


  /**
   * video_cuestionario delete
   */
  export type video_cuestionarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_cuestionario
     */
    select?: video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter which video_cuestionario to delete.
     */
    where: video_cuestionarioWhereUniqueInput
  }


  /**
   * video_cuestionario deleteMany
   */
  export type video_cuestionarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which video_cuestionarios to delete
     */
    where?: video_cuestionarioWhereInput
  }


  /**
   * video_cuestionario.nivel
   */
  export type video_cuestionario$nivelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    where?: nivelWhereInput
    orderBy?: nivelOrderByWithRelationInput | nivelOrderByWithRelationInput[]
    cursor?: nivelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NivelScalarFieldEnum | NivelScalarFieldEnum[]
  }


  /**
   * video_cuestionario.parte_video_cuestionario
   */
  export type video_cuestionario$parte_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parte_video_cuestionario
     */
    select?: parte_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: parte_video_cuestionarioInclude<ExtArgs> | null
    where?: parte_video_cuestionarioWhereInput
    orderBy?: parte_video_cuestionarioOrderByWithRelationInput | parte_video_cuestionarioOrderByWithRelationInput[]
    cursor?: parte_video_cuestionarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Parte_video_cuestionarioScalarFieldEnum | Parte_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * video_cuestionario.palabras_video_cuestionario
   */
  export type video_cuestionario$palabras_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabras_video_cuestionario
     */
    select?: palabras_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabras_video_cuestionarioInclude<ExtArgs> | null
    where?: palabras_video_cuestionarioWhereInput
    orderBy?: palabras_video_cuestionarioOrderByWithRelationInput | palabras_video_cuestionarioOrderByWithRelationInput[]
    cursor?: palabras_video_cuestionarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Palabras_video_cuestionarioScalarFieldEnum | Palabras_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * video_cuestionario without action
   */
  export type video_cuestionarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_cuestionario
     */
    select?: video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: video_cuestionarioInclude<ExtArgs> | null
  }



  /**
   * Model quiz
   */

  export type AggregateQuiz = {
    _count: QuizCountAggregateOutputType | null
    _avg: QuizAvgAggregateOutputType | null
    _sum: QuizSumAggregateOutputType | null
    _min: QuizMinAggregateOutputType | null
    _max: QuizMaxAggregateOutputType | null
  }

  export type QuizAvgAggregateOutputType = {
    id_quiz: number | null
    id_isla: number | null
  }

  export type QuizSumAggregateOutputType = {
    id_quiz: number | null
    id_isla: number | null
  }

  export type QuizMinAggregateOutputType = {
    id_quiz: number | null
    id_isla: number | null
    nombre: string | null
  }

  export type QuizMaxAggregateOutputType = {
    id_quiz: number | null
    id_isla: number | null
    nombre: string | null
  }

  export type QuizCountAggregateOutputType = {
    id_quiz: number
    id_isla: number
    nombre: number
    _all: number
  }


  export type QuizAvgAggregateInputType = {
    id_quiz?: true
    id_isla?: true
  }

  export type QuizSumAggregateInputType = {
    id_quiz?: true
    id_isla?: true
  }

  export type QuizMinAggregateInputType = {
    id_quiz?: true
    id_isla?: true
    nombre?: true
  }

  export type QuizMaxAggregateInputType = {
    id_quiz?: true
    id_isla?: true
    nombre?: true
  }

  export type QuizCountAggregateInputType = {
    id_quiz?: true
    id_isla?: true
    nombre?: true
    _all?: true
  }

  export type QuizAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which quiz to aggregate.
     */
    where?: quizWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of quizzes to fetch.
     */
    orderBy?: quizOrderByWithRelationInput | quizOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: quizWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` quizzes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` quizzes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned quizzes
    **/
    _count?: true | QuizCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QuizAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QuizSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QuizMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QuizMaxAggregateInputType
  }

  export type GetQuizAggregateType<T extends QuizAggregateArgs> = {
        [P in keyof T & keyof AggregateQuiz]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQuiz[P]>
      : GetScalarType<T[P], AggregateQuiz[P]>
  }




  export type quizGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: quizWhereInput
    orderBy?: quizOrderByWithAggregationInput | quizOrderByWithAggregationInput[]
    by: QuizScalarFieldEnum[] | QuizScalarFieldEnum
    having?: quizScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QuizCountAggregateInputType | true
    _avg?: QuizAvgAggregateInputType
    _sum?: QuizSumAggregateInputType
    _min?: QuizMinAggregateInputType
    _max?: QuizMaxAggregateInputType
  }

  export type QuizGroupByOutputType = {
    id_quiz: number
    id_isla: number
    nombre: string
    _count: QuizCountAggregateOutputType | null
    _avg: QuizAvgAggregateOutputType | null
    _sum: QuizSumAggregateOutputType | null
    _min: QuizMinAggregateOutputType | null
    _max: QuizMaxAggregateOutputType | null
  }

  type GetQuizGroupByPayload<T extends quizGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QuizGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QuizGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QuizGroupByOutputType[P]>
            : GetScalarType<T[P], QuizGroupByOutputType[P]>
        }
      >
    >


  export type quizSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_quiz?: boolean
    id_isla?: boolean
    nombre?: boolean
    isla?: boolean | islaDefaultArgs<ExtArgs>
    nivel?: boolean | quiz$nivelArgs<ExtArgs>
    detalles_quiz?: boolean | quiz$detalles_quizArgs<ExtArgs>
    _count?: boolean | QuizCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["quiz"]>

  export type quizSelectScalar = {
    id_quiz?: boolean
    id_isla?: boolean
    nombre?: boolean
  }

  export type quizInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    isla?: boolean | islaDefaultArgs<ExtArgs>
    nivel?: boolean | quiz$nivelArgs<ExtArgs>
    detalles_quiz?: boolean | quiz$detalles_quizArgs<ExtArgs>
    _count?: boolean | QuizCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $quizPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "quiz"
    objects: {
      isla: Prisma.$islaPayload<ExtArgs>
      nivel: Prisma.$nivelPayload<ExtArgs>[]
      detalles_quiz: Prisma.$detalles_quizPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_quiz: number
      id_isla: number
      nombre: string
    }, ExtArgs["result"]["quiz"]>
    composites: {}
  }


  type quizGetPayload<S extends boolean | null | undefined | quizDefaultArgs> = $Result.GetResult<Prisma.$quizPayload, S>

  type quizCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<quizFindManyArgs, 'select' | 'include'> & {
      select?: QuizCountAggregateInputType | true
    }

  export interface quizDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['quiz'], meta: { name: 'quiz' } }
    /**
     * Find zero or one Quiz that matches the filter.
     * @param {quizFindUniqueArgs} args - Arguments to find a Quiz
     * @example
     * // Get one Quiz
     * const quiz = await prisma.quiz.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends quizFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, quizFindUniqueArgs<ExtArgs>>
    ): Prisma__quizClient<$Result.GetResult<Prisma.$quizPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Quiz that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {quizFindUniqueOrThrowArgs} args - Arguments to find a Quiz
     * @example
     * // Get one Quiz
     * const quiz = await prisma.quiz.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends quizFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, quizFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__quizClient<$Result.GetResult<Prisma.$quizPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Quiz that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quizFindFirstArgs} args - Arguments to find a Quiz
     * @example
     * // Get one Quiz
     * const quiz = await prisma.quiz.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends quizFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, quizFindFirstArgs<ExtArgs>>
    ): Prisma__quizClient<$Result.GetResult<Prisma.$quizPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Quiz that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quizFindFirstOrThrowArgs} args - Arguments to find a Quiz
     * @example
     * // Get one Quiz
     * const quiz = await prisma.quiz.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends quizFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, quizFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__quizClient<$Result.GetResult<Prisma.$quizPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Quizzes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quizFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Quizzes
     * const quizzes = await prisma.quiz.findMany()
     * 
     * // Get first 10 Quizzes
     * const quizzes = await prisma.quiz.findMany({ take: 10 })
     * 
     * // Only select the `id_quiz`
     * const quizWithId_quizOnly = await prisma.quiz.findMany({ select: { id_quiz: true } })
     * 
    **/
    findMany<T extends quizFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, quizFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$quizPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Quiz.
     * @param {quizCreateArgs} args - Arguments to create a Quiz.
     * @example
     * // Create one Quiz
     * const Quiz = await prisma.quiz.create({
     *   data: {
     *     // ... data to create a Quiz
     *   }
     * })
     * 
    **/
    create<T extends quizCreateArgs<ExtArgs>>(
      args: SelectSubset<T, quizCreateArgs<ExtArgs>>
    ): Prisma__quizClient<$Result.GetResult<Prisma.$quizPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Quizzes.
     *     @param {quizCreateManyArgs} args - Arguments to create many Quizzes.
     *     @example
     *     // Create many Quizzes
     *     const quiz = await prisma.quiz.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends quizCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, quizCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Quiz.
     * @param {quizDeleteArgs} args - Arguments to delete one Quiz.
     * @example
     * // Delete one Quiz
     * const Quiz = await prisma.quiz.delete({
     *   where: {
     *     // ... filter to delete one Quiz
     *   }
     * })
     * 
    **/
    delete<T extends quizDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, quizDeleteArgs<ExtArgs>>
    ): Prisma__quizClient<$Result.GetResult<Prisma.$quizPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Quiz.
     * @param {quizUpdateArgs} args - Arguments to update one Quiz.
     * @example
     * // Update one Quiz
     * const quiz = await prisma.quiz.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends quizUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, quizUpdateArgs<ExtArgs>>
    ): Prisma__quizClient<$Result.GetResult<Prisma.$quizPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Quizzes.
     * @param {quizDeleteManyArgs} args - Arguments to filter Quizzes to delete.
     * @example
     * // Delete a few Quizzes
     * const { count } = await prisma.quiz.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends quizDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, quizDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Quizzes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quizUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Quizzes
     * const quiz = await prisma.quiz.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends quizUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, quizUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Quiz.
     * @param {quizUpsertArgs} args - Arguments to update or create a Quiz.
     * @example
     * // Update or create a Quiz
     * const quiz = await prisma.quiz.upsert({
     *   create: {
     *     // ... data to create a Quiz
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Quiz we want to update
     *   }
     * })
    **/
    upsert<T extends quizUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, quizUpsertArgs<ExtArgs>>
    ): Prisma__quizClient<$Result.GetResult<Prisma.$quizPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Quizzes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quizCountArgs} args - Arguments to filter Quizzes to count.
     * @example
     * // Count the number of Quizzes
     * const count = await prisma.quiz.count({
     *   where: {
     *     // ... the filter for the Quizzes we want to count
     *   }
     * })
    **/
    count<T extends quizCountArgs>(
      args?: Subset<T, quizCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QuizCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Quiz.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QuizAggregateArgs>(args: Subset<T, QuizAggregateArgs>): Prisma.PrismaPromise<GetQuizAggregateType<T>>

    /**
     * Group by Quiz.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quizGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends quizGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: quizGroupByArgs['orderBy'] }
        : { orderBy?: quizGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, quizGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQuizGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the quiz model
   */
  readonly fields: quizFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for quiz.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__quizClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    isla<T extends islaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, islaDefaultArgs<ExtArgs>>): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    nivel<T extends quiz$nivelArgs<ExtArgs> = {}>(args?: Subset<T, quiz$nivelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'findMany'> | Null>;

    detalles_quiz<T extends quiz$detalles_quizArgs<ExtArgs> = {}>(args?: Subset<T, quiz$detalles_quizArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalles_quizPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the quiz model
   */ 
  interface quizFieldRefs {
    readonly id_quiz: FieldRef<"quiz", 'Int'>
    readonly id_isla: FieldRef<"quiz", 'Int'>
    readonly nombre: FieldRef<"quiz", 'String'>
  }
    

  // Custom InputTypes

  /**
   * quiz findUnique
   */
  export type quizFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quiz
     */
    select?: quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: quizInclude<ExtArgs> | null
    /**
     * Filter, which quiz to fetch.
     */
    where: quizWhereUniqueInput
  }


  /**
   * quiz findUniqueOrThrow
   */
  export type quizFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quiz
     */
    select?: quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: quizInclude<ExtArgs> | null
    /**
     * Filter, which quiz to fetch.
     */
    where: quizWhereUniqueInput
  }


  /**
   * quiz findFirst
   */
  export type quizFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quiz
     */
    select?: quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: quizInclude<ExtArgs> | null
    /**
     * Filter, which quiz to fetch.
     */
    where?: quizWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of quizzes to fetch.
     */
    orderBy?: quizOrderByWithRelationInput | quizOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for quizzes.
     */
    cursor?: quizWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` quizzes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` quizzes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of quizzes.
     */
    distinct?: QuizScalarFieldEnum | QuizScalarFieldEnum[]
  }


  /**
   * quiz findFirstOrThrow
   */
  export type quizFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quiz
     */
    select?: quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: quizInclude<ExtArgs> | null
    /**
     * Filter, which quiz to fetch.
     */
    where?: quizWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of quizzes to fetch.
     */
    orderBy?: quizOrderByWithRelationInput | quizOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for quizzes.
     */
    cursor?: quizWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` quizzes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` quizzes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of quizzes.
     */
    distinct?: QuizScalarFieldEnum | QuizScalarFieldEnum[]
  }


  /**
   * quiz findMany
   */
  export type quizFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quiz
     */
    select?: quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: quizInclude<ExtArgs> | null
    /**
     * Filter, which quizzes to fetch.
     */
    where?: quizWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of quizzes to fetch.
     */
    orderBy?: quizOrderByWithRelationInput | quizOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing quizzes.
     */
    cursor?: quizWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` quizzes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` quizzes.
     */
    skip?: number
    distinct?: QuizScalarFieldEnum | QuizScalarFieldEnum[]
  }


  /**
   * quiz create
   */
  export type quizCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quiz
     */
    select?: quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: quizInclude<ExtArgs> | null
    /**
     * The data needed to create a quiz.
     */
    data: XOR<quizCreateInput, quizUncheckedCreateInput>
  }


  /**
   * quiz createMany
   */
  export type quizCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many quizzes.
     */
    data: quizCreateManyInput | quizCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * quiz update
   */
  export type quizUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quiz
     */
    select?: quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: quizInclude<ExtArgs> | null
    /**
     * The data needed to update a quiz.
     */
    data: XOR<quizUpdateInput, quizUncheckedUpdateInput>
    /**
     * Choose, which quiz to update.
     */
    where: quizWhereUniqueInput
  }


  /**
   * quiz updateMany
   */
  export type quizUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update quizzes.
     */
    data: XOR<quizUpdateManyMutationInput, quizUncheckedUpdateManyInput>
    /**
     * Filter which quizzes to update
     */
    where?: quizWhereInput
  }


  /**
   * quiz upsert
   */
  export type quizUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quiz
     */
    select?: quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: quizInclude<ExtArgs> | null
    /**
     * The filter to search for the quiz to update in case it exists.
     */
    where: quizWhereUniqueInput
    /**
     * In case the quiz found by the `where` argument doesn't exist, create a new quiz with this data.
     */
    create: XOR<quizCreateInput, quizUncheckedCreateInput>
    /**
     * In case the quiz was found with the provided `where` argument, update it with this data.
     */
    update: XOR<quizUpdateInput, quizUncheckedUpdateInput>
  }


  /**
   * quiz delete
   */
  export type quizDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quiz
     */
    select?: quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: quizInclude<ExtArgs> | null
    /**
     * Filter which quiz to delete.
     */
    where: quizWhereUniqueInput
  }


  /**
   * quiz deleteMany
   */
  export type quizDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which quizzes to delete
     */
    where?: quizWhereInput
  }


  /**
   * quiz.nivel
   */
  export type quiz$nivelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    where?: nivelWhereInput
    orderBy?: nivelOrderByWithRelationInput | nivelOrderByWithRelationInput[]
    cursor?: nivelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NivelScalarFieldEnum | NivelScalarFieldEnum[]
  }


  /**
   * quiz.detalles_quiz
   */
  export type quiz$detalles_quizArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalles_quiz
     */
    select?: detalles_quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalles_quizInclude<ExtArgs> | null
    where?: detalles_quizWhereInput
    orderBy?: detalles_quizOrderByWithRelationInput | detalles_quizOrderByWithRelationInput[]
    cursor?: detalles_quizWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalles_quizScalarFieldEnum | Detalles_quizScalarFieldEnum[]
  }


  /**
   * quiz without action
   */
  export type quizDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quiz
     */
    select?: quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: quizInclude<ExtArgs> | null
  }



  /**
   * Model modelo_coml
   */

  export type AggregateModelo_coml = {
    _count: Modelo_comlCountAggregateOutputType | null
    _avg: Modelo_comlAvgAggregateOutputType | null
    _sum: Modelo_comlSumAggregateOutputType | null
    _min: Modelo_comlMinAggregateOutputType | null
    _max: Modelo_comlMaxAggregateOutputType | null
  }

  export type Modelo_comlAvgAggregateOutputType = {
    id_modelo_coml: number | null
    id_isla: number | null
  }

  export type Modelo_comlSumAggregateOutputType = {
    id_modelo_coml: number | null
    id_isla: number | null
  }

  export type Modelo_comlMinAggregateOutputType = {
    id_modelo_coml: number | null
    id_isla: number | null
  }

  export type Modelo_comlMaxAggregateOutputType = {
    id_modelo_coml: number | null
    id_isla: number | null
  }

  export type Modelo_comlCountAggregateOutputType = {
    id_modelo_coml: number
    id_isla: number
    _all: number
  }


  export type Modelo_comlAvgAggregateInputType = {
    id_modelo_coml?: true
    id_isla?: true
  }

  export type Modelo_comlSumAggregateInputType = {
    id_modelo_coml?: true
    id_isla?: true
  }

  export type Modelo_comlMinAggregateInputType = {
    id_modelo_coml?: true
    id_isla?: true
  }

  export type Modelo_comlMaxAggregateInputType = {
    id_modelo_coml?: true
    id_isla?: true
  }

  export type Modelo_comlCountAggregateInputType = {
    id_modelo_coml?: true
    id_isla?: true
    _all?: true
  }

  export type Modelo_comlAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which modelo_coml to aggregate.
     */
    where?: modelo_comlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modelo_comls to fetch.
     */
    orderBy?: modelo_comlOrderByWithRelationInput | modelo_comlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: modelo_comlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modelo_comls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modelo_comls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned modelo_comls
    **/
    _count?: true | Modelo_comlCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Modelo_comlAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Modelo_comlSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Modelo_comlMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Modelo_comlMaxAggregateInputType
  }

  export type GetModelo_comlAggregateType<T extends Modelo_comlAggregateArgs> = {
        [P in keyof T & keyof AggregateModelo_coml]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModelo_coml[P]>
      : GetScalarType<T[P], AggregateModelo_coml[P]>
  }




  export type modelo_comlGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: modelo_comlWhereInput
    orderBy?: modelo_comlOrderByWithAggregationInput | modelo_comlOrderByWithAggregationInput[]
    by: Modelo_comlScalarFieldEnum[] | Modelo_comlScalarFieldEnum
    having?: modelo_comlScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Modelo_comlCountAggregateInputType | true
    _avg?: Modelo_comlAvgAggregateInputType
    _sum?: Modelo_comlSumAggregateInputType
    _min?: Modelo_comlMinAggregateInputType
    _max?: Modelo_comlMaxAggregateInputType
  }

  export type Modelo_comlGroupByOutputType = {
    id_modelo_coml: number
    id_isla: number
    _count: Modelo_comlCountAggregateOutputType | null
    _avg: Modelo_comlAvgAggregateOutputType | null
    _sum: Modelo_comlSumAggregateOutputType | null
    _min: Modelo_comlMinAggregateOutputType | null
    _max: Modelo_comlMaxAggregateOutputType | null
  }

  type GetModelo_comlGroupByPayload<T extends modelo_comlGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Modelo_comlGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Modelo_comlGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Modelo_comlGroupByOutputType[P]>
            : GetScalarType<T[P], Modelo_comlGroupByOutputType[P]>
        }
      >
    >


  export type modelo_comlSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_modelo_coml?: boolean
    id_isla?: boolean
    isla?: boolean | islaDefaultArgs<ExtArgs>
    treasure_hunt?: boolean | modelo_coml$treasure_huntArgs<ExtArgs>
    _count?: boolean | Modelo_comlCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modelo_coml"]>

  export type modelo_comlSelectScalar = {
    id_modelo_coml?: boolean
    id_isla?: boolean
  }

  export type modelo_comlInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    isla?: boolean | islaDefaultArgs<ExtArgs>
    treasure_hunt?: boolean | modelo_coml$treasure_huntArgs<ExtArgs>
    _count?: boolean | Modelo_comlCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $modelo_comlPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "modelo_coml"
    objects: {
      isla: Prisma.$islaPayload<ExtArgs>
      treasure_hunt: Prisma.$treasure_huntPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_modelo_coml: number
      id_isla: number
    }, ExtArgs["result"]["modelo_coml"]>
    composites: {}
  }


  type modelo_comlGetPayload<S extends boolean | null | undefined | modelo_comlDefaultArgs> = $Result.GetResult<Prisma.$modelo_comlPayload, S>

  type modelo_comlCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<modelo_comlFindManyArgs, 'select' | 'include'> & {
      select?: Modelo_comlCountAggregateInputType | true
    }

  export interface modelo_comlDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['modelo_coml'], meta: { name: 'modelo_coml' } }
    /**
     * Find zero or one Modelo_coml that matches the filter.
     * @param {modelo_comlFindUniqueArgs} args - Arguments to find a Modelo_coml
     * @example
     * // Get one Modelo_coml
     * const modelo_coml = await prisma.modelo_coml.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends modelo_comlFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, modelo_comlFindUniqueArgs<ExtArgs>>
    ): Prisma__modelo_comlClient<$Result.GetResult<Prisma.$modelo_comlPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Modelo_coml that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {modelo_comlFindUniqueOrThrowArgs} args - Arguments to find a Modelo_coml
     * @example
     * // Get one Modelo_coml
     * const modelo_coml = await prisma.modelo_coml.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends modelo_comlFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, modelo_comlFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__modelo_comlClient<$Result.GetResult<Prisma.$modelo_comlPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Modelo_coml that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modelo_comlFindFirstArgs} args - Arguments to find a Modelo_coml
     * @example
     * // Get one Modelo_coml
     * const modelo_coml = await prisma.modelo_coml.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends modelo_comlFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, modelo_comlFindFirstArgs<ExtArgs>>
    ): Prisma__modelo_comlClient<$Result.GetResult<Prisma.$modelo_comlPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Modelo_coml that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modelo_comlFindFirstOrThrowArgs} args - Arguments to find a Modelo_coml
     * @example
     * // Get one Modelo_coml
     * const modelo_coml = await prisma.modelo_coml.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends modelo_comlFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, modelo_comlFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__modelo_comlClient<$Result.GetResult<Prisma.$modelo_comlPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Modelo_comls that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modelo_comlFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Modelo_comls
     * const modelo_comls = await prisma.modelo_coml.findMany()
     * 
     * // Get first 10 Modelo_comls
     * const modelo_comls = await prisma.modelo_coml.findMany({ take: 10 })
     * 
     * // Only select the `id_modelo_coml`
     * const modelo_comlWithId_modelo_comlOnly = await prisma.modelo_coml.findMany({ select: { id_modelo_coml: true } })
     * 
    **/
    findMany<T extends modelo_comlFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, modelo_comlFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$modelo_comlPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Modelo_coml.
     * @param {modelo_comlCreateArgs} args - Arguments to create a Modelo_coml.
     * @example
     * // Create one Modelo_coml
     * const Modelo_coml = await prisma.modelo_coml.create({
     *   data: {
     *     // ... data to create a Modelo_coml
     *   }
     * })
     * 
    **/
    create<T extends modelo_comlCreateArgs<ExtArgs>>(
      args: SelectSubset<T, modelo_comlCreateArgs<ExtArgs>>
    ): Prisma__modelo_comlClient<$Result.GetResult<Prisma.$modelo_comlPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Modelo_comls.
     *     @param {modelo_comlCreateManyArgs} args - Arguments to create many Modelo_comls.
     *     @example
     *     // Create many Modelo_comls
     *     const modelo_coml = await prisma.modelo_coml.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends modelo_comlCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, modelo_comlCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Modelo_coml.
     * @param {modelo_comlDeleteArgs} args - Arguments to delete one Modelo_coml.
     * @example
     * // Delete one Modelo_coml
     * const Modelo_coml = await prisma.modelo_coml.delete({
     *   where: {
     *     // ... filter to delete one Modelo_coml
     *   }
     * })
     * 
    **/
    delete<T extends modelo_comlDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, modelo_comlDeleteArgs<ExtArgs>>
    ): Prisma__modelo_comlClient<$Result.GetResult<Prisma.$modelo_comlPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Modelo_coml.
     * @param {modelo_comlUpdateArgs} args - Arguments to update one Modelo_coml.
     * @example
     * // Update one Modelo_coml
     * const modelo_coml = await prisma.modelo_coml.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends modelo_comlUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, modelo_comlUpdateArgs<ExtArgs>>
    ): Prisma__modelo_comlClient<$Result.GetResult<Prisma.$modelo_comlPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Modelo_comls.
     * @param {modelo_comlDeleteManyArgs} args - Arguments to filter Modelo_comls to delete.
     * @example
     * // Delete a few Modelo_comls
     * const { count } = await prisma.modelo_coml.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends modelo_comlDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, modelo_comlDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Modelo_comls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modelo_comlUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Modelo_comls
     * const modelo_coml = await prisma.modelo_coml.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends modelo_comlUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, modelo_comlUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Modelo_coml.
     * @param {modelo_comlUpsertArgs} args - Arguments to update or create a Modelo_coml.
     * @example
     * // Update or create a Modelo_coml
     * const modelo_coml = await prisma.modelo_coml.upsert({
     *   create: {
     *     // ... data to create a Modelo_coml
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Modelo_coml we want to update
     *   }
     * })
    **/
    upsert<T extends modelo_comlUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, modelo_comlUpsertArgs<ExtArgs>>
    ): Prisma__modelo_comlClient<$Result.GetResult<Prisma.$modelo_comlPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Modelo_comls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modelo_comlCountArgs} args - Arguments to filter Modelo_comls to count.
     * @example
     * // Count the number of Modelo_comls
     * const count = await prisma.modelo_coml.count({
     *   where: {
     *     // ... the filter for the Modelo_comls we want to count
     *   }
     * })
    **/
    count<T extends modelo_comlCountArgs>(
      args?: Subset<T, modelo_comlCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Modelo_comlCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Modelo_coml.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Modelo_comlAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Modelo_comlAggregateArgs>(args: Subset<T, Modelo_comlAggregateArgs>): Prisma.PrismaPromise<GetModelo_comlAggregateType<T>>

    /**
     * Group by Modelo_coml.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {modelo_comlGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends modelo_comlGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: modelo_comlGroupByArgs['orderBy'] }
        : { orderBy?: modelo_comlGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, modelo_comlGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModelo_comlGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the modelo_coml model
   */
  readonly fields: modelo_comlFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for modelo_coml.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__modelo_comlClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    isla<T extends islaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, islaDefaultArgs<ExtArgs>>): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    treasure_hunt<T extends modelo_coml$treasure_huntArgs<ExtArgs> = {}>(args?: Subset<T, modelo_coml$treasure_huntArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$treasure_huntPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the modelo_coml model
   */ 
  interface modelo_comlFieldRefs {
    readonly id_modelo_coml: FieldRef<"modelo_coml", 'Int'>
    readonly id_isla: FieldRef<"modelo_coml", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * modelo_coml findUnique
   */
  export type modelo_comlFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modelo_coml
     */
    select?: modelo_comlSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: modelo_comlInclude<ExtArgs> | null
    /**
     * Filter, which modelo_coml to fetch.
     */
    where: modelo_comlWhereUniqueInput
  }


  /**
   * modelo_coml findUniqueOrThrow
   */
  export type modelo_comlFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modelo_coml
     */
    select?: modelo_comlSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: modelo_comlInclude<ExtArgs> | null
    /**
     * Filter, which modelo_coml to fetch.
     */
    where: modelo_comlWhereUniqueInput
  }


  /**
   * modelo_coml findFirst
   */
  export type modelo_comlFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modelo_coml
     */
    select?: modelo_comlSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: modelo_comlInclude<ExtArgs> | null
    /**
     * Filter, which modelo_coml to fetch.
     */
    where?: modelo_comlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modelo_comls to fetch.
     */
    orderBy?: modelo_comlOrderByWithRelationInput | modelo_comlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for modelo_comls.
     */
    cursor?: modelo_comlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modelo_comls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modelo_comls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of modelo_comls.
     */
    distinct?: Modelo_comlScalarFieldEnum | Modelo_comlScalarFieldEnum[]
  }


  /**
   * modelo_coml findFirstOrThrow
   */
  export type modelo_comlFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modelo_coml
     */
    select?: modelo_comlSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: modelo_comlInclude<ExtArgs> | null
    /**
     * Filter, which modelo_coml to fetch.
     */
    where?: modelo_comlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modelo_comls to fetch.
     */
    orderBy?: modelo_comlOrderByWithRelationInput | modelo_comlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for modelo_comls.
     */
    cursor?: modelo_comlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modelo_comls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modelo_comls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of modelo_comls.
     */
    distinct?: Modelo_comlScalarFieldEnum | Modelo_comlScalarFieldEnum[]
  }


  /**
   * modelo_coml findMany
   */
  export type modelo_comlFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modelo_coml
     */
    select?: modelo_comlSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: modelo_comlInclude<ExtArgs> | null
    /**
     * Filter, which modelo_comls to fetch.
     */
    where?: modelo_comlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of modelo_comls to fetch.
     */
    orderBy?: modelo_comlOrderByWithRelationInput | modelo_comlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing modelo_comls.
     */
    cursor?: modelo_comlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` modelo_comls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` modelo_comls.
     */
    skip?: number
    distinct?: Modelo_comlScalarFieldEnum | Modelo_comlScalarFieldEnum[]
  }


  /**
   * modelo_coml create
   */
  export type modelo_comlCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modelo_coml
     */
    select?: modelo_comlSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: modelo_comlInclude<ExtArgs> | null
    /**
     * The data needed to create a modelo_coml.
     */
    data: XOR<modelo_comlCreateInput, modelo_comlUncheckedCreateInput>
  }


  /**
   * modelo_coml createMany
   */
  export type modelo_comlCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many modelo_comls.
     */
    data: modelo_comlCreateManyInput | modelo_comlCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * modelo_coml update
   */
  export type modelo_comlUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modelo_coml
     */
    select?: modelo_comlSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: modelo_comlInclude<ExtArgs> | null
    /**
     * The data needed to update a modelo_coml.
     */
    data: XOR<modelo_comlUpdateInput, modelo_comlUncheckedUpdateInput>
    /**
     * Choose, which modelo_coml to update.
     */
    where: modelo_comlWhereUniqueInput
  }


  /**
   * modelo_coml updateMany
   */
  export type modelo_comlUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update modelo_comls.
     */
    data: XOR<modelo_comlUpdateManyMutationInput, modelo_comlUncheckedUpdateManyInput>
    /**
     * Filter which modelo_comls to update
     */
    where?: modelo_comlWhereInput
  }


  /**
   * modelo_coml upsert
   */
  export type modelo_comlUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modelo_coml
     */
    select?: modelo_comlSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: modelo_comlInclude<ExtArgs> | null
    /**
     * The filter to search for the modelo_coml to update in case it exists.
     */
    where: modelo_comlWhereUniqueInput
    /**
     * In case the modelo_coml found by the `where` argument doesn't exist, create a new modelo_coml with this data.
     */
    create: XOR<modelo_comlCreateInput, modelo_comlUncheckedCreateInput>
    /**
     * In case the modelo_coml was found with the provided `where` argument, update it with this data.
     */
    update: XOR<modelo_comlUpdateInput, modelo_comlUncheckedUpdateInput>
  }


  /**
   * modelo_coml delete
   */
  export type modelo_comlDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modelo_coml
     */
    select?: modelo_comlSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: modelo_comlInclude<ExtArgs> | null
    /**
     * Filter which modelo_coml to delete.
     */
    where: modelo_comlWhereUniqueInput
  }


  /**
   * modelo_coml deleteMany
   */
  export type modelo_comlDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which modelo_comls to delete
     */
    where?: modelo_comlWhereInput
  }


  /**
   * modelo_coml.treasure_hunt
   */
  export type modelo_coml$treasure_huntArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the treasure_hunt
     */
    select?: treasure_huntSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: treasure_huntInclude<ExtArgs> | null
    where?: treasure_huntWhereInput
    orderBy?: treasure_huntOrderByWithRelationInput | treasure_huntOrderByWithRelationInput[]
    cursor?: treasure_huntWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Treasure_huntScalarFieldEnum | Treasure_huntScalarFieldEnum[]
  }


  /**
   * modelo_coml without action
   */
  export type modelo_comlDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the modelo_coml
     */
    select?: modelo_comlSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: modelo_comlInclude<ExtArgs> | null
  }



  /**
   * Model treasure_hunt
   */

  export type AggregateTreasure_hunt = {
    _count: Treasure_huntCountAggregateOutputType | null
    _avg: Treasure_huntAvgAggregateOutputType | null
    _sum: Treasure_huntSumAggregateOutputType | null
    _min: Treasure_huntMinAggregateOutputType | null
    _max: Treasure_huntMaxAggregateOutputType | null
  }

  export type Treasure_huntAvgAggregateOutputType = {
    id_treasure_hunt: number | null
    id_isla: number | null
    id_modelo_coml: number | null
  }

  export type Treasure_huntSumAggregateOutputType = {
    id_treasure_hunt: number | null
    id_isla: number | null
    id_modelo_coml: number | null
  }

  export type Treasure_huntMinAggregateOutputType = {
    id_treasure_hunt: number | null
    id_isla: number | null
    id_modelo_coml: number | null
  }

  export type Treasure_huntMaxAggregateOutputType = {
    id_treasure_hunt: number | null
    id_isla: number | null
    id_modelo_coml: number | null
  }

  export type Treasure_huntCountAggregateOutputType = {
    id_treasure_hunt: number
    id_isla: number
    id_modelo_coml: number
    _all: number
  }


  export type Treasure_huntAvgAggregateInputType = {
    id_treasure_hunt?: true
    id_isla?: true
    id_modelo_coml?: true
  }

  export type Treasure_huntSumAggregateInputType = {
    id_treasure_hunt?: true
    id_isla?: true
    id_modelo_coml?: true
  }

  export type Treasure_huntMinAggregateInputType = {
    id_treasure_hunt?: true
    id_isla?: true
    id_modelo_coml?: true
  }

  export type Treasure_huntMaxAggregateInputType = {
    id_treasure_hunt?: true
    id_isla?: true
    id_modelo_coml?: true
  }

  export type Treasure_huntCountAggregateInputType = {
    id_treasure_hunt?: true
    id_isla?: true
    id_modelo_coml?: true
    _all?: true
  }

  export type Treasure_huntAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which treasure_hunt to aggregate.
     */
    where?: treasure_huntWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of treasure_hunts to fetch.
     */
    orderBy?: treasure_huntOrderByWithRelationInput | treasure_huntOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: treasure_huntWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` treasure_hunts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` treasure_hunts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned treasure_hunts
    **/
    _count?: true | Treasure_huntCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Treasure_huntAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Treasure_huntSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Treasure_huntMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Treasure_huntMaxAggregateInputType
  }

  export type GetTreasure_huntAggregateType<T extends Treasure_huntAggregateArgs> = {
        [P in keyof T & keyof AggregateTreasure_hunt]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTreasure_hunt[P]>
      : GetScalarType<T[P], AggregateTreasure_hunt[P]>
  }




  export type treasure_huntGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: treasure_huntWhereInput
    orderBy?: treasure_huntOrderByWithAggregationInput | treasure_huntOrderByWithAggregationInput[]
    by: Treasure_huntScalarFieldEnum[] | Treasure_huntScalarFieldEnum
    having?: treasure_huntScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Treasure_huntCountAggregateInputType | true
    _avg?: Treasure_huntAvgAggregateInputType
    _sum?: Treasure_huntSumAggregateInputType
    _min?: Treasure_huntMinAggregateInputType
    _max?: Treasure_huntMaxAggregateInputType
  }

  export type Treasure_huntGroupByOutputType = {
    id_treasure_hunt: number
    id_isla: number
    id_modelo_coml: number
    _count: Treasure_huntCountAggregateOutputType | null
    _avg: Treasure_huntAvgAggregateOutputType | null
    _sum: Treasure_huntSumAggregateOutputType | null
    _min: Treasure_huntMinAggregateOutputType | null
    _max: Treasure_huntMaxAggregateOutputType | null
  }

  type GetTreasure_huntGroupByPayload<T extends treasure_huntGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Treasure_huntGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Treasure_huntGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Treasure_huntGroupByOutputType[P]>
            : GetScalarType<T[P], Treasure_huntGroupByOutputType[P]>
        }
      >
    >


  export type treasure_huntSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_treasure_hunt?: boolean
    id_isla?: boolean
    id_modelo_coml?: boolean
    isla?: boolean | islaDefaultArgs<ExtArgs>
    modelo_coml?: boolean | modelo_comlDefaultArgs<ExtArgs>
    nivel?: boolean | treasure_hunt$nivelArgs<ExtArgs>
    _count?: boolean | Treasure_huntCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["treasure_hunt"]>

  export type treasure_huntSelectScalar = {
    id_treasure_hunt?: boolean
    id_isla?: boolean
    id_modelo_coml?: boolean
  }

  export type treasure_huntInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    isla?: boolean | islaDefaultArgs<ExtArgs>
    modelo_coml?: boolean | modelo_comlDefaultArgs<ExtArgs>
    nivel?: boolean | treasure_hunt$nivelArgs<ExtArgs>
    _count?: boolean | Treasure_huntCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $treasure_huntPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "treasure_hunt"
    objects: {
      isla: Prisma.$islaPayload<ExtArgs>
      modelo_coml: Prisma.$modelo_comlPayload<ExtArgs>
      nivel: Prisma.$nivelPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_treasure_hunt: number
      id_isla: number
      id_modelo_coml: number
    }, ExtArgs["result"]["treasure_hunt"]>
    composites: {}
  }


  type treasure_huntGetPayload<S extends boolean | null | undefined | treasure_huntDefaultArgs> = $Result.GetResult<Prisma.$treasure_huntPayload, S>

  type treasure_huntCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<treasure_huntFindManyArgs, 'select' | 'include'> & {
      select?: Treasure_huntCountAggregateInputType | true
    }

  export interface treasure_huntDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['treasure_hunt'], meta: { name: 'treasure_hunt' } }
    /**
     * Find zero or one Treasure_hunt that matches the filter.
     * @param {treasure_huntFindUniqueArgs} args - Arguments to find a Treasure_hunt
     * @example
     * // Get one Treasure_hunt
     * const treasure_hunt = await prisma.treasure_hunt.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends treasure_huntFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, treasure_huntFindUniqueArgs<ExtArgs>>
    ): Prisma__treasure_huntClient<$Result.GetResult<Prisma.$treasure_huntPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Treasure_hunt that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {treasure_huntFindUniqueOrThrowArgs} args - Arguments to find a Treasure_hunt
     * @example
     * // Get one Treasure_hunt
     * const treasure_hunt = await prisma.treasure_hunt.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends treasure_huntFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, treasure_huntFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__treasure_huntClient<$Result.GetResult<Prisma.$treasure_huntPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Treasure_hunt that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {treasure_huntFindFirstArgs} args - Arguments to find a Treasure_hunt
     * @example
     * // Get one Treasure_hunt
     * const treasure_hunt = await prisma.treasure_hunt.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends treasure_huntFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, treasure_huntFindFirstArgs<ExtArgs>>
    ): Prisma__treasure_huntClient<$Result.GetResult<Prisma.$treasure_huntPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Treasure_hunt that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {treasure_huntFindFirstOrThrowArgs} args - Arguments to find a Treasure_hunt
     * @example
     * // Get one Treasure_hunt
     * const treasure_hunt = await prisma.treasure_hunt.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends treasure_huntFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, treasure_huntFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__treasure_huntClient<$Result.GetResult<Prisma.$treasure_huntPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Treasure_hunts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {treasure_huntFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Treasure_hunts
     * const treasure_hunts = await prisma.treasure_hunt.findMany()
     * 
     * // Get first 10 Treasure_hunts
     * const treasure_hunts = await prisma.treasure_hunt.findMany({ take: 10 })
     * 
     * // Only select the `id_treasure_hunt`
     * const treasure_huntWithId_treasure_huntOnly = await prisma.treasure_hunt.findMany({ select: { id_treasure_hunt: true } })
     * 
    **/
    findMany<T extends treasure_huntFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, treasure_huntFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$treasure_huntPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Treasure_hunt.
     * @param {treasure_huntCreateArgs} args - Arguments to create a Treasure_hunt.
     * @example
     * // Create one Treasure_hunt
     * const Treasure_hunt = await prisma.treasure_hunt.create({
     *   data: {
     *     // ... data to create a Treasure_hunt
     *   }
     * })
     * 
    **/
    create<T extends treasure_huntCreateArgs<ExtArgs>>(
      args: SelectSubset<T, treasure_huntCreateArgs<ExtArgs>>
    ): Prisma__treasure_huntClient<$Result.GetResult<Prisma.$treasure_huntPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Treasure_hunts.
     *     @param {treasure_huntCreateManyArgs} args - Arguments to create many Treasure_hunts.
     *     @example
     *     // Create many Treasure_hunts
     *     const treasure_hunt = await prisma.treasure_hunt.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends treasure_huntCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, treasure_huntCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Treasure_hunt.
     * @param {treasure_huntDeleteArgs} args - Arguments to delete one Treasure_hunt.
     * @example
     * // Delete one Treasure_hunt
     * const Treasure_hunt = await prisma.treasure_hunt.delete({
     *   where: {
     *     // ... filter to delete one Treasure_hunt
     *   }
     * })
     * 
    **/
    delete<T extends treasure_huntDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, treasure_huntDeleteArgs<ExtArgs>>
    ): Prisma__treasure_huntClient<$Result.GetResult<Prisma.$treasure_huntPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Treasure_hunt.
     * @param {treasure_huntUpdateArgs} args - Arguments to update one Treasure_hunt.
     * @example
     * // Update one Treasure_hunt
     * const treasure_hunt = await prisma.treasure_hunt.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends treasure_huntUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, treasure_huntUpdateArgs<ExtArgs>>
    ): Prisma__treasure_huntClient<$Result.GetResult<Prisma.$treasure_huntPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Treasure_hunts.
     * @param {treasure_huntDeleteManyArgs} args - Arguments to filter Treasure_hunts to delete.
     * @example
     * // Delete a few Treasure_hunts
     * const { count } = await prisma.treasure_hunt.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends treasure_huntDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, treasure_huntDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Treasure_hunts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {treasure_huntUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Treasure_hunts
     * const treasure_hunt = await prisma.treasure_hunt.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends treasure_huntUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, treasure_huntUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Treasure_hunt.
     * @param {treasure_huntUpsertArgs} args - Arguments to update or create a Treasure_hunt.
     * @example
     * // Update or create a Treasure_hunt
     * const treasure_hunt = await prisma.treasure_hunt.upsert({
     *   create: {
     *     // ... data to create a Treasure_hunt
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Treasure_hunt we want to update
     *   }
     * })
    **/
    upsert<T extends treasure_huntUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, treasure_huntUpsertArgs<ExtArgs>>
    ): Prisma__treasure_huntClient<$Result.GetResult<Prisma.$treasure_huntPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Treasure_hunts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {treasure_huntCountArgs} args - Arguments to filter Treasure_hunts to count.
     * @example
     * // Count the number of Treasure_hunts
     * const count = await prisma.treasure_hunt.count({
     *   where: {
     *     // ... the filter for the Treasure_hunts we want to count
     *   }
     * })
    **/
    count<T extends treasure_huntCountArgs>(
      args?: Subset<T, treasure_huntCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Treasure_huntCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Treasure_hunt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Treasure_huntAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Treasure_huntAggregateArgs>(args: Subset<T, Treasure_huntAggregateArgs>): Prisma.PrismaPromise<GetTreasure_huntAggregateType<T>>

    /**
     * Group by Treasure_hunt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {treasure_huntGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends treasure_huntGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: treasure_huntGroupByArgs['orderBy'] }
        : { orderBy?: treasure_huntGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, treasure_huntGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTreasure_huntGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the treasure_hunt model
   */
  readonly fields: treasure_huntFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for treasure_hunt.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__treasure_huntClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    isla<T extends islaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, islaDefaultArgs<ExtArgs>>): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    modelo_coml<T extends modelo_comlDefaultArgs<ExtArgs> = {}>(args?: Subset<T, modelo_comlDefaultArgs<ExtArgs>>): Prisma__modelo_comlClient<$Result.GetResult<Prisma.$modelo_comlPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    nivel<T extends treasure_hunt$nivelArgs<ExtArgs> = {}>(args?: Subset<T, treasure_hunt$nivelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the treasure_hunt model
   */ 
  interface treasure_huntFieldRefs {
    readonly id_treasure_hunt: FieldRef<"treasure_hunt", 'Int'>
    readonly id_isla: FieldRef<"treasure_hunt", 'Int'>
    readonly id_modelo_coml: FieldRef<"treasure_hunt", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * treasure_hunt findUnique
   */
  export type treasure_huntFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the treasure_hunt
     */
    select?: treasure_huntSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: treasure_huntInclude<ExtArgs> | null
    /**
     * Filter, which treasure_hunt to fetch.
     */
    where: treasure_huntWhereUniqueInput
  }


  /**
   * treasure_hunt findUniqueOrThrow
   */
  export type treasure_huntFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the treasure_hunt
     */
    select?: treasure_huntSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: treasure_huntInclude<ExtArgs> | null
    /**
     * Filter, which treasure_hunt to fetch.
     */
    where: treasure_huntWhereUniqueInput
  }


  /**
   * treasure_hunt findFirst
   */
  export type treasure_huntFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the treasure_hunt
     */
    select?: treasure_huntSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: treasure_huntInclude<ExtArgs> | null
    /**
     * Filter, which treasure_hunt to fetch.
     */
    where?: treasure_huntWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of treasure_hunts to fetch.
     */
    orderBy?: treasure_huntOrderByWithRelationInput | treasure_huntOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for treasure_hunts.
     */
    cursor?: treasure_huntWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` treasure_hunts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` treasure_hunts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of treasure_hunts.
     */
    distinct?: Treasure_huntScalarFieldEnum | Treasure_huntScalarFieldEnum[]
  }


  /**
   * treasure_hunt findFirstOrThrow
   */
  export type treasure_huntFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the treasure_hunt
     */
    select?: treasure_huntSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: treasure_huntInclude<ExtArgs> | null
    /**
     * Filter, which treasure_hunt to fetch.
     */
    where?: treasure_huntWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of treasure_hunts to fetch.
     */
    orderBy?: treasure_huntOrderByWithRelationInput | treasure_huntOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for treasure_hunts.
     */
    cursor?: treasure_huntWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` treasure_hunts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` treasure_hunts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of treasure_hunts.
     */
    distinct?: Treasure_huntScalarFieldEnum | Treasure_huntScalarFieldEnum[]
  }


  /**
   * treasure_hunt findMany
   */
  export type treasure_huntFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the treasure_hunt
     */
    select?: treasure_huntSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: treasure_huntInclude<ExtArgs> | null
    /**
     * Filter, which treasure_hunts to fetch.
     */
    where?: treasure_huntWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of treasure_hunts to fetch.
     */
    orderBy?: treasure_huntOrderByWithRelationInput | treasure_huntOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing treasure_hunts.
     */
    cursor?: treasure_huntWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` treasure_hunts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` treasure_hunts.
     */
    skip?: number
    distinct?: Treasure_huntScalarFieldEnum | Treasure_huntScalarFieldEnum[]
  }


  /**
   * treasure_hunt create
   */
  export type treasure_huntCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the treasure_hunt
     */
    select?: treasure_huntSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: treasure_huntInclude<ExtArgs> | null
    /**
     * The data needed to create a treasure_hunt.
     */
    data: XOR<treasure_huntCreateInput, treasure_huntUncheckedCreateInput>
  }


  /**
   * treasure_hunt createMany
   */
  export type treasure_huntCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many treasure_hunts.
     */
    data: treasure_huntCreateManyInput | treasure_huntCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * treasure_hunt update
   */
  export type treasure_huntUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the treasure_hunt
     */
    select?: treasure_huntSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: treasure_huntInclude<ExtArgs> | null
    /**
     * The data needed to update a treasure_hunt.
     */
    data: XOR<treasure_huntUpdateInput, treasure_huntUncheckedUpdateInput>
    /**
     * Choose, which treasure_hunt to update.
     */
    where: treasure_huntWhereUniqueInput
  }


  /**
   * treasure_hunt updateMany
   */
  export type treasure_huntUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update treasure_hunts.
     */
    data: XOR<treasure_huntUpdateManyMutationInput, treasure_huntUncheckedUpdateManyInput>
    /**
     * Filter which treasure_hunts to update
     */
    where?: treasure_huntWhereInput
  }


  /**
   * treasure_hunt upsert
   */
  export type treasure_huntUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the treasure_hunt
     */
    select?: treasure_huntSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: treasure_huntInclude<ExtArgs> | null
    /**
     * The filter to search for the treasure_hunt to update in case it exists.
     */
    where: treasure_huntWhereUniqueInput
    /**
     * In case the treasure_hunt found by the `where` argument doesn't exist, create a new treasure_hunt with this data.
     */
    create: XOR<treasure_huntCreateInput, treasure_huntUncheckedCreateInput>
    /**
     * In case the treasure_hunt was found with the provided `where` argument, update it with this data.
     */
    update: XOR<treasure_huntUpdateInput, treasure_huntUncheckedUpdateInput>
  }


  /**
   * treasure_hunt delete
   */
  export type treasure_huntDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the treasure_hunt
     */
    select?: treasure_huntSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: treasure_huntInclude<ExtArgs> | null
    /**
     * Filter which treasure_hunt to delete.
     */
    where: treasure_huntWhereUniqueInput
  }


  /**
   * treasure_hunt deleteMany
   */
  export type treasure_huntDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which treasure_hunts to delete
     */
    where?: treasure_huntWhereInput
  }


  /**
   * treasure_hunt.nivel
   */
  export type treasure_hunt$nivelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    where?: nivelWhereInput
    orderBy?: nivelOrderByWithRelationInput | nivelOrderByWithRelationInput[]
    cursor?: nivelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NivelScalarFieldEnum | NivelScalarFieldEnum[]
  }


  /**
   * treasure_hunt without action
   */
  export type treasure_huntDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the treasure_hunt
     */
    select?: treasure_huntSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: treasure_huntInclude<ExtArgs> | null
  }



  /**
   * Model nivel
   */

  export type AggregateNivel = {
    _count: NivelCountAggregateOutputType | null
    _avg: NivelAvgAggregateOutputType | null
    _sum: NivelSumAggregateOutputType | null
    _min: NivelMinAggregateOutputType | null
    _max: NivelMaxAggregateOutputType | null
  }

  export type NivelAvgAggregateOutputType = {
    id_nivel: number | null
    id_isla: number | null
    id_video_cuestionario: number | null
    id_quiz: number | null
    id_treasure_hunt: number | null
  }

  export type NivelSumAggregateOutputType = {
    id_nivel: number | null
    id_isla: number | null
    id_video_cuestionario: number | null
    id_quiz: number | null
    id_treasure_hunt: number | null
  }

  export type NivelMinAggregateOutputType = {
    id_nivel: number | null
    id_isla: number | null
    id_video_cuestionario: number | null
    id_quiz: number | null
    id_treasure_hunt: number | null
  }

  export type NivelMaxAggregateOutputType = {
    id_nivel: number | null
    id_isla: number | null
    id_video_cuestionario: number | null
    id_quiz: number | null
    id_treasure_hunt: number | null
  }

  export type NivelCountAggregateOutputType = {
    id_nivel: number
    id_isla: number
    id_video_cuestionario: number
    id_quiz: number
    id_treasure_hunt: number
    _all: number
  }


  export type NivelAvgAggregateInputType = {
    id_nivel?: true
    id_isla?: true
    id_video_cuestionario?: true
    id_quiz?: true
    id_treasure_hunt?: true
  }

  export type NivelSumAggregateInputType = {
    id_nivel?: true
    id_isla?: true
    id_video_cuestionario?: true
    id_quiz?: true
    id_treasure_hunt?: true
  }

  export type NivelMinAggregateInputType = {
    id_nivel?: true
    id_isla?: true
    id_video_cuestionario?: true
    id_quiz?: true
    id_treasure_hunt?: true
  }

  export type NivelMaxAggregateInputType = {
    id_nivel?: true
    id_isla?: true
    id_video_cuestionario?: true
    id_quiz?: true
    id_treasure_hunt?: true
  }

  export type NivelCountAggregateInputType = {
    id_nivel?: true
    id_isla?: true
    id_video_cuestionario?: true
    id_quiz?: true
    id_treasure_hunt?: true
    _all?: true
  }

  export type NivelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nivel to aggregate.
     */
    where?: nivelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nivels to fetch.
     */
    orderBy?: nivelOrderByWithRelationInput | nivelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nivelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nivels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nivels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nivels
    **/
    _count?: true | NivelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NivelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NivelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NivelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NivelMaxAggregateInputType
  }

  export type GetNivelAggregateType<T extends NivelAggregateArgs> = {
        [P in keyof T & keyof AggregateNivel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNivel[P]>
      : GetScalarType<T[P], AggregateNivel[P]>
  }




  export type nivelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nivelWhereInput
    orderBy?: nivelOrderByWithAggregationInput | nivelOrderByWithAggregationInput[]
    by: NivelScalarFieldEnum[] | NivelScalarFieldEnum
    having?: nivelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NivelCountAggregateInputType | true
    _avg?: NivelAvgAggregateInputType
    _sum?: NivelSumAggregateInputType
    _min?: NivelMinAggregateInputType
    _max?: NivelMaxAggregateInputType
  }

  export type NivelGroupByOutputType = {
    id_nivel: number
    id_isla: number
    id_video_cuestionario: number
    id_quiz: number
    id_treasure_hunt: number
    _count: NivelCountAggregateOutputType | null
    _avg: NivelAvgAggregateOutputType | null
    _sum: NivelSumAggregateOutputType | null
    _min: NivelMinAggregateOutputType | null
    _max: NivelMaxAggregateOutputType | null
  }

  type GetNivelGroupByPayload<T extends nivelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NivelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NivelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NivelGroupByOutputType[P]>
            : GetScalarType<T[P], NivelGroupByOutputType[P]>
        }
      >
    >


  export type nivelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_nivel?: boolean
    id_isla?: boolean
    id_video_cuestionario?: boolean
    id_quiz?: boolean
    id_treasure_hunt?: boolean
    isla?: boolean | islaDefaultArgs<ExtArgs>
    video_cuestionario?: boolean | video_cuestionarioDefaultArgs<ExtArgs>
    quiz?: boolean | quizDefaultArgs<ExtArgs>
    treasure_hunt?: boolean | treasure_huntDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["nivel"]>

  export type nivelSelectScalar = {
    id_nivel?: boolean
    id_isla?: boolean
    id_video_cuestionario?: boolean
    id_quiz?: boolean
    id_treasure_hunt?: boolean
  }

  export type nivelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    isla?: boolean | islaDefaultArgs<ExtArgs>
    video_cuestionario?: boolean | video_cuestionarioDefaultArgs<ExtArgs>
    quiz?: boolean | quizDefaultArgs<ExtArgs>
    treasure_hunt?: boolean | treasure_huntDefaultArgs<ExtArgs>
  }


  export type $nivelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nivel"
    objects: {
      isla: Prisma.$islaPayload<ExtArgs>
      video_cuestionario: Prisma.$video_cuestionarioPayload<ExtArgs>
      quiz: Prisma.$quizPayload<ExtArgs>
      treasure_hunt: Prisma.$treasure_huntPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_nivel: number
      id_isla: number
      id_video_cuestionario: number
      id_quiz: number
      id_treasure_hunt: number
    }, ExtArgs["result"]["nivel"]>
    composites: {}
  }


  type nivelGetPayload<S extends boolean | null | undefined | nivelDefaultArgs> = $Result.GetResult<Prisma.$nivelPayload, S>

  type nivelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<nivelFindManyArgs, 'select' | 'include'> & {
      select?: NivelCountAggregateInputType | true
    }

  export interface nivelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nivel'], meta: { name: 'nivel' } }
    /**
     * Find zero or one Nivel that matches the filter.
     * @param {nivelFindUniqueArgs} args - Arguments to find a Nivel
     * @example
     * // Get one Nivel
     * const nivel = await prisma.nivel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends nivelFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, nivelFindUniqueArgs<ExtArgs>>
    ): Prisma__nivelClient<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Nivel that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {nivelFindUniqueOrThrowArgs} args - Arguments to find a Nivel
     * @example
     * // Get one Nivel
     * const nivel = await prisma.nivel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends nivelFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, nivelFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__nivelClient<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Nivel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nivelFindFirstArgs} args - Arguments to find a Nivel
     * @example
     * // Get one Nivel
     * const nivel = await prisma.nivel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends nivelFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, nivelFindFirstArgs<ExtArgs>>
    ): Prisma__nivelClient<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Nivel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nivelFindFirstOrThrowArgs} args - Arguments to find a Nivel
     * @example
     * // Get one Nivel
     * const nivel = await prisma.nivel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends nivelFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, nivelFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__nivelClient<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Nivels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nivelFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nivels
     * const nivels = await prisma.nivel.findMany()
     * 
     * // Get first 10 Nivels
     * const nivels = await prisma.nivel.findMany({ take: 10 })
     * 
     * // Only select the `id_nivel`
     * const nivelWithId_nivelOnly = await prisma.nivel.findMany({ select: { id_nivel: true } })
     * 
    **/
    findMany<T extends nivelFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, nivelFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Nivel.
     * @param {nivelCreateArgs} args - Arguments to create a Nivel.
     * @example
     * // Create one Nivel
     * const Nivel = await prisma.nivel.create({
     *   data: {
     *     // ... data to create a Nivel
     *   }
     * })
     * 
    **/
    create<T extends nivelCreateArgs<ExtArgs>>(
      args: SelectSubset<T, nivelCreateArgs<ExtArgs>>
    ): Prisma__nivelClient<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Nivels.
     *     @param {nivelCreateManyArgs} args - Arguments to create many Nivels.
     *     @example
     *     // Create many Nivels
     *     const nivel = await prisma.nivel.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends nivelCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, nivelCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nivel.
     * @param {nivelDeleteArgs} args - Arguments to delete one Nivel.
     * @example
     * // Delete one Nivel
     * const Nivel = await prisma.nivel.delete({
     *   where: {
     *     // ... filter to delete one Nivel
     *   }
     * })
     * 
    **/
    delete<T extends nivelDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, nivelDeleteArgs<ExtArgs>>
    ): Prisma__nivelClient<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Nivel.
     * @param {nivelUpdateArgs} args - Arguments to update one Nivel.
     * @example
     * // Update one Nivel
     * const nivel = await prisma.nivel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends nivelUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, nivelUpdateArgs<ExtArgs>>
    ): Prisma__nivelClient<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Nivels.
     * @param {nivelDeleteManyArgs} args - Arguments to filter Nivels to delete.
     * @example
     * // Delete a few Nivels
     * const { count } = await prisma.nivel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends nivelDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, nivelDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nivels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nivelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nivels
     * const nivel = await prisma.nivel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends nivelUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, nivelUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nivel.
     * @param {nivelUpsertArgs} args - Arguments to update or create a Nivel.
     * @example
     * // Update or create a Nivel
     * const nivel = await prisma.nivel.upsert({
     *   create: {
     *     // ... data to create a Nivel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nivel we want to update
     *   }
     * })
    **/
    upsert<T extends nivelUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, nivelUpsertArgs<ExtArgs>>
    ): Prisma__nivelClient<$Result.GetResult<Prisma.$nivelPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Nivels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nivelCountArgs} args - Arguments to filter Nivels to count.
     * @example
     * // Count the number of Nivels
     * const count = await prisma.nivel.count({
     *   where: {
     *     // ... the filter for the Nivels we want to count
     *   }
     * })
    **/
    count<T extends nivelCountArgs>(
      args?: Subset<T, nivelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NivelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nivel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NivelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NivelAggregateArgs>(args: Subset<T, NivelAggregateArgs>): Prisma.PrismaPromise<GetNivelAggregateType<T>>

    /**
     * Group by Nivel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nivelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nivelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nivelGroupByArgs['orderBy'] }
        : { orderBy?: nivelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nivelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNivelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nivel model
   */
  readonly fields: nivelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nivel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nivelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    isla<T extends islaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, islaDefaultArgs<ExtArgs>>): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    video_cuestionario<T extends video_cuestionarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, video_cuestionarioDefaultArgs<ExtArgs>>): Prisma__video_cuestionarioClient<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    quiz<T extends quizDefaultArgs<ExtArgs> = {}>(args?: Subset<T, quizDefaultArgs<ExtArgs>>): Prisma__quizClient<$Result.GetResult<Prisma.$quizPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    treasure_hunt<T extends treasure_huntDefaultArgs<ExtArgs> = {}>(args?: Subset<T, treasure_huntDefaultArgs<ExtArgs>>): Prisma__treasure_huntClient<$Result.GetResult<Prisma.$treasure_huntPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the nivel model
   */ 
  interface nivelFieldRefs {
    readonly id_nivel: FieldRef<"nivel", 'Int'>
    readonly id_isla: FieldRef<"nivel", 'Int'>
    readonly id_video_cuestionario: FieldRef<"nivel", 'Int'>
    readonly id_quiz: FieldRef<"nivel", 'Int'>
    readonly id_treasure_hunt: FieldRef<"nivel", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * nivel findUnique
   */
  export type nivelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    /**
     * Filter, which nivel to fetch.
     */
    where: nivelWhereUniqueInput
  }


  /**
   * nivel findUniqueOrThrow
   */
  export type nivelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    /**
     * Filter, which nivel to fetch.
     */
    where: nivelWhereUniqueInput
  }


  /**
   * nivel findFirst
   */
  export type nivelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    /**
     * Filter, which nivel to fetch.
     */
    where?: nivelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nivels to fetch.
     */
    orderBy?: nivelOrderByWithRelationInput | nivelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nivels.
     */
    cursor?: nivelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nivels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nivels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nivels.
     */
    distinct?: NivelScalarFieldEnum | NivelScalarFieldEnum[]
  }


  /**
   * nivel findFirstOrThrow
   */
  export type nivelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    /**
     * Filter, which nivel to fetch.
     */
    where?: nivelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nivels to fetch.
     */
    orderBy?: nivelOrderByWithRelationInput | nivelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nivels.
     */
    cursor?: nivelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nivels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nivels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nivels.
     */
    distinct?: NivelScalarFieldEnum | NivelScalarFieldEnum[]
  }


  /**
   * nivel findMany
   */
  export type nivelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    /**
     * Filter, which nivels to fetch.
     */
    where?: nivelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nivels to fetch.
     */
    orderBy?: nivelOrderByWithRelationInput | nivelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nivels.
     */
    cursor?: nivelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nivels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nivels.
     */
    skip?: number
    distinct?: NivelScalarFieldEnum | NivelScalarFieldEnum[]
  }


  /**
   * nivel create
   */
  export type nivelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    /**
     * The data needed to create a nivel.
     */
    data: XOR<nivelCreateInput, nivelUncheckedCreateInput>
  }


  /**
   * nivel createMany
   */
  export type nivelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nivels.
     */
    data: nivelCreateManyInput | nivelCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * nivel update
   */
  export type nivelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    /**
     * The data needed to update a nivel.
     */
    data: XOR<nivelUpdateInput, nivelUncheckedUpdateInput>
    /**
     * Choose, which nivel to update.
     */
    where: nivelWhereUniqueInput
  }


  /**
   * nivel updateMany
   */
  export type nivelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nivels.
     */
    data: XOR<nivelUpdateManyMutationInput, nivelUncheckedUpdateManyInput>
    /**
     * Filter which nivels to update
     */
    where?: nivelWhereInput
  }


  /**
   * nivel upsert
   */
  export type nivelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    /**
     * The filter to search for the nivel to update in case it exists.
     */
    where: nivelWhereUniqueInput
    /**
     * In case the nivel found by the `where` argument doesn't exist, create a new nivel with this data.
     */
    create: XOR<nivelCreateInput, nivelUncheckedCreateInput>
    /**
     * In case the nivel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nivelUpdateInput, nivelUncheckedUpdateInput>
  }


  /**
   * nivel delete
   */
  export type nivelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
    /**
     * Filter which nivel to delete.
     */
    where: nivelWhereUniqueInput
  }


  /**
   * nivel deleteMany
   */
  export type nivelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nivels to delete
     */
    where?: nivelWhereInput
  }


  /**
   * nivel without action
   */
  export type nivelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nivel
     */
    select?: nivelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: nivelInclude<ExtArgs> | null
  }



  /**
   * Model palabra
   */

  export type AggregatePalabra = {
    _count: PalabraCountAggregateOutputType | null
    _avg: PalabraAvgAggregateOutputType | null
    _sum: PalabraSumAggregateOutputType | null
    _min: PalabraMinAggregateOutputType | null
    _max: PalabraMaxAggregateOutputType | null
  }

  export type PalabraAvgAggregateOutputType = {
    id_palabra: number | null
    id_isla: number | null
  }

  export type PalabraSumAggregateOutputType = {
    id_palabra: number | null
    id_isla: number | null
  }

  export type PalabraMinAggregateOutputType = {
    id_palabra: number | null
    id_isla: number | null
    palabra: string | null
    id_video_segna: string | null
    url_icono: string | null
  }

  export type PalabraMaxAggregateOutputType = {
    id_palabra: number | null
    id_isla: number | null
    palabra: string | null
    id_video_segna: string | null
    url_icono: string | null
  }

  export type PalabraCountAggregateOutputType = {
    id_palabra: number
    id_isla: number
    palabra: number
    id_video_segna: number
    url_icono: number
    _all: number
  }


  export type PalabraAvgAggregateInputType = {
    id_palabra?: true
    id_isla?: true
  }

  export type PalabraSumAggregateInputType = {
    id_palabra?: true
    id_isla?: true
  }

  export type PalabraMinAggregateInputType = {
    id_palabra?: true
    id_isla?: true
    palabra?: true
    id_video_segna?: true
    url_icono?: true
  }

  export type PalabraMaxAggregateInputType = {
    id_palabra?: true
    id_isla?: true
    palabra?: true
    id_video_segna?: true
    url_icono?: true
  }

  export type PalabraCountAggregateInputType = {
    id_palabra?: true
    id_isla?: true
    palabra?: true
    id_video_segna?: true
    url_icono?: true
    _all?: true
  }

  export type PalabraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which palabra to aggregate.
     */
    where?: palabraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of palabras to fetch.
     */
    orderBy?: palabraOrderByWithRelationInput | palabraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: palabraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` palabras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` palabras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned palabras
    **/
    _count?: true | PalabraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PalabraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PalabraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PalabraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PalabraMaxAggregateInputType
  }

  export type GetPalabraAggregateType<T extends PalabraAggregateArgs> = {
        [P in keyof T & keyof AggregatePalabra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePalabra[P]>
      : GetScalarType<T[P], AggregatePalabra[P]>
  }




  export type palabraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: palabraWhereInput
    orderBy?: palabraOrderByWithAggregationInput | palabraOrderByWithAggregationInput[]
    by: PalabraScalarFieldEnum[] | PalabraScalarFieldEnum
    having?: palabraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PalabraCountAggregateInputType | true
    _avg?: PalabraAvgAggregateInputType
    _sum?: PalabraSumAggregateInputType
    _min?: PalabraMinAggregateInputType
    _max?: PalabraMaxAggregateInputType
  }

  export type PalabraGroupByOutputType = {
    id_palabra: number
    id_isla: number
    palabra: string
    id_video_segna: string
    url_icono: string
    _count: PalabraCountAggregateOutputType | null
    _avg: PalabraAvgAggregateOutputType | null
    _sum: PalabraSumAggregateOutputType | null
    _min: PalabraMinAggregateOutputType | null
    _max: PalabraMaxAggregateOutputType | null
  }

  type GetPalabraGroupByPayload<T extends palabraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PalabraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PalabraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PalabraGroupByOutputType[P]>
            : GetScalarType<T[P], PalabraGroupByOutputType[P]>
        }
      >
    >


  export type palabraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_palabra?: boolean
    id_isla?: boolean
    palabra?: boolean
    id_video_segna?: boolean
    url_icono?: boolean
    isla?: boolean | islaDefaultArgs<ExtArgs>
    detalles_quiz?: boolean | palabra$detalles_quizArgs<ExtArgs>
    palabras_video_cuestionario?: boolean | palabra$palabras_video_cuestionarioArgs<ExtArgs>
    _count?: boolean | PalabraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["palabra"]>

  export type palabraSelectScalar = {
    id_palabra?: boolean
    id_isla?: boolean
    palabra?: boolean
    id_video_segna?: boolean
    url_icono?: boolean
  }

  export type palabraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    isla?: boolean | islaDefaultArgs<ExtArgs>
    detalles_quiz?: boolean | palabra$detalles_quizArgs<ExtArgs>
    palabras_video_cuestionario?: boolean | palabra$palabras_video_cuestionarioArgs<ExtArgs>
    _count?: boolean | PalabraCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $palabraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "palabra"
    objects: {
      isla: Prisma.$islaPayload<ExtArgs>
      detalles_quiz: Prisma.$detalles_quizPayload<ExtArgs>[]
      palabras_video_cuestionario: Prisma.$palabras_video_cuestionarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_palabra: number
      id_isla: number
      palabra: string
      id_video_segna: string
      url_icono: string
    }, ExtArgs["result"]["palabra"]>
    composites: {}
  }


  type palabraGetPayload<S extends boolean | null | undefined | palabraDefaultArgs> = $Result.GetResult<Prisma.$palabraPayload, S>

  type palabraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<palabraFindManyArgs, 'select' | 'include'> & {
      select?: PalabraCountAggregateInputType | true
    }

  export interface palabraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['palabra'], meta: { name: 'palabra' } }
    /**
     * Find zero or one Palabra that matches the filter.
     * @param {palabraFindUniqueArgs} args - Arguments to find a Palabra
     * @example
     * // Get one Palabra
     * const palabra = await prisma.palabra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends palabraFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, palabraFindUniqueArgs<ExtArgs>>
    ): Prisma__palabraClient<$Result.GetResult<Prisma.$palabraPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Palabra that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {palabraFindUniqueOrThrowArgs} args - Arguments to find a Palabra
     * @example
     * // Get one Palabra
     * const palabra = await prisma.palabra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends palabraFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, palabraFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__palabraClient<$Result.GetResult<Prisma.$palabraPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Palabra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {palabraFindFirstArgs} args - Arguments to find a Palabra
     * @example
     * // Get one Palabra
     * const palabra = await prisma.palabra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends palabraFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, palabraFindFirstArgs<ExtArgs>>
    ): Prisma__palabraClient<$Result.GetResult<Prisma.$palabraPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Palabra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {palabraFindFirstOrThrowArgs} args - Arguments to find a Palabra
     * @example
     * // Get one Palabra
     * const palabra = await prisma.palabra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends palabraFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, palabraFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__palabraClient<$Result.GetResult<Prisma.$palabraPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Palabras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {palabraFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Palabras
     * const palabras = await prisma.palabra.findMany()
     * 
     * // Get first 10 Palabras
     * const palabras = await prisma.palabra.findMany({ take: 10 })
     * 
     * // Only select the `id_palabra`
     * const palabraWithId_palabraOnly = await prisma.palabra.findMany({ select: { id_palabra: true } })
     * 
    **/
    findMany<T extends palabraFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, palabraFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$palabraPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Palabra.
     * @param {palabraCreateArgs} args - Arguments to create a Palabra.
     * @example
     * // Create one Palabra
     * const Palabra = await prisma.palabra.create({
     *   data: {
     *     // ... data to create a Palabra
     *   }
     * })
     * 
    **/
    create<T extends palabraCreateArgs<ExtArgs>>(
      args: SelectSubset<T, palabraCreateArgs<ExtArgs>>
    ): Prisma__palabraClient<$Result.GetResult<Prisma.$palabraPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Palabras.
     *     @param {palabraCreateManyArgs} args - Arguments to create many Palabras.
     *     @example
     *     // Create many Palabras
     *     const palabra = await prisma.palabra.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends palabraCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, palabraCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Palabra.
     * @param {palabraDeleteArgs} args - Arguments to delete one Palabra.
     * @example
     * // Delete one Palabra
     * const Palabra = await prisma.palabra.delete({
     *   where: {
     *     // ... filter to delete one Palabra
     *   }
     * })
     * 
    **/
    delete<T extends palabraDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, palabraDeleteArgs<ExtArgs>>
    ): Prisma__palabraClient<$Result.GetResult<Prisma.$palabraPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Palabra.
     * @param {palabraUpdateArgs} args - Arguments to update one Palabra.
     * @example
     * // Update one Palabra
     * const palabra = await prisma.palabra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends palabraUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, palabraUpdateArgs<ExtArgs>>
    ): Prisma__palabraClient<$Result.GetResult<Prisma.$palabraPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Palabras.
     * @param {palabraDeleteManyArgs} args - Arguments to filter Palabras to delete.
     * @example
     * // Delete a few Palabras
     * const { count } = await prisma.palabra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends palabraDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, palabraDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Palabras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {palabraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Palabras
     * const palabra = await prisma.palabra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends palabraUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, palabraUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Palabra.
     * @param {palabraUpsertArgs} args - Arguments to update or create a Palabra.
     * @example
     * // Update or create a Palabra
     * const palabra = await prisma.palabra.upsert({
     *   create: {
     *     // ... data to create a Palabra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Palabra we want to update
     *   }
     * })
    **/
    upsert<T extends palabraUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, palabraUpsertArgs<ExtArgs>>
    ): Prisma__palabraClient<$Result.GetResult<Prisma.$palabraPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Palabras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {palabraCountArgs} args - Arguments to filter Palabras to count.
     * @example
     * // Count the number of Palabras
     * const count = await prisma.palabra.count({
     *   where: {
     *     // ... the filter for the Palabras we want to count
     *   }
     * })
    **/
    count<T extends palabraCountArgs>(
      args?: Subset<T, palabraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PalabraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Palabra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PalabraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PalabraAggregateArgs>(args: Subset<T, PalabraAggregateArgs>): Prisma.PrismaPromise<GetPalabraAggregateType<T>>

    /**
     * Group by Palabra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {palabraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends palabraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: palabraGroupByArgs['orderBy'] }
        : { orderBy?: palabraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, palabraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPalabraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the palabra model
   */
  readonly fields: palabraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for palabra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__palabraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    isla<T extends islaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, islaDefaultArgs<ExtArgs>>): Prisma__islaClient<$Result.GetResult<Prisma.$islaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    detalles_quiz<T extends palabra$detalles_quizArgs<ExtArgs> = {}>(args?: Subset<T, palabra$detalles_quizArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalles_quizPayload<ExtArgs>, T, 'findMany'> | Null>;

    palabras_video_cuestionario<T extends palabra$palabras_video_cuestionarioArgs<ExtArgs> = {}>(args?: Subset<T, palabra$palabras_video_cuestionarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$palabras_video_cuestionarioPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the palabra model
   */ 
  interface palabraFieldRefs {
    readonly id_palabra: FieldRef<"palabra", 'Int'>
    readonly id_isla: FieldRef<"palabra", 'Int'>
    readonly palabra: FieldRef<"palabra", 'String'>
    readonly id_video_segna: FieldRef<"palabra", 'String'>
    readonly url_icono: FieldRef<"palabra", 'String'>
  }
    

  // Custom InputTypes

  /**
   * palabra findUnique
   */
  export type palabraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabra
     */
    select?: palabraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabraInclude<ExtArgs> | null
    /**
     * Filter, which palabra to fetch.
     */
    where: palabraWhereUniqueInput
  }


  /**
   * palabra findUniqueOrThrow
   */
  export type palabraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabra
     */
    select?: palabraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabraInclude<ExtArgs> | null
    /**
     * Filter, which palabra to fetch.
     */
    where: palabraWhereUniqueInput
  }


  /**
   * palabra findFirst
   */
  export type palabraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabra
     */
    select?: palabraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabraInclude<ExtArgs> | null
    /**
     * Filter, which palabra to fetch.
     */
    where?: palabraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of palabras to fetch.
     */
    orderBy?: palabraOrderByWithRelationInput | palabraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for palabras.
     */
    cursor?: palabraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` palabras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` palabras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of palabras.
     */
    distinct?: PalabraScalarFieldEnum | PalabraScalarFieldEnum[]
  }


  /**
   * palabra findFirstOrThrow
   */
  export type palabraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabra
     */
    select?: palabraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabraInclude<ExtArgs> | null
    /**
     * Filter, which palabra to fetch.
     */
    where?: palabraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of palabras to fetch.
     */
    orderBy?: palabraOrderByWithRelationInput | palabraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for palabras.
     */
    cursor?: palabraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` palabras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` palabras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of palabras.
     */
    distinct?: PalabraScalarFieldEnum | PalabraScalarFieldEnum[]
  }


  /**
   * palabra findMany
   */
  export type palabraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabra
     */
    select?: palabraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabraInclude<ExtArgs> | null
    /**
     * Filter, which palabras to fetch.
     */
    where?: palabraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of palabras to fetch.
     */
    orderBy?: palabraOrderByWithRelationInput | palabraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing palabras.
     */
    cursor?: palabraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` palabras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` palabras.
     */
    skip?: number
    distinct?: PalabraScalarFieldEnum | PalabraScalarFieldEnum[]
  }


  /**
   * palabra create
   */
  export type palabraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabra
     */
    select?: palabraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabraInclude<ExtArgs> | null
    /**
     * The data needed to create a palabra.
     */
    data: XOR<palabraCreateInput, palabraUncheckedCreateInput>
  }


  /**
   * palabra createMany
   */
  export type palabraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many palabras.
     */
    data: palabraCreateManyInput | palabraCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * palabra update
   */
  export type palabraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabra
     */
    select?: palabraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabraInclude<ExtArgs> | null
    /**
     * The data needed to update a palabra.
     */
    data: XOR<palabraUpdateInput, palabraUncheckedUpdateInput>
    /**
     * Choose, which palabra to update.
     */
    where: palabraWhereUniqueInput
  }


  /**
   * palabra updateMany
   */
  export type palabraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update palabras.
     */
    data: XOR<palabraUpdateManyMutationInput, palabraUncheckedUpdateManyInput>
    /**
     * Filter which palabras to update
     */
    where?: palabraWhereInput
  }


  /**
   * palabra upsert
   */
  export type palabraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabra
     */
    select?: palabraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabraInclude<ExtArgs> | null
    /**
     * The filter to search for the palabra to update in case it exists.
     */
    where: palabraWhereUniqueInput
    /**
     * In case the palabra found by the `where` argument doesn't exist, create a new palabra with this data.
     */
    create: XOR<palabraCreateInput, palabraUncheckedCreateInput>
    /**
     * In case the palabra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<palabraUpdateInput, palabraUncheckedUpdateInput>
  }


  /**
   * palabra delete
   */
  export type palabraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabra
     */
    select?: palabraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabraInclude<ExtArgs> | null
    /**
     * Filter which palabra to delete.
     */
    where: palabraWhereUniqueInput
  }


  /**
   * palabra deleteMany
   */
  export type palabraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which palabras to delete
     */
    where?: palabraWhereInput
  }


  /**
   * palabra.detalles_quiz
   */
  export type palabra$detalles_quizArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalles_quiz
     */
    select?: detalles_quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalles_quizInclude<ExtArgs> | null
    where?: detalles_quizWhereInput
    orderBy?: detalles_quizOrderByWithRelationInput | detalles_quizOrderByWithRelationInput[]
    cursor?: detalles_quizWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalles_quizScalarFieldEnum | Detalles_quizScalarFieldEnum[]
  }


  /**
   * palabra.palabras_video_cuestionario
   */
  export type palabra$palabras_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabras_video_cuestionario
     */
    select?: palabras_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabras_video_cuestionarioInclude<ExtArgs> | null
    where?: palabras_video_cuestionarioWhereInput
    orderBy?: palabras_video_cuestionarioOrderByWithRelationInput | palabras_video_cuestionarioOrderByWithRelationInput[]
    cursor?: palabras_video_cuestionarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Palabras_video_cuestionarioScalarFieldEnum | Palabras_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * palabra without action
   */
  export type palabraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabra
     */
    select?: palabraSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabraInclude<ExtArgs> | null
  }



  /**
   * Model parte_video_cuestionario
   */

  export type AggregateParte_video_cuestionario = {
    _count: Parte_video_cuestionarioCountAggregateOutputType | null
    _avg: Parte_video_cuestionarioAvgAggregateOutputType | null
    _sum: Parte_video_cuestionarioSumAggregateOutputType | null
    _min: Parte_video_cuestionarioMinAggregateOutputType | null
    _max: Parte_video_cuestionarioMaxAggregateOutputType | null
  }

  export type Parte_video_cuestionarioAvgAggregateOutputType = {
    id_parte_video_cuestionario: number | null
    id_video_cuestionario: number | null
    indice: number | null
  }

  export type Parte_video_cuestionarioSumAggregateOutputType = {
    id_parte_video_cuestionario: number | null
    id_video_cuestionario: number | null
    indice: number | null
  }

  export type Parte_video_cuestionarioMinAggregateOutputType = {
    id_parte_video_cuestionario: number | null
    id_video_cuestionario: number | null
    url_video: string | null
    indice: number | null
    nombre: string | null
  }

  export type Parte_video_cuestionarioMaxAggregateOutputType = {
    id_parte_video_cuestionario: number | null
    id_video_cuestionario: number | null
    url_video: string | null
    indice: number | null
    nombre: string | null
  }

  export type Parte_video_cuestionarioCountAggregateOutputType = {
    id_parte_video_cuestionario: number
    id_video_cuestionario: number
    url_video: number
    indice: number
    nombre: number
    _all: number
  }


  export type Parte_video_cuestionarioAvgAggregateInputType = {
    id_parte_video_cuestionario?: true
    id_video_cuestionario?: true
    indice?: true
  }

  export type Parte_video_cuestionarioSumAggregateInputType = {
    id_parte_video_cuestionario?: true
    id_video_cuestionario?: true
    indice?: true
  }

  export type Parte_video_cuestionarioMinAggregateInputType = {
    id_parte_video_cuestionario?: true
    id_video_cuestionario?: true
    url_video?: true
    indice?: true
    nombre?: true
  }

  export type Parte_video_cuestionarioMaxAggregateInputType = {
    id_parte_video_cuestionario?: true
    id_video_cuestionario?: true
    url_video?: true
    indice?: true
    nombre?: true
  }

  export type Parte_video_cuestionarioCountAggregateInputType = {
    id_parte_video_cuestionario?: true
    id_video_cuestionario?: true
    url_video?: true
    indice?: true
    nombre?: true
    _all?: true
  }

  export type Parte_video_cuestionarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parte_video_cuestionario to aggregate.
     */
    where?: parte_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parte_video_cuestionarios to fetch.
     */
    orderBy?: parte_video_cuestionarioOrderByWithRelationInput | parte_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: parte_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parte_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parte_video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned parte_video_cuestionarios
    **/
    _count?: true | Parte_video_cuestionarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Parte_video_cuestionarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Parte_video_cuestionarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Parte_video_cuestionarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Parte_video_cuestionarioMaxAggregateInputType
  }

  export type GetParte_video_cuestionarioAggregateType<T extends Parte_video_cuestionarioAggregateArgs> = {
        [P in keyof T & keyof AggregateParte_video_cuestionario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParte_video_cuestionario[P]>
      : GetScalarType<T[P], AggregateParte_video_cuestionario[P]>
  }




  export type parte_video_cuestionarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: parte_video_cuestionarioWhereInput
    orderBy?: parte_video_cuestionarioOrderByWithAggregationInput | parte_video_cuestionarioOrderByWithAggregationInput[]
    by: Parte_video_cuestionarioScalarFieldEnum[] | Parte_video_cuestionarioScalarFieldEnum
    having?: parte_video_cuestionarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Parte_video_cuestionarioCountAggregateInputType | true
    _avg?: Parte_video_cuestionarioAvgAggregateInputType
    _sum?: Parte_video_cuestionarioSumAggregateInputType
    _min?: Parte_video_cuestionarioMinAggregateInputType
    _max?: Parte_video_cuestionarioMaxAggregateInputType
  }

  export type Parte_video_cuestionarioGroupByOutputType = {
    id_parte_video_cuestionario: number
    id_video_cuestionario: number
    url_video: string
    indice: number
    nombre: string
    _count: Parte_video_cuestionarioCountAggregateOutputType | null
    _avg: Parte_video_cuestionarioAvgAggregateOutputType | null
    _sum: Parte_video_cuestionarioSumAggregateOutputType | null
    _min: Parte_video_cuestionarioMinAggregateOutputType | null
    _max: Parte_video_cuestionarioMaxAggregateOutputType | null
  }

  type GetParte_video_cuestionarioGroupByPayload<T extends parte_video_cuestionarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Parte_video_cuestionarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Parte_video_cuestionarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Parte_video_cuestionarioGroupByOutputType[P]>
            : GetScalarType<T[P], Parte_video_cuestionarioGroupByOutputType[P]>
        }
      >
    >


  export type parte_video_cuestionarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_parte_video_cuestionario?: boolean
    id_video_cuestionario?: boolean
    url_video?: boolean
    indice?: boolean
    nombre?: boolean
    video_cuestionario?: boolean | video_cuestionarioDefaultArgs<ExtArgs>
    preguntas_video_cuestionario?: boolean | parte_video_cuestionario$preguntas_video_cuestionarioArgs<ExtArgs>
    _count?: boolean | Parte_video_cuestionarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["parte_video_cuestionario"]>

  export type parte_video_cuestionarioSelectScalar = {
    id_parte_video_cuestionario?: boolean
    id_video_cuestionario?: boolean
    url_video?: boolean
    indice?: boolean
    nombre?: boolean
  }

  export type parte_video_cuestionarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    video_cuestionario?: boolean | video_cuestionarioDefaultArgs<ExtArgs>
    preguntas_video_cuestionario?: boolean | parte_video_cuestionario$preguntas_video_cuestionarioArgs<ExtArgs>
    _count?: boolean | Parte_video_cuestionarioCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $parte_video_cuestionarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "parte_video_cuestionario"
    objects: {
      video_cuestionario: Prisma.$video_cuestionarioPayload<ExtArgs>
      preguntas_video_cuestionario: Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_parte_video_cuestionario: number
      id_video_cuestionario: number
      url_video: string
      indice: number
      nombre: string
    }, ExtArgs["result"]["parte_video_cuestionario"]>
    composites: {}
  }


  type parte_video_cuestionarioGetPayload<S extends boolean | null | undefined | parte_video_cuestionarioDefaultArgs> = $Result.GetResult<Prisma.$parte_video_cuestionarioPayload, S>

  type parte_video_cuestionarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<parte_video_cuestionarioFindManyArgs, 'select' | 'include'> & {
      select?: Parte_video_cuestionarioCountAggregateInputType | true
    }

  export interface parte_video_cuestionarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['parte_video_cuestionario'], meta: { name: 'parte_video_cuestionario' } }
    /**
     * Find zero or one Parte_video_cuestionario that matches the filter.
     * @param {parte_video_cuestionarioFindUniqueArgs} args - Arguments to find a Parte_video_cuestionario
     * @example
     * // Get one Parte_video_cuestionario
     * const parte_video_cuestionario = await prisma.parte_video_cuestionario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends parte_video_cuestionarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, parte_video_cuestionarioFindUniqueArgs<ExtArgs>>
    ): Prisma__parte_video_cuestionarioClient<$Result.GetResult<Prisma.$parte_video_cuestionarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Parte_video_cuestionario that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {parte_video_cuestionarioFindUniqueOrThrowArgs} args - Arguments to find a Parte_video_cuestionario
     * @example
     * // Get one Parte_video_cuestionario
     * const parte_video_cuestionario = await prisma.parte_video_cuestionario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends parte_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, parte_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__parte_video_cuestionarioClient<$Result.GetResult<Prisma.$parte_video_cuestionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Parte_video_cuestionario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parte_video_cuestionarioFindFirstArgs} args - Arguments to find a Parte_video_cuestionario
     * @example
     * // Get one Parte_video_cuestionario
     * const parte_video_cuestionario = await prisma.parte_video_cuestionario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends parte_video_cuestionarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, parte_video_cuestionarioFindFirstArgs<ExtArgs>>
    ): Prisma__parte_video_cuestionarioClient<$Result.GetResult<Prisma.$parte_video_cuestionarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Parte_video_cuestionario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parte_video_cuestionarioFindFirstOrThrowArgs} args - Arguments to find a Parte_video_cuestionario
     * @example
     * // Get one Parte_video_cuestionario
     * const parte_video_cuestionario = await prisma.parte_video_cuestionario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends parte_video_cuestionarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, parte_video_cuestionarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__parte_video_cuestionarioClient<$Result.GetResult<Prisma.$parte_video_cuestionarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Parte_video_cuestionarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parte_video_cuestionarioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Parte_video_cuestionarios
     * const parte_video_cuestionarios = await prisma.parte_video_cuestionario.findMany()
     * 
     * // Get first 10 Parte_video_cuestionarios
     * const parte_video_cuestionarios = await prisma.parte_video_cuestionario.findMany({ take: 10 })
     * 
     * // Only select the `id_parte_video_cuestionario`
     * const parte_video_cuestionarioWithId_parte_video_cuestionarioOnly = await prisma.parte_video_cuestionario.findMany({ select: { id_parte_video_cuestionario: true } })
     * 
    **/
    findMany<T extends parte_video_cuestionarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, parte_video_cuestionarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$parte_video_cuestionarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Parte_video_cuestionario.
     * @param {parte_video_cuestionarioCreateArgs} args - Arguments to create a Parte_video_cuestionario.
     * @example
     * // Create one Parte_video_cuestionario
     * const Parte_video_cuestionario = await prisma.parte_video_cuestionario.create({
     *   data: {
     *     // ... data to create a Parte_video_cuestionario
     *   }
     * })
     * 
    **/
    create<T extends parte_video_cuestionarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, parte_video_cuestionarioCreateArgs<ExtArgs>>
    ): Prisma__parte_video_cuestionarioClient<$Result.GetResult<Prisma.$parte_video_cuestionarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Parte_video_cuestionarios.
     *     @param {parte_video_cuestionarioCreateManyArgs} args - Arguments to create many Parte_video_cuestionarios.
     *     @example
     *     // Create many Parte_video_cuestionarios
     *     const parte_video_cuestionario = await prisma.parte_video_cuestionario.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends parte_video_cuestionarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, parte_video_cuestionarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Parte_video_cuestionario.
     * @param {parte_video_cuestionarioDeleteArgs} args - Arguments to delete one Parte_video_cuestionario.
     * @example
     * // Delete one Parte_video_cuestionario
     * const Parte_video_cuestionario = await prisma.parte_video_cuestionario.delete({
     *   where: {
     *     // ... filter to delete one Parte_video_cuestionario
     *   }
     * })
     * 
    **/
    delete<T extends parte_video_cuestionarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, parte_video_cuestionarioDeleteArgs<ExtArgs>>
    ): Prisma__parte_video_cuestionarioClient<$Result.GetResult<Prisma.$parte_video_cuestionarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Parte_video_cuestionario.
     * @param {parte_video_cuestionarioUpdateArgs} args - Arguments to update one Parte_video_cuestionario.
     * @example
     * // Update one Parte_video_cuestionario
     * const parte_video_cuestionario = await prisma.parte_video_cuestionario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends parte_video_cuestionarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, parte_video_cuestionarioUpdateArgs<ExtArgs>>
    ): Prisma__parte_video_cuestionarioClient<$Result.GetResult<Prisma.$parte_video_cuestionarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Parte_video_cuestionarios.
     * @param {parte_video_cuestionarioDeleteManyArgs} args - Arguments to filter Parte_video_cuestionarios to delete.
     * @example
     * // Delete a few Parte_video_cuestionarios
     * const { count } = await prisma.parte_video_cuestionario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends parte_video_cuestionarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, parte_video_cuestionarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Parte_video_cuestionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parte_video_cuestionarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Parte_video_cuestionarios
     * const parte_video_cuestionario = await prisma.parte_video_cuestionario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends parte_video_cuestionarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, parte_video_cuestionarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Parte_video_cuestionario.
     * @param {parte_video_cuestionarioUpsertArgs} args - Arguments to update or create a Parte_video_cuestionario.
     * @example
     * // Update or create a Parte_video_cuestionario
     * const parte_video_cuestionario = await prisma.parte_video_cuestionario.upsert({
     *   create: {
     *     // ... data to create a Parte_video_cuestionario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Parte_video_cuestionario we want to update
     *   }
     * })
    **/
    upsert<T extends parte_video_cuestionarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, parte_video_cuestionarioUpsertArgs<ExtArgs>>
    ): Prisma__parte_video_cuestionarioClient<$Result.GetResult<Prisma.$parte_video_cuestionarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Parte_video_cuestionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parte_video_cuestionarioCountArgs} args - Arguments to filter Parte_video_cuestionarios to count.
     * @example
     * // Count the number of Parte_video_cuestionarios
     * const count = await prisma.parte_video_cuestionario.count({
     *   where: {
     *     // ... the filter for the Parte_video_cuestionarios we want to count
     *   }
     * })
    **/
    count<T extends parte_video_cuestionarioCountArgs>(
      args?: Subset<T, parte_video_cuestionarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Parte_video_cuestionarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Parte_video_cuestionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Parte_video_cuestionarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Parte_video_cuestionarioAggregateArgs>(args: Subset<T, Parte_video_cuestionarioAggregateArgs>): Prisma.PrismaPromise<GetParte_video_cuestionarioAggregateType<T>>

    /**
     * Group by Parte_video_cuestionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {parte_video_cuestionarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends parte_video_cuestionarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: parte_video_cuestionarioGroupByArgs['orderBy'] }
        : { orderBy?: parte_video_cuestionarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, parte_video_cuestionarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParte_video_cuestionarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the parte_video_cuestionario model
   */
  readonly fields: parte_video_cuestionarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for parte_video_cuestionario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__parte_video_cuestionarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    video_cuestionario<T extends video_cuestionarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, video_cuestionarioDefaultArgs<ExtArgs>>): Prisma__video_cuestionarioClient<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    preguntas_video_cuestionario<T extends parte_video_cuestionario$preguntas_video_cuestionarioArgs<ExtArgs> = {}>(args?: Subset<T, parte_video_cuestionario$preguntas_video_cuestionarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the parte_video_cuestionario model
   */ 
  interface parte_video_cuestionarioFieldRefs {
    readonly id_parte_video_cuestionario: FieldRef<"parte_video_cuestionario", 'Int'>
    readonly id_video_cuestionario: FieldRef<"parte_video_cuestionario", 'Int'>
    readonly url_video: FieldRef<"parte_video_cuestionario", 'String'>
    readonly indice: FieldRef<"parte_video_cuestionario", 'Int'>
    readonly nombre: FieldRef<"parte_video_cuestionario", 'String'>
  }
    

  // Custom InputTypes

  /**
   * parte_video_cuestionario findUnique
   */
  export type parte_video_cuestionarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parte_video_cuestionario
     */
    select?: parte_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: parte_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which parte_video_cuestionario to fetch.
     */
    where: parte_video_cuestionarioWhereUniqueInput
  }


  /**
   * parte_video_cuestionario findUniqueOrThrow
   */
  export type parte_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parte_video_cuestionario
     */
    select?: parte_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: parte_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which parte_video_cuestionario to fetch.
     */
    where: parte_video_cuestionarioWhereUniqueInput
  }


  /**
   * parte_video_cuestionario findFirst
   */
  export type parte_video_cuestionarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parte_video_cuestionario
     */
    select?: parte_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: parte_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which parte_video_cuestionario to fetch.
     */
    where?: parte_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parte_video_cuestionarios to fetch.
     */
    orderBy?: parte_video_cuestionarioOrderByWithRelationInput | parte_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parte_video_cuestionarios.
     */
    cursor?: parte_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parte_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parte_video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parte_video_cuestionarios.
     */
    distinct?: Parte_video_cuestionarioScalarFieldEnum | Parte_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * parte_video_cuestionario findFirstOrThrow
   */
  export type parte_video_cuestionarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parte_video_cuestionario
     */
    select?: parte_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: parte_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which parte_video_cuestionario to fetch.
     */
    where?: parte_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parte_video_cuestionarios to fetch.
     */
    orderBy?: parte_video_cuestionarioOrderByWithRelationInput | parte_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for parte_video_cuestionarios.
     */
    cursor?: parte_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parte_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parte_video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of parte_video_cuestionarios.
     */
    distinct?: Parte_video_cuestionarioScalarFieldEnum | Parte_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * parte_video_cuestionario findMany
   */
  export type parte_video_cuestionarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parte_video_cuestionario
     */
    select?: parte_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: parte_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which parte_video_cuestionarios to fetch.
     */
    where?: parte_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of parte_video_cuestionarios to fetch.
     */
    orderBy?: parte_video_cuestionarioOrderByWithRelationInput | parte_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing parte_video_cuestionarios.
     */
    cursor?: parte_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` parte_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` parte_video_cuestionarios.
     */
    skip?: number
    distinct?: Parte_video_cuestionarioScalarFieldEnum | Parte_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * parte_video_cuestionario create
   */
  export type parte_video_cuestionarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parte_video_cuestionario
     */
    select?: parte_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: parte_video_cuestionarioInclude<ExtArgs> | null
    /**
     * The data needed to create a parte_video_cuestionario.
     */
    data: XOR<parte_video_cuestionarioCreateInput, parte_video_cuestionarioUncheckedCreateInput>
  }


  /**
   * parte_video_cuestionario createMany
   */
  export type parte_video_cuestionarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many parte_video_cuestionarios.
     */
    data: parte_video_cuestionarioCreateManyInput | parte_video_cuestionarioCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * parte_video_cuestionario update
   */
  export type parte_video_cuestionarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parte_video_cuestionario
     */
    select?: parte_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: parte_video_cuestionarioInclude<ExtArgs> | null
    /**
     * The data needed to update a parte_video_cuestionario.
     */
    data: XOR<parte_video_cuestionarioUpdateInput, parte_video_cuestionarioUncheckedUpdateInput>
    /**
     * Choose, which parte_video_cuestionario to update.
     */
    where: parte_video_cuestionarioWhereUniqueInput
  }


  /**
   * parte_video_cuestionario updateMany
   */
  export type parte_video_cuestionarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update parte_video_cuestionarios.
     */
    data: XOR<parte_video_cuestionarioUpdateManyMutationInput, parte_video_cuestionarioUncheckedUpdateManyInput>
    /**
     * Filter which parte_video_cuestionarios to update
     */
    where?: parte_video_cuestionarioWhereInput
  }


  /**
   * parte_video_cuestionario upsert
   */
  export type parte_video_cuestionarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parte_video_cuestionario
     */
    select?: parte_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: parte_video_cuestionarioInclude<ExtArgs> | null
    /**
     * The filter to search for the parte_video_cuestionario to update in case it exists.
     */
    where: parte_video_cuestionarioWhereUniqueInput
    /**
     * In case the parte_video_cuestionario found by the `where` argument doesn't exist, create a new parte_video_cuestionario with this data.
     */
    create: XOR<parte_video_cuestionarioCreateInput, parte_video_cuestionarioUncheckedCreateInput>
    /**
     * In case the parte_video_cuestionario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<parte_video_cuestionarioUpdateInput, parte_video_cuestionarioUncheckedUpdateInput>
  }


  /**
   * parte_video_cuestionario delete
   */
  export type parte_video_cuestionarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parte_video_cuestionario
     */
    select?: parte_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: parte_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter which parte_video_cuestionario to delete.
     */
    where: parte_video_cuestionarioWhereUniqueInput
  }


  /**
   * parte_video_cuestionario deleteMany
   */
  export type parte_video_cuestionarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which parte_video_cuestionarios to delete
     */
    where?: parte_video_cuestionarioWhereInput
  }


  /**
   * parte_video_cuestionario.preguntas_video_cuestionario
   */
  export type parte_video_cuestionario$preguntas_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the preguntas_video_cuestionario
     */
    select?: preguntas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: preguntas_video_cuestionarioInclude<ExtArgs> | null
    where?: preguntas_video_cuestionarioWhereInput
    orderBy?: preguntas_video_cuestionarioOrderByWithRelationInput | preguntas_video_cuestionarioOrderByWithRelationInput[]
    cursor?: preguntas_video_cuestionarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Preguntas_video_cuestionarioScalarFieldEnum | Preguntas_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * parte_video_cuestionario without action
   */
  export type parte_video_cuestionarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the parte_video_cuestionario
     */
    select?: parte_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: parte_video_cuestionarioInclude<ExtArgs> | null
  }



  /**
   * Model palabras_video_cuestionario
   */

  export type AggregatePalabras_video_cuestionario = {
    _count: Palabras_video_cuestionarioCountAggregateOutputType | null
    _avg: Palabras_video_cuestionarioAvgAggregateOutputType | null
    _sum: Palabras_video_cuestionarioSumAggregateOutputType | null
    _min: Palabras_video_cuestionarioMinAggregateOutputType | null
    _max: Palabras_video_cuestionarioMaxAggregateOutputType | null
  }

  export type Palabras_video_cuestionarioAvgAggregateOutputType = {
    id_video_cuestionario: number | null
    id_palabra: number | null
  }

  export type Palabras_video_cuestionarioSumAggregateOutputType = {
    id_video_cuestionario: number | null
    id_palabra: number | null
  }

  export type Palabras_video_cuestionarioMinAggregateOutputType = {
    id_video_cuestionario: number | null
    id_palabra: number | null
  }

  export type Palabras_video_cuestionarioMaxAggregateOutputType = {
    id_video_cuestionario: number | null
    id_palabra: number | null
  }

  export type Palabras_video_cuestionarioCountAggregateOutputType = {
    id_video_cuestionario: number
    id_palabra: number
    _all: number
  }


  export type Palabras_video_cuestionarioAvgAggregateInputType = {
    id_video_cuestionario?: true
    id_palabra?: true
  }

  export type Palabras_video_cuestionarioSumAggregateInputType = {
    id_video_cuestionario?: true
    id_palabra?: true
  }

  export type Palabras_video_cuestionarioMinAggregateInputType = {
    id_video_cuestionario?: true
    id_palabra?: true
  }

  export type Palabras_video_cuestionarioMaxAggregateInputType = {
    id_video_cuestionario?: true
    id_palabra?: true
  }

  export type Palabras_video_cuestionarioCountAggregateInputType = {
    id_video_cuestionario?: true
    id_palabra?: true
    _all?: true
  }

  export type Palabras_video_cuestionarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which palabras_video_cuestionario to aggregate.
     */
    where?: palabras_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of palabras_video_cuestionarios to fetch.
     */
    orderBy?: palabras_video_cuestionarioOrderByWithRelationInput | palabras_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: palabras_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` palabras_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` palabras_video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned palabras_video_cuestionarios
    **/
    _count?: true | Palabras_video_cuestionarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Palabras_video_cuestionarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Palabras_video_cuestionarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Palabras_video_cuestionarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Palabras_video_cuestionarioMaxAggregateInputType
  }

  export type GetPalabras_video_cuestionarioAggregateType<T extends Palabras_video_cuestionarioAggregateArgs> = {
        [P in keyof T & keyof AggregatePalabras_video_cuestionario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePalabras_video_cuestionario[P]>
      : GetScalarType<T[P], AggregatePalabras_video_cuestionario[P]>
  }




  export type palabras_video_cuestionarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: palabras_video_cuestionarioWhereInput
    orderBy?: palabras_video_cuestionarioOrderByWithAggregationInput | palabras_video_cuestionarioOrderByWithAggregationInput[]
    by: Palabras_video_cuestionarioScalarFieldEnum[] | Palabras_video_cuestionarioScalarFieldEnum
    having?: palabras_video_cuestionarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Palabras_video_cuestionarioCountAggregateInputType | true
    _avg?: Palabras_video_cuestionarioAvgAggregateInputType
    _sum?: Palabras_video_cuestionarioSumAggregateInputType
    _min?: Palabras_video_cuestionarioMinAggregateInputType
    _max?: Palabras_video_cuestionarioMaxAggregateInputType
  }

  export type Palabras_video_cuestionarioGroupByOutputType = {
    id_video_cuestionario: number
    id_palabra: number
    _count: Palabras_video_cuestionarioCountAggregateOutputType | null
    _avg: Palabras_video_cuestionarioAvgAggregateOutputType | null
    _sum: Palabras_video_cuestionarioSumAggregateOutputType | null
    _min: Palabras_video_cuestionarioMinAggregateOutputType | null
    _max: Palabras_video_cuestionarioMaxAggregateOutputType | null
  }

  type GetPalabras_video_cuestionarioGroupByPayload<T extends palabras_video_cuestionarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Palabras_video_cuestionarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Palabras_video_cuestionarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Palabras_video_cuestionarioGroupByOutputType[P]>
            : GetScalarType<T[P], Palabras_video_cuestionarioGroupByOutputType[P]>
        }
      >
    >


  export type palabras_video_cuestionarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_video_cuestionario?: boolean
    id_palabra?: boolean
    video_cuestionario?: boolean | video_cuestionarioDefaultArgs<ExtArgs>
    palabra?: boolean | palabraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["palabras_video_cuestionario"]>

  export type palabras_video_cuestionarioSelectScalar = {
    id_video_cuestionario?: boolean
    id_palabra?: boolean
  }

  export type palabras_video_cuestionarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    video_cuestionario?: boolean | video_cuestionarioDefaultArgs<ExtArgs>
    palabra?: boolean | palabraDefaultArgs<ExtArgs>
  }


  export type $palabras_video_cuestionarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "palabras_video_cuestionario"
    objects: {
      video_cuestionario: Prisma.$video_cuestionarioPayload<ExtArgs>
      palabra: Prisma.$palabraPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_video_cuestionario: number
      id_palabra: number
    }, ExtArgs["result"]["palabras_video_cuestionario"]>
    composites: {}
  }


  type palabras_video_cuestionarioGetPayload<S extends boolean | null | undefined | palabras_video_cuestionarioDefaultArgs> = $Result.GetResult<Prisma.$palabras_video_cuestionarioPayload, S>

  type palabras_video_cuestionarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<palabras_video_cuestionarioFindManyArgs, 'select' | 'include'> & {
      select?: Palabras_video_cuestionarioCountAggregateInputType | true
    }

  export interface palabras_video_cuestionarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['palabras_video_cuestionario'], meta: { name: 'palabras_video_cuestionario' } }
    /**
     * Find zero or one Palabras_video_cuestionario that matches the filter.
     * @param {palabras_video_cuestionarioFindUniqueArgs} args - Arguments to find a Palabras_video_cuestionario
     * @example
     * // Get one Palabras_video_cuestionario
     * const palabras_video_cuestionario = await prisma.palabras_video_cuestionario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends palabras_video_cuestionarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, palabras_video_cuestionarioFindUniqueArgs<ExtArgs>>
    ): Prisma__palabras_video_cuestionarioClient<$Result.GetResult<Prisma.$palabras_video_cuestionarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Palabras_video_cuestionario that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {palabras_video_cuestionarioFindUniqueOrThrowArgs} args - Arguments to find a Palabras_video_cuestionario
     * @example
     * // Get one Palabras_video_cuestionario
     * const palabras_video_cuestionario = await prisma.palabras_video_cuestionario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends palabras_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, palabras_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__palabras_video_cuestionarioClient<$Result.GetResult<Prisma.$palabras_video_cuestionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Palabras_video_cuestionario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {palabras_video_cuestionarioFindFirstArgs} args - Arguments to find a Palabras_video_cuestionario
     * @example
     * // Get one Palabras_video_cuestionario
     * const palabras_video_cuestionario = await prisma.palabras_video_cuestionario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends palabras_video_cuestionarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, palabras_video_cuestionarioFindFirstArgs<ExtArgs>>
    ): Prisma__palabras_video_cuestionarioClient<$Result.GetResult<Prisma.$palabras_video_cuestionarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Palabras_video_cuestionario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {palabras_video_cuestionarioFindFirstOrThrowArgs} args - Arguments to find a Palabras_video_cuestionario
     * @example
     * // Get one Palabras_video_cuestionario
     * const palabras_video_cuestionario = await prisma.palabras_video_cuestionario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends palabras_video_cuestionarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, palabras_video_cuestionarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__palabras_video_cuestionarioClient<$Result.GetResult<Prisma.$palabras_video_cuestionarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Palabras_video_cuestionarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {palabras_video_cuestionarioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Palabras_video_cuestionarios
     * const palabras_video_cuestionarios = await prisma.palabras_video_cuestionario.findMany()
     * 
     * // Get first 10 Palabras_video_cuestionarios
     * const palabras_video_cuestionarios = await prisma.palabras_video_cuestionario.findMany({ take: 10 })
     * 
     * // Only select the `id_video_cuestionario`
     * const palabras_video_cuestionarioWithId_video_cuestionarioOnly = await prisma.palabras_video_cuestionario.findMany({ select: { id_video_cuestionario: true } })
     * 
    **/
    findMany<T extends palabras_video_cuestionarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, palabras_video_cuestionarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$palabras_video_cuestionarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Palabras_video_cuestionario.
     * @param {palabras_video_cuestionarioCreateArgs} args - Arguments to create a Palabras_video_cuestionario.
     * @example
     * // Create one Palabras_video_cuestionario
     * const Palabras_video_cuestionario = await prisma.palabras_video_cuestionario.create({
     *   data: {
     *     // ... data to create a Palabras_video_cuestionario
     *   }
     * })
     * 
    **/
    create<T extends palabras_video_cuestionarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, palabras_video_cuestionarioCreateArgs<ExtArgs>>
    ): Prisma__palabras_video_cuestionarioClient<$Result.GetResult<Prisma.$palabras_video_cuestionarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Palabras_video_cuestionarios.
     *     @param {palabras_video_cuestionarioCreateManyArgs} args - Arguments to create many Palabras_video_cuestionarios.
     *     @example
     *     // Create many Palabras_video_cuestionarios
     *     const palabras_video_cuestionario = await prisma.palabras_video_cuestionario.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends palabras_video_cuestionarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, palabras_video_cuestionarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Palabras_video_cuestionario.
     * @param {palabras_video_cuestionarioDeleteArgs} args - Arguments to delete one Palabras_video_cuestionario.
     * @example
     * // Delete one Palabras_video_cuestionario
     * const Palabras_video_cuestionario = await prisma.palabras_video_cuestionario.delete({
     *   where: {
     *     // ... filter to delete one Palabras_video_cuestionario
     *   }
     * })
     * 
    **/
    delete<T extends palabras_video_cuestionarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, palabras_video_cuestionarioDeleteArgs<ExtArgs>>
    ): Prisma__palabras_video_cuestionarioClient<$Result.GetResult<Prisma.$palabras_video_cuestionarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Palabras_video_cuestionario.
     * @param {palabras_video_cuestionarioUpdateArgs} args - Arguments to update one Palabras_video_cuestionario.
     * @example
     * // Update one Palabras_video_cuestionario
     * const palabras_video_cuestionario = await prisma.palabras_video_cuestionario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends palabras_video_cuestionarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, palabras_video_cuestionarioUpdateArgs<ExtArgs>>
    ): Prisma__palabras_video_cuestionarioClient<$Result.GetResult<Prisma.$palabras_video_cuestionarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Palabras_video_cuestionarios.
     * @param {palabras_video_cuestionarioDeleteManyArgs} args - Arguments to filter Palabras_video_cuestionarios to delete.
     * @example
     * // Delete a few Palabras_video_cuestionarios
     * const { count } = await prisma.palabras_video_cuestionario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends palabras_video_cuestionarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, palabras_video_cuestionarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Palabras_video_cuestionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {palabras_video_cuestionarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Palabras_video_cuestionarios
     * const palabras_video_cuestionario = await prisma.palabras_video_cuestionario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends palabras_video_cuestionarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, palabras_video_cuestionarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Palabras_video_cuestionario.
     * @param {palabras_video_cuestionarioUpsertArgs} args - Arguments to update or create a Palabras_video_cuestionario.
     * @example
     * // Update or create a Palabras_video_cuestionario
     * const palabras_video_cuestionario = await prisma.palabras_video_cuestionario.upsert({
     *   create: {
     *     // ... data to create a Palabras_video_cuestionario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Palabras_video_cuestionario we want to update
     *   }
     * })
    **/
    upsert<T extends palabras_video_cuestionarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, palabras_video_cuestionarioUpsertArgs<ExtArgs>>
    ): Prisma__palabras_video_cuestionarioClient<$Result.GetResult<Prisma.$palabras_video_cuestionarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Palabras_video_cuestionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {palabras_video_cuestionarioCountArgs} args - Arguments to filter Palabras_video_cuestionarios to count.
     * @example
     * // Count the number of Palabras_video_cuestionarios
     * const count = await prisma.palabras_video_cuestionario.count({
     *   where: {
     *     // ... the filter for the Palabras_video_cuestionarios we want to count
     *   }
     * })
    **/
    count<T extends palabras_video_cuestionarioCountArgs>(
      args?: Subset<T, palabras_video_cuestionarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Palabras_video_cuestionarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Palabras_video_cuestionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Palabras_video_cuestionarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Palabras_video_cuestionarioAggregateArgs>(args: Subset<T, Palabras_video_cuestionarioAggregateArgs>): Prisma.PrismaPromise<GetPalabras_video_cuestionarioAggregateType<T>>

    /**
     * Group by Palabras_video_cuestionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {palabras_video_cuestionarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends palabras_video_cuestionarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: palabras_video_cuestionarioGroupByArgs['orderBy'] }
        : { orderBy?: palabras_video_cuestionarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, palabras_video_cuestionarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPalabras_video_cuestionarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the palabras_video_cuestionario model
   */
  readonly fields: palabras_video_cuestionarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for palabras_video_cuestionario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__palabras_video_cuestionarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    video_cuestionario<T extends video_cuestionarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, video_cuestionarioDefaultArgs<ExtArgs>>): Prisma__video_cuestionarioClient<$Result.GetResult<Prisma.$video_cuestionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    palabra<T extends palabraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, palabraDefaultArgs<ExtArgs>>): Prisma__palabraClient<$Result.GetResult<Prisma.$palabraPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the palabras_video_cuestionario model
   */ 
  interface palabras_video_cuestionarioFieldRefs {
    readonly id_video_cuestionario: FieldRef<"palabras_video_cuestionario", 'Int'>
    readonly id_palabra: FieldRef<"palabras_video_cuestionario", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * palabras_video_cuestionario findUnique
   */
  export type palabras_video_cuestionarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabras_video_cuestionario
     */
    select?: palabras_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabras_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which palabras_video_cuestionario to fetch.
     */
    where: palabras_video_cuestionarioWhereUniqueInput
  }


  /**
   * palabras_video_cuestionario findUniqueOrThrow
   */
  export type palabras_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabras_video_cuestionario
     */
    select?: palabras_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabras_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which palabras_video_cuestionario to fetch.
     */
    where: palabras_video_cuestionarioWhereUniqueInput
  }


  /**
   * palabras_video_cuestionario findFirst
   */
  export type palabras_video_cuestionarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabras_video_cuestionario
     */
    select?: palabras_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabras_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which palabras_video_cuestionario to fetch.
     */
    where?: palabras_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of palabras_video_cuestionarios to fetch.
     */
    orderBy?: palabras_video_cuestionarioOrderByWithRelationInput | palabras_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for palabras_video_cuestionarios.
     */
    cursor?: palabras_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` palabras_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` palabras_video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of palabras_video_cuestionarios.
     */
    distinct?: Palabras_video_cuestionarioScalarFieldEnum | Palabras_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * palabras_video_cuestionario findFirstOrThrow
   */
  export type palabras_video_cuestionarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabras_video_cuestionario
     */
    select?: palabras_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabras_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which palabras_video_cuestionario to fetch.
     */
    where?: palabras_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of palabras_video_cuestionarios to fetch.
     */
    orderBy?: palabras_video_cuestionarioOrderByWithRelationInput | palabras_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for palabras_video_cuestionarios.
     */
    cursor?: palabras_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` palabras_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` palabras_video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of palabras_video_cuestionarios.
     */
    distinct?: Palabras_video_cuestionarioScalarFieldEnum | Palabras_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * palabras_video_cuestionario findMany
   */
  export type palabras_video_cuestionarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabras_video_cuestionario
     */
    select?: palabras_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabras_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which palabras_video_cuestionarios to fetch.
     */
    where?: palabras_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of palabras_video_cuestionarios to fetch.
     */
    orderBy?: palabras_video_cuestionarioOrderByWithRelationInput | palabras_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing palabras_video_cuestionarios.
     */
    cursor?: palabras_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` palabras_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` palabras_video_cuestionarios.
     */
    skip?: number
    distinct?: Palabras_video_cuestionarioScalarFieldEnum | Palabras_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * palabras_video_cuestionario create
   */
  export type palabras_video_cuestionarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabras_video_cuestionario
     */
    select?: palabras_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabras_video_cuestionarioInclude<ExtArgs> | null
    /**
     * The data needed to create a palabras_video_cuestionario.
     */
    data: XOR<palabras_video_cuestionarioCreateInput, palabras_video_cuestionarioUncheckedCreateInput>
  }


  /**
   * palabras_video_cuestionario createMany
   */
  export type palabras_video_cuestionarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many palabras_video_cuestionarios.
     */
    data: palabras_video_cuestionarioCreateManyInput | palabras_video_cuestionarioCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * palabras_video_cuestionario update
   */
  export type palabras_video_cuestionarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabras_video_cuestionario
     */
    select?: palabras_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabras_video_cuestionarioInclude<ExtArgs> | null
    /**
     * The data needed to update a palabras_video_cuestionario.
     */
    data: XOR<palabras_video_cuestionarioUpdateInput, palabras_video_cuestionarioUncheckedUpdateInput>
    /**
     * Choose, which palabras_video_cuestionario to update.
     */
    where: palabras_video_cuestionarioWhereUniqueInput
  }


  /**
   * palabras_video_cuestionario updateMany
   */
  export type palabras_video_cuestionarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update palabras_video_cuestionarios.
     */
    data: XOR<palabras_video_cuestionarioUpdateManyMutationInput, palabras_video_cuestionarioUncheckedUpdateManyInput>
    /**
     * Filter which palabras_video_cuestionarios to update
     */
    where?: palabras_video_cuestionarioWhereInput
  }


  /**
   * palabras_video_cuestionario upsert
   */
  export type palabras_video_cuestionarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabras_video_cuestionario
     */
    select?: palabras_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabras_video_cuestionarioInclude<ExtArgs> | null
    /**
     * The filter to search for the palabras_video_cuestionario to update in case it exists.
     */
    where: palabras_video_cuestionarioWhereUniqueInput
    /**
     * In case the palabras_video_cuestionario found by the `where` argument doesn't exist, create a new palabras_video_cuestionario with this data.
     */
    create: XOR<palabras_video_cuestionarioCreateInput, palabras_video_cuestionarioUncheckedCreateInput>
    /**
     * In case the palabras_video_cuestionario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<palabras_video_cuestionarioUpdateInput, palabras_video_cuestionarioUncheckedUpdateInput>
  }


  /**
   * palabras_video_cuestionario delete
   */
  export type palabras_video_cuestionarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabras_video_cuestionario
     */
    select?: palabras_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabras_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter which palabras_video_cuestionario to delete.
     */
    where: palabras_video_cuestionarioWhereUniqueInput
  }


  /**
   * palabras_video_cuestionario deleteMany
   */
  export type palabras_video_cuestionarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which palabras_video_cuestionarios to delete
     */
    where?: palabras_video_cuestionarioWhereInput
  }


  /**
   * palabras_video_cuestionario without action
   */
  export type palabras_video_cuestionarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the palabras_video_cuestionario
     */
    select?: palabras_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: palabras_video_cuestionarioInclude<ExtArgs> | null
  }



  /**
   * Model preguntas_video_cuestionario
   */

  export type AggregatePreguntas_video_cuestionario = {
    _count: Preguntas_video_cuestionarioCountAggregateOutputType | null
    _avg: Preguntas_video_cuestionarioAvgAggregateOutputType | null
    _sum: Preguntas_video_cuestionarioSumAggregateOutputType | null
    _min: Preguntas_video_cuestionarioMinAggregateOutputType | null
    _max: Preguntas_video_cuestionarioMaxAggregateOutputType | null
  }

  export type Preguntas_video_cuestionarioAvgAggregateOutputType = {
    id_preguntas_video_cuestionario: number | null
    id_parte_video_cuestionario: number | null
  }

  export type Preguntas_video_cuestionarioSumAggregateOutputType = {
    id_preguntas_video_cuestionario: number | null
    id_parte_video_cuestionario: number | null
  }

  export type Preguntas_video_cuestionarioMinAggregateOutputType = {
    id_preguntas_video_cuestionario: number | null
    id_parte_video_cuestionario: number | null
    pregunta: string | null
  }

  export type Preguntas_video_cuestionarioMaxAggregateOutputType = {
    id_preguntas_video_cuestionario: number | null
    id_parte_video_cuestionario: number | null
    pregunta: string | null
  }

  export type Preguntas_video_cuestionarioCountAggregateOutputType = {
    id_preguntas_video_cuestionario: number
    id_parte_video_cuestionario: number
    pregunta: number
    _all: number
  }


  export type Preguntas_video_cuestionarioAvgAggregateInputType = {
    id_preguntas_video_cuestionario?: true
    id_parte_video_cuestionario?: true
  }

  export type Preguntas_video_cuestionarioSumAggregateInputType = {
    id_preguntas_video_cuestionario?: true
    id_parte_video_cuestionario?: true
  }

  export type Preguntas_video_cuestionarioMinAggregateInputType = {
    id_preguntas_video_cuestionario?: true
    id_parte_video_cuestionario?: true
    pregunta?: true
  }

  export type Preguntas_video_cuestionarioMaxAggregateInputType = {
    id_preguntas_video_cuestionario?: true
    id_parte_video_cuestionario?: true
    pregunta?: true
  }

  export type Preguntas_video_cuestionarioCountAggregateInputType = {
    id_preguntas_video_cuestionario?: true
    id_parte_video_cuestionario?: true
    pregunta?: true
    _all?: true
  }

  export type Preguntas_video_cuestionarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which preguntas_video_cuestionario to aggregate.
     */
    where?: preguntas_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of preguntas_video_cuestionarios to fetch.
     */
    orderBy?: preguntas_video_cuestionarioOrderByWithRelationInput | preguntas_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: preguntas_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` preguntas_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` preguntas_video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned preguntas_video_cuestionarios
    **/
    _count?: true | Preguntas_video_cuestionarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Preguntas_video_cuestionarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Preguntas_video_cuestionarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Preguntas_video_cuestionarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Preguntas_video_cuestionarioMaxAggregateInputType
  }

  export type GetPreguntas_video_cuestionarioAggregateType<T extends Preguntas_video_cuestionarioAggregateArgs> = {
        [P in keyof T & keyof AggregatePreguntas_video_cuestionario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePreguntas_video_cuestionario[P]>
      : GetScalarType<T[P], AggregatePreguntas_video_cuestionario[P]>
  }




  export type preguntas_video_cuestionarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: preguntas_video_cuestionarioWhereInput
    orderBy?: preguntas_video_cuestionarioOrderByWithAggregationInput | preguntas_video_cuestionarioOrderByWithAggregationInput[]
    by: Preguntas_video_cuestionarioScalarFieldEnum[] | Preguntas_video_cuestionarioScalarFieldEnum
    having?: preguntas_video_cuestionarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Preguntas_video_cuestionarioCountAggregateInputType | true
    _avg?: Preguntas_video_cuestionarioAvgAggregateInputType
    _sum?: Preguntas_video_cuestionarioSumAggregateInputType
    _min?: Preguntas_video_cuestionarioMinAggregateInputType
    _max?: Preguntas_video_cuestionarioMaxAggregateInputType
  }

  export type Preguntas_video_cuestionarioGroupByOutputType = {
    id_preguntas_video_cuestionario: number
    id_parte_video_cuestionario: number
    pregunta: string
    _count: Preguntas_video_cuestionarioCountAggregateOutputType | null
    _avg: Preguntas_video_cuestionarioAvgAggregateOutputType | null
    _sum: Preguntas_video_cuestionarioSumAggregateOutputType | null
    _min: Preguntas_video_cuestionarioMinAggregateOutputType | null
    _max: Preguntas_video_cuestionarioMaxAggregateOutputType | null
  }

  type GetPreguntas_video_cuestionarioGroupByPayload<T extends preguntas_video_cuestionarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Preguntas_video_cuestionarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Preguntas_video_cuestionarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Preguntas_video_cuestionarioGroupByOutputType[P]>
            : GetScalarType<T[P], Preguntas_video_cuestionarioGroupByOutputType[P]>
        }
      >
    >


  export type preguntas_video_cuestionarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_preguntas_video_cuestionario?: boolean
    id_parte_video_cuestionario?: boolean
    pregunta?: boolean
    parte_video_cuestionario?: boolean | parte_video_cuestionarioDefaultArgs<ExtArgs>
    respuestas_video_cuestionario?: boolean | preguntas_video_cuestionario$respuestas_video_cuestionarioArgs<ExtArgs>
    _count?: boolean | Preguntas_video_cuestionarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["preguntas_video_cuestionario"]>

  export type preguntas_video_cuestionarioSelectScalar = {
    id_preguntas_video_cuestionario?: boolean
    id_parte_video_cuestionario?: boolean
    pregunta?: boolean
  }

  export type preguntas_video_cuestionarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parte_video_cuestionario?: boolean | parte_video_cuestionarioDefaultArgs<ExtArgs>
    respuestas_video_cuestionario?: boolean | preguntas_video_cuestionario$respuestas_video_cuestionarioArgs<ExtArgs>
    _count?: boolean | Preguntas_video_cuestionarioCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $preguntas_video_cuestionarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "preguntas_video_cuestionario"
    objects: {
      parte_video_cuestionario: Prisma.$parte_video_cuestionarioPayload<ExtArgs>
      respuestas_video_cuestionario: Prisma.$respuestas_video_cuestionarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_preguntas_video_cuestionario: number
      id_parte_video_cuestionario: number
      pregunta: string
    }, ExtArgs["result"]["preguntas_video_cuestionario"]>
    composites: {}
  }


  type preguntas_video_cuestionarioGetPayload<S extends boolean | null | undefined | preguntas_video_cuestionarioDefaultArgs> = $Result.GetResult<Prisma.$preguntas_video_cuestionarioPayload, S>

  type preguntas_video_cuestionarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<preguntas_video_cuestionarioFindManyArgs, 'select' | 'include'> & {
      select?: Preguntas_video_cuestionarioCountAggregateInputType | true
    }

  export interface preguntas_video_cuestionarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['preguntas_video_cuestionario'], meta: { name: 'preguntas_video_cuestionario' } }
    /**
     * Find zero or one Preguntas_video_cuestionario that matches the filter.
     * @param {preguntas_video_cuestionarioFindUniqueArgs} args - Arguments to find a Preguntas_video_cuestionario
     * @example
     * // Get one Preguntas_video_cuestionario
     * const preguntas_video_cuestionario = await prisma.preguntas_video_cuestionario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends preguntas_video_cuestionarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, preguntas_video_cuestionarioFindUniqueArgs<ExtArgs>>
    ): Prisma__preguntas_video_cuestionarioClient<$Result.GetResult<Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Preguntas_video_cuestionario that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {preguntas_video_cuestionarioFindUniqueOrThrowArgs} args - Arguments to find a Preguntas_video_cuestionario
     * @example
     * // Get one Preguntas_video_cuestionario
     * const preguntas_video_cuestionario = await prisma.preguntas_video_cuestionario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends preguntas_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, preguntas_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__preguntas_video_cuestionarioClient<$Result.GetResult<Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Preguntas_video_cuestionario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {preguntas_video_cuestionarioFindFirstArgs} args - Arguments to find a Preguntas_video_cuestionario
     * @example
     * // Get one Preguntas_video_cuestionario
     * const preguntas_video_cuestionario = await prisma.preguntas_video_cuestionario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends preguntas_video_cuestionarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, preguntas_video_cuestionarioFindFirstArgs<ExtArgs>>
    ): Prisma__preguntas_video_cuestionarioClient<$Result.GetResult<Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Preguntas_video_cuestionario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {preguntas_video_cuestionarioFindFirstOrThrowArgs} args - Arguments to find a Preguntas_video_cuestionario
     * @example
     * // Get one Preguntas_video_cuestionario
     * const preguntas_video_cuestionario = await prisma.preguntas_video_cuestionario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends preguntas_video_cuestionarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, preguntas_video_cuestionarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__preguntas_video_cuestionarioClient<$Result.GetResult<Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Preguntas_video_cuestionarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {preguntas_video_cuestionarioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Preguntas_video_cuestionarios
     * const preguntas_video_cuestionarios = await prisma.preguntas_video_cuestionario.findMany()
     * 
     * // Get first 10 Preguntas_video_cuestionarios
     * const preguntas_video_cuestionarios = await prisma.preguntas_video_cuestionario.findMany({ take: 10 })
     * 
     * // Only select the `id_preguntas_video_cuestionario`
     * const preguntas_video_cuestionarioWithId_preguntas_video_cuestionarioOnly = await prisma.preguntas_video_cuestionario.findMany({ select: { id_preguntas_video_cuestionario: true } })
     * 
    **/
    findMany<T extends preguntas_video_cuestionarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, preguntas_video_cuestionarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Preguntas_video_cuestionario.
     * @param {preguntas_video_cuestionarioCreateArgs} args - Arguments to create a Preguntas_video_cuestionario.
     * @example
     * // Create one Preguntas_video_cuestionario
     * const Preguntas_video_cuestionario = await prisma.preguntas_video_cuestionario.create({
     *   data: {
     *     // ... data to create a Preguntas_video_cuestionario
     *   }
     * })
     * 
    **/
    create<T extends preguntas_video_cuestionarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, preguntas_video_cuestionarioCreateArgs<ExtArgs>>
    ): Prisma__preguntas_video_cuestionarioClient<$Result.GetResult<Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Preguntas_video_cuestionarios.
     *     @param {preguntas_video_cuestionarioCreateManyArgs} args - Arguments to create many Preguntas_video_cuestionarios.
     *     @example
     *     // Create many Preguntas_video_cuestionarios
     *     const preguntas_video_cuestionario = await prisma.preguntas_video_cuestionario.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends preguntas_video_cuestionarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, preguntas_video_cuestionarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Preguntas_video_cuestionario.
     * @param {preguntas_video_cuestionarioDeleteArgs} args - Arguments to delete one Preguntas_video_cuestionario.
     * @example
     * // Delete one Preguntas_video_cuestionario
     * const Preguntas_video_cuestionario = await prisma.preguntas_video_cuestionario.delete({
     *   where: {
     *     // ... filter to delete one Preguntas_video_cuestionario
     *   }
     * })
     * 
    **/
    delete<T extends preguntas_video_cuestionarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, preguntas_video_cuestionarioDeleteArgs<ExtArgs>>
    ): Prisma__preguntas_video_cuestionarioClient<$Result.GetResult<Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Preguntas_video_cuestionario.
     * @param {preguntas_video_cuestionarioUpdateArgs} args - Arguments to update one Preguntas_video_cuestionario.
     * @example
     * // Update one Preguntas_video_cuestionario
     * const preguntas_video_cuestionario = await prisma.preguntas_video_cuestionario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends preguntas_video_cuestionarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, preguntas_video_cuestionarioUpdateArgs<ExtArgs>>
    ): Prisma__preguntas_video_cuestionarioClient<$Result.GetResult<Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Preguntas_video_cuestionarios.
     * @param {preguntas_video_cuestionarioDeleteManyArgs} args - Arguments to filter Preguntas_video_cuestionarios to delete.
     * @example
     * // Delete a few Preguntas_video_cuestionarios
     * const { count } = await prisma.preguntas_video_cuestionario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends preguntas_video_cuestionarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, preguntas_video_cuestionarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Preguntas_video_cuestionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {preguntas_video_cuestionarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Preguntas_video_cuestionarios
     * const preguntas_video_cuestionario = await prisma.preguntas_video_cuestionario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends preguntas_video_cuestionarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, preguntas_video_cuestionarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Preguntas_video_cuestionario.
     * @param {preguntas_video_cuestionarioUpsertArgs} args - Arguments to update or create a Preguntas_video_cuestionario.
     * @example
     * // Update or create a Preguntas_video_cuestionario
     * const preguntas_video_cuestionario = await prisma.preguntas_video_cuestionario.upsert({
     *   create: {
     *     // ... data to create a Preguntas_video_cuestionario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Preguntas_video_cuestionario we want to update
     *   }
     * })
    **/
    upsert<T extends preguntas_video_cuestionarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, preguntas_video_cuestionarioUpsertArgs<ExtArgs>>
    ): Prisma__preguntas_video_cuestionarioClient<$Result.GetResult<Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Preguntas_video_cuestionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {preguntas_video_cuestionarioCountArgs} args - Arguments to filter Preguntas_video_cuestionarios to count.
     * @example
     * // Count the number of Preguntas_video_cuestionarios
     * const count = await prisma.preguntas_video_cuestionario.count({
     *   where: {
     *     // ... the filter for the Preguntas_video_cuestionarios we want to count
     *   }
     * })
    **/
    count<T extends preguntas_video_cuestionarioCountArgs>(
      args?: Subset<T, preguntas_video_cuestionarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Preguntas_video_cuestionarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Preguntas_video_cuestionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Preguntas_video_cuestionarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Preguntas_video_cuestionarioAggregateArgs>(args: Subset<T, Preguntas_video_cuestionarioAggregateArgs>): Prisma.PrismaPromise<GetPreguntas_video_cuestionarioAggregateType<T>>

    /**
     * Group by Preguntas_video_cuestionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {preguntas_video_cuestionarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends preguntas_video_cuestionarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: preguntas_video_cuestionarioGroupByArgs['orderBy'] }
        : { orderBy?: preguntas_video_cuestionarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, preguntas_video_cuestionarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPreguntas_video_cuestionarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the preguntas_video_cuestionario model
   */
  readonly fields: preguntas_video_cuestionarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for preguntas_video_cuestionario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__preguntas_video_cuestionarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    parte_video_cuestionario<T extends parte_video_cuestionarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, parte_video_cuestionarioDefaultArgs<ExtArgs>>): Prisma__parte_video_cuestionarioClient<$Result.GetResult<Prisma.$parte_video_cuestionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    respuestas_video_cuestionario<T extends preguntas_video_cuestionario$respuestas_video_cuestionarioArgs<ExtArgs> = {}>(args?: Subset<T, preguntas_video_cuestionario$respuestas_video_cuestionarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$respuestas_video_cuestionarioPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the preguntas_video_cuestionario model
   */ 
  interface preguntas_video_cuestionarioFieldRefs {
    readonly id_preguntas_video_cuestionario: FieldRef<"preguntas_video_cuestionario", 'Int'>
    readonly id_parte_video_cuestionario: FieldRef<"preguntas_video_cuestionario", 'Int'>
    readonly pregunta: FieldRef<"preguntas_video_cuestionario", 'String'>
  }
    

  // Custom InputTypes

  /**
   * preguntas_video_cuestionario findUnique
   */
  export type preguntas_video_cuestionarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the preguntas_video_cuestionario
     */
    select?: preguntas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: preguntas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which preguntas_video_cuestionario to fetch.
     */
    where: preguntas_video_cuestionarioWhereUniqueInput
  }


  /**
   * preguntas_video_cuestionario findUniqueOrThrow
   */
  export type preguntas_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the preguntas_video_cuestionario
     */
    select?: preguntas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: preguntas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which preguntas_video_cuestionario to fetch.
     */
    where: preguntas_video_cuestionarioWhereUniqueInput
  }


  /**
   * preguntas_video_cuestionario findFirst
   */
  export type preguntas_video_cuestionarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the preguntas_video_cuestionario
     */
    select?: preguntas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: preguntas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which preguntas_video_cuestionario to fetch.
     */
    where?: preguntas_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of preguntas_video_cuestionarios to fetch.
     */
    orderBy?: preguntas_video_cuestionarioOrderByWithRelationInput | preguntas_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for preguntas_video_cuestionarios.
     */
    cursor?: preguntas_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` preguntas_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` preguntas_video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of preguntas_video_cuestionarios.
     */
    distinct?: Preguntas_video_cuestionarioScalarFieldEnum | Preguntas_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * preguntas_video_cuestionario findFirstOrThrow
   */
  export type preguntas_video_cuestionarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the preguntas_video_cuestionario
     */
    select?: preguntas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: preguntas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which preguntas_video_cuestionario to fetch.
     */
    where?: preguntas_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of preguntas_video_cuestionarios to fetch.
     */
    orderBy?: preguntas_video_cuestionarioOrderByWithRelationInput | preguntas_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for preguntas_video_cuestionarios.
     */
    cursor?: preguntas_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` preguntas_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` preguntas_video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of preguntas_video_cuestionarios.
     */
    distinct?: Preguntas_video_cuestionarioScalarFieldEnum | Preguntas_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * preguntas_video_cuestionario findMany
   */
  export type preguntas_video_cuestionarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the preguntas_video_cuestionario
     */
    select?: preguntas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: preguntas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which preguntas_video_cuestionarios to fetch.
     */
    where?: preguntas_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of preguntas_video_cuestionarios to fetch.
     */
    orderBy?: preguntas_video_cuestionarioOrderByWithRelationInput | preguntas_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing preguntas_video_cuestionarios.
     */
    cursor?: preguntas_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` preguntas_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` preguntas_video_cuestionarios.
     */
    skip?: number
    distinct?: Preguntas_video_cuestionarioScalarFieldEnum | Preguntas_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * preguntas_video_cuestionario create
   */
  export type preguntas_video_cuestionarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the preguntas_video_cuestionario
     */
    select?: preguntas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: preguntas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * The data needed to create a preguntas_video_cuestionario.
     */
    data: XOR<preguntas_video_cuestionarioCreateInput, preguntas_video_cuestionarioUncheckedCreateInput>
  }


  /**
   * preguntas_video_cuestionario createMany
   */
  export type preguntas_video_cuestionarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many preguntas_video_cuestionarios.
     */
    data: preguntas_video_cuestionarioCreateManyInput | preguntas_video_cuestionarioCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * preguntas_video_cuestionario update
   */
  export type preguntas_video_cuestionarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the preguntas_video_cuestionario
     */
    select?: preguntas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: preguntas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * The data needed to update a preguntas_video_cuestionario.
     */
    data: XOR<preguntas_video_cuestionarioUpdateInput, preguntas_video_cuestionarioUncheckedUpdateInput>
    /**
     * Choose, which preguntas_video_cuestionario to update.
     */
    where: preguntas_video_cuestionarioWhereUniqueInput
  }


  /**
   * preguntas_video_cuestionario updateMany
   */
  export type preguntas_video_cuestionarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update preguntas_video_cuestionarios.
     */
    data: XOR<preguntas_video_cuestionarioUpdateManyMutationInput, preguntas_video_cuestionarioUncheckedUpdateManyInput>
    /**
     * Filter which preguntas_video_cuestionarios to update
     */
    where?: preguntas_video_cuestionarioWhereInput
  }


  /**
   * preguntas_video_cuestionario upsert
   */
  export type preguntas_video_cuestionarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the preguntas_video_cuestionario
     */
    select?: preguntas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: preguntas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * The filter to search for the preguntas_video_cuestionario to update in case it exists.
     */
    where: preguntas_video_cuestionarioWhereUniqueInput
    /**
     * In case the preguntas_video_cuestionario found by the `where` argument doesn't exist, create a new preguntas_video_cuestionario with this data.
     */
    create: XOR<preguntas_video_cuestionarioCreateInput, preguntas_video_cuestionarioUncheckedCreateInput>
    /**
     * In case the preguntas_video_cuestionario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<preguntas_video_cuestionarioUpdateInput, preguntas_video_cuestionarioUncheckedUpdateInput>
  }


  /**
   * preguntas_video_cuestionario delete
   */
  export type preguntas_video_cuestionarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the preguntas_video_cuestionario
     */
    select?: preguntas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: preguntas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter which preguntas_video_cuestionario to delete.
     */
    where: preguntas_video_cuestionarioWhereUniqueInput
  }


  /**
   * preguntas_video_cuestionario deleteMany
   */
  export type preguntas_video_cuestionarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which preguntas_video_cuestionarios to delete
     */
    where?: preguntas_video_cuestionarioWhereInput
  }


  /**
   * preguntas_video_cuestionario.respuestas_video_cuestionario
   */
  export type preguntas_video_cuestionario$respuestas_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the respuestas_video_cuestionario
     */
    select?: respuestas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: respuestas_video_cuestionarioInclude<ExtArgs> | null
    where?: respuestas_video_cuestionarioWhereInput
    orderBy?: respuestas_video_cuestionarioOrderByWithRelationInput | respuestas_video_cuestionarioOrderByWithRelationInput[]
    cursor?: respuestas_video_cuestionarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Respuestas_video_cuestionarioScalarFieldEnum | Respuestas_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * preguntas_video_cuestionario without action
   */
  export type preguntas_video_cuestionarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the preguntas_video_cuestionario
     */
    select?: preguntas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: preguntas_video_cuestionarioInclude<ExtArgs> | null
  }



  /**
   * Model respuestas_video_cuestionario
   */

  export type AggregateRespuestas_video_cuestionario = {
    _count: Respuestas_video_cuestionarioCountAggregateOutputType | null
    _avg: Respuestas_video_cuestionarioAvgAggregateOutputType | null
    _sum: Respuestas_video_cuestionarioSumAggregateOutputType | null
    _min: Respuestas_video_cuestionarioMinAggregateOutputType | null
    _max: Respuestas_video_cuestionarioMaxAggregateOutputType | null
  }

  export type Respuestas_video_cuestionarioAvgAggregateOutputType = {
    id_respuestas_video_cuestionario: number | null
    id_preguntas_video_cuestionario: number | null
  }

  export type Respuestas_video_cuestionarioSumAggregateOutputType = {
    id_respuestas_video_cuestionario: number | null
    id_preguntas_video_cuestionario: number | null
  }

  export type Respuestas_video_cuestionarioMinAggregateOutputType = {
    id_respuestas_video_cuestionario: number | null
    id_preguntas_video_cuestionario: number | null
    respuesta: string | null
    es_correcta: boolean | null
  }

  export type Respuestas_video_cuestionarioMaxAggregateOutputType = {
    id_respuestas_video_cuestionario: number | null
    id_preguntas_video_cuestionario: number | null
    respuesta: string | null
    es_correcta: boolean | null
  }

  export type Respuestas_video_cuestionarioCountAggregateOutputType = {
    id_respuestas_video_cuestionario: number
    id_preguntas_video_cuestionario: number
    respuesta: number
    es_correcta: number
    _all: number
  }


  export type Respuestas_video_cuestionarioAvgAggregateInputType = {
    id_respuestas_video_cuestionario?: true
    id_preguntas_video_cuestionario?: true
  }

  export type Respuestas_video_cuestionarioSumAggregateInputType = {
    id_respuestas_video_cuestionario?: true
    id_preguntas_video_cuestionario?: true
  }

  export type Respuestas_video_cuestionarioMinAggregateInputType = {
    id_respuestas_video_cuestionario?: true
    id_preguntas_video_cuestionario?: true
    respuesta?: true
    es_correcta?: true
  }

  export type Respuestas_video_cuestionarioMaxAggregateInputType = {
    id_respuestas_video_cuestionario?: true
    id_preguntas_video_cuestionario?: true
    respuesta?: true
    es_correcta?: true
  }

  export type Respuestas_video_cuestionarioCountAggregateInputType = {
    id_respuestas_video_cuestionario?: true
    id_preguntas_video_cuestionario?: true
    respuesta?: true
    es_correcta?: true
    _all?: true
  }

  export type Respuestas_video_cuestionarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which respuestas_video_cuestionario to aggregate.
     */
    where?: respuestas_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of respuestas_video_cuestionarios to fetch.
     */
    orderBy?: respuestas_video_cuestionarioOrderByWithRelationInput | respuestas_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: respuestas_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` respuestas_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` respuestas_video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned respuestas_video_cuestionarios
    **/
    _count?: true | Respuestas_video_cuestionarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Respuestas_video_cuestionarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Respuestas_video_cuestionarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Respuestas_video_cuestionarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Respuestas_video_cuestionarioMaxAggregateInputType
  }

  export type GetRespuestas_video_cuestionarioAggregateType<T extends Respuestas_video_cuestionarioAggregateArgs> = {
        [P in keyof T & keyof AggregateRespuestas_video_cuestionario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRespuestas_video_cuestionario[P]>
      : GetScalarType<T[P], AggregateRespuestas_video_cuestionario[P]>
  }




  export type respuestas_video_cuestionarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: respuestas_video_cuestionarioWhereInput
    orderBy?: respuestas_video_cuestionarioOrderByWithAggregationInput | respuestas_video_cuestionarioOrderByWithAggregationInput[]
    by: Respuestas_video_cuestionarioScalarFieldEnum[] | Respuestas_video_cuestionarioScalarFieldEnum
    having?: respuestas_video_cuestionarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Respuestas_video_cuestionarioCountAggregateInputType | true
    _avg?: Respuestas_video_cuestionarioAvgAggregateInputType
    _sum?: Respuestas_video_cuestionarioSumAggregateInputType
    _min?: Respuestas_video_cuestionarioMinAggregateInputType
    _max?: Respuestas_video_cuestionarioMaxAggregateInputType
  }

  export type Respuestas_video_cuestionarioGroupByOutputType = {
    id_respuestas_video_cuestionario: number
    id_preguntas_video_cuestionario: number
    respuesta: string
    es_correcta: boolean
    _count: Respuestas_video_cuestionarioCountAggregateOutputType | null
    _avg: Respuestas_video_cuestionarioAvgAggregateOutputType | null
    _sum: Respuestas_video_cuestionarioSumAggregateOutputType | null
    _min: Respuestas_video_cuestionarioMinAggregateOutputType | null
    _max: Respuestas_video_cuestionarioMaxAggregateOutputType | null
  }

  type GetRespuestas_video_cuestionarioGroupByPayload<T extends respuestas_video_cuestionarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Respuestas_video_cuestionarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Respuestas_video_cuestionarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Respuestas_video_cuestionarioGroupByOutputType[P]>
            : GetScalarType<T[P], Respuestas_video_cuestionarioGroupByOutputType[P]>
        }
      >
    >


  export type respuestas_video_cuestionarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_respuestas_video_cuestionario?: boolean
    id_preguntas_video_cuestionario?: boolean
    respuesta?: boolean
    es_correcta?: boolean
    preguntas_video_cuestionario?: boolean | preguntas_video_cuestionarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["respuestas_video_cuestionario"]>

  export type respuestas_video_cuestionarioSelectScalar = {
    id_respuestas_video_cuestionario?: boolean
    id_preguntas_video_cuestionario?: boolean
    respuesta?: boolean
    es_correcta?: boolean
  }

  export type respuestas_video_cuestionarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    preguntas_video_cuestionario?: boolean | preguntas_video_cuestionarioDefaultArgs<ExtArgs>
  }


  export type $respuestas_video_cuestionarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "respuestas_video_cuestionario"
    objects: {
      preguntas_video_cuestionario: Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_respuestas_video_cuestionario: number
      id_preguntas_video_cuestionario: number
      respuesta: string
      es_correcta: boolean
    }, ExtArgs["result"]["respuestas_video_cuestionario"]>
    composites: {}
  }


  type respuestas_video_cuestionarioGetPayload<S extends boolean | null | undefined | respuestas_video_cuestionarioDefaultArgs> = $Result.GetResult<Prisma.$respuestas_video_cuestionarioPayload, S>

  type respuestas_video_cuestionarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<respuestas_video_cuestionarioFindManyArgs, 'select' | 'include'> & {
      select?: Respuestas_video_cuestionarioCountAggregateInputType | true
    }

  export interface respuestas_video_cuestionarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['respuestas_video_cuestionario'], meta: { name: 'respuestas_video_cuestionario' } }
    /**
     * Find zero or one Respuestas_video_cuestionario that matches the filter.
     * @param {respuestas_video_cuestionarioFindUniqueArgs} args - Arguments to find a Respuestas_video_cuestionario
     * @example
     * // Get one Respuestas_video_cuestionario
     * const respuestas_video_cuestionario = await prisma.respuestas_video_cuestionario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends respuestas_video_cuestionarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, respuestas_video_cuestionarioFindUniqueArgs<ExtArgs>>
    ): Prisma__respuestas_video_cuestionarioClient<$Result.GetResult<Prisma.$respuestas_video_cuestionarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Respuestas_video_cuestionario that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {respuestas_video_cuestionarioFindUniqueOrThrowArgs} args - Arguments to find a Respuestas_video_cuestionario
     * @example
     * // Get one Respuestas_video_cuestionario
     * const respuestas_video_cuestionario = await prisma.respuestas_video_cuestionario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends respuestas_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, respuestas_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__respuestas_video_cuestionarioClient<$Result.GetResult<Prisma.$respuestas_video_cuestionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Respuestas_video_cuestionario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {respuestas_video_cuestionarioFindFirstArgs} args - Arguments to find a Respuestas_video_cuestionario
     * @example
     * // Get one Respuestas_video_cuestionario
     * const respuestas_video_cuestionario = await prisma.respuestas_video_cuestionario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends respuestas_video_cuestionarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, respuestas_video_cuestionarioFindFirstArgs<ExtArgs>>
    ): Prisma__respuestas_video_cuestionarioClient<$Result.GetResult<Prisma.$respuestas_video_cuestionarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Respuestas_video_cuestionario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {respuestas_video_cuestionarioFindFirstOrThrowArgs} args - Arguments to find a Respuestas_video_cuestionario
     * @example
     * // Get one Respuestas_video_cuestionario
     * const respuestas_video_cuestionario = await prisma.respuestas_video_cuestionario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends respuestas_video_cuestionarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, respuestas_video_cuestionarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__respuestas_video_cuestionarioClient<$Result.GetResult<Prisma.$respuestas_video_cuestionarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Respuestas_video_cuestionarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {respuestas_video_cuestionarioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Respuestas_video_cuestionarios
     * const respuestas_video_cuestionarios = await prisma.respuestas_video_cuestionario.findMany()
     * 
     * // Get first 10 Respuestas_video_cuestionarios
     * const respuestas_video_cuestionarios = await prisma.respuestas_video_cuestionario.findMany({ take: 10 })
     * 
     * // Only select the `id_respuestas_video_cuestionario`
     * const respuestas_video_cuestionarioWithId_respuestas_video_cuestionarioOnly = await prisma.respuestas_video_cuestionario.findMany({ select: { id_respuestas_video_cuestionario: true } })
     * 
    **/
    findMany<T extends respuestas_video_cuestionarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, respuestas_video_cuestionarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$respuestas_video_cuestionarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Respuestas_video_cuestionario.
     * @param {respuestas_video_cuestionarioCreateArgs} args - Arguments to create a Respuestas_video_cuestionario.
     * @example
     * // Create one Respuestas_video_cuestionario
     * const Respuestas_video_cuestionario = await prisma.respuestas_video_cuestionario.create({
     *   data: {
     *     // ... data to create a Respuestas_video_cuestionario
     *   }
     * })
     * 
    **/
    create<T extends respuestas_video_cuestionarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, respuestas_video_cuestionarioCreateArgs<ExtArgs>>
    ): Prisma__respuestas_video_cuestionarioClient<$Result.GetResult<Prisma.$respuestas_video_cuestionarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Respuestas_video_cuestionarios.
     *     @param {respuestas_video_cuestionarioCreateManyArgs} args - Arguments to create many Respuestas_video_cuestionarios.
     *     @example
     *     // Create many Respuestas_video_cuestionarios
     *     const respuestas_video_cuestionario = await prisma.respuestas_video_cuestionario.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends respuestas_video_cuestionarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, respuestas_video_cuestionarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Respuestas_video_cuestionario.
     * @param {respuestas_video_cuestionarioDeleteArgs} args - Arguments to delete one Respuestas_video_cuestionario.
     * @example
     * // Delete one Respuestas_video_cuestionario
     * const Respuestas_video_cuestionario = await prisma.respuestas_video_cuestionario.delete({
     *   where: {
     *     // ... filter to delete one Respuestas_video_cuestionario
     *   }
     * })
     * 
    **/
    delete<T extends respuestas_video_cuestionarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, respuestas_video_cuestionarioDeleteArgs<ExtArgs>>
    ): Prisma__respuestas_video_cuestionarioClient<$Result.GetResult<Prisma.$respuestas_video_cuestionarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Respuestas_video_cuestionario.
     * @param {respuestas_video_cuestionarioUpdateArgs} args - Arguments to update one Respuestas_video_cuestionario.
     * @example
     * // Update one Respuestas_video_cuestionario
     * const respuestas_video_cuestionario = await prisma.respuestas_video_cuestionario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends respuestas_video_cuestionarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, respuestas_video_cuestionarioUpdateArgs<ExtArgs>>
    ): Prisma__respuestas_video_cuestionarioClient<$Result.GetResult<Prisma.$respuestas_video_cuestionarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Respuestas_video_cuestionarios.
     * @param {respuestas_video_cuestionarioDeleteManyArgs} args - Arguments to filter Respuestas_video_cuestionarios to delete.
     * @example
     * // Delete a few Respuestas_video_cuestionarios
     * const { count } = await prisma.respuestas_video_cuestionario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends respuestas_video_cuestionarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, respuestas_video_cuestionarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Respuestas_video_cuestionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {respuestas_video_cuestionarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Respuestas_video_cuestionarios
     * const respuestas_video_cuestionario = await prisma.respuestas_video_cuestionario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends respuestas_video_cuestionarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, respuestas_video_cuestionarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Respuestas_video_cuestionario.
     * @param {respuestas_video_cuestionarioUpsertArgs} args - Arguments to update or create a Respuestas_video_cuestionario.
     * @example
     * // Update or create a Respuestas_video_cuestionario
     * const respuestas_video_cuestionario = await prisma.respuestas_video_cuestionario.upsert({
     *   create: {
     *     // ... data to create a Respuestas_video_cuestionario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Respuestas_video_cuestionario we want to update
     *   }
     * })
    **/
    upsert<T extends respuestas_video_cuestionarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, respuestas_video_cuestionarioUpsertArgs<ExtArgs>>
    ): Prisma__respuestas_video_cuestionarioClient<$Result.GetResult<Prisma.$respuestas_video_cuestionarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Respuestas_video_cuestionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {respuestas_video_cuestionarioCountArgs} args - Arguments to filter Respuestas_video_cuestionarios to count.
     * @example
     * // Count the number of Respuestas_video_cuestionarios
     * const count = await prisma.respuestas_video_cuestionario.count({
     *   where: {
     *     // ... the filter for the Respuestas_video_cuestionarios we want to count
     *   }
     * })
    **/
    count<T extends respuestas_video_cuestionarioCountArgs>(
      args?: Subset<T, respuestas_video_cuestionarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Respuestas_video_cuestionarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Respuestas_video_cuestionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Respuestas_video_cuestionarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Respuestas_video_cuestionarioAggregateArgs>(args: Subset<T, Respuestas_video_cuestionarioAggregateArgs>): Prisma.PrismaPromise<GetRespuestas_video_cuestionarioAggregateType<T>>

    /**
     * Group by Respuestas_video_cuestionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {respuestas_video_cuestionarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends respuestas_video_cuestionarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: respuestas_video_cuestionarioGroupByArgs['orderBy'] }
        : { orderBy?: respuestas_video_cuestionarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, respuestas_video_cuestionarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRespuestas_video_cuestionarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the respuestas_video_cuestionario model
   */
  readonly fields: respuestas_video_cuestionarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for respuestas_video_cuestionario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__respuestas_video_cuestionarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    preguntas_video_cuestionario<T extends preguntas_video_cuestionarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, preguntas_video_cuestionarioDefaultArgs<ExtArgs>>): Prisma__preguntas_video_cuestionarioClient<$Result.GetResult<Prisma.$preguntas_video_cuestionarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the respuestas_video_cuestionario model
   */ 
  interface respuestas_video_cuestionarioFieldRefs {
    readonly id_respuestas_video_cuestionario: FieldRef<"respuestas_video_cuestionario", 'Int'>
    readonly id_preguntas_video_cuestionario: FieldRef<"respuestas_video_cuestionario", 'Int'>
    readonly respuesta: FieldRef<"respuestas_video_cuestionario", 'String'>
    readonly es_correcta: FieldRef<"respuestas_video_cuestionario", 'Boolean'>
  }
    

  // Custom InputTypes

  /**
   * respuestas_video_cuestionario findUnique
   */
  export type respuestas_video_cuestionarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the respuestas_video_cuestionario
     */
    select?: respuestas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: respuestas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which respuestas_video_cuestionario to fetch.
     */
    where: respuestas_video_cuestionarioWhereUniqueInput
  }


  /**
   * respuestas_video_cuestionario findUniqueOrThrow
   */
  export type respuestas_video_cuestionarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the respuestas_video_cuestionario
     */
    select?: respuestas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: respuestas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which respuestas_video_cuestionario to fetch.
     */
    where: respuestas_video_cuestionarioWhereUniqueInput
  }


  /**
   * respuestas_video_cuestionario findFirst
   */
  export type respuestas_video_cuestionarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the respuestas_video_cuestionario
     */
    select?: respuestas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: respuestas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which respuestas_video_cuestionario to fetch.
     */
    where?: respuestas_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of respuestas_video_cuestionarios to fetch.
     */
    orderBy?: respuestas_video_cuestionarioOrderByWithRelationInput | respuestas_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for respuestas_video_cuestionarios.
     */
    cursor?: respuestas_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` respuestas_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` respuestas_video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of respuestas_video_cuestionarios.
     */
    distinct?: Respuestas_video_cuestionarioScalarFieldEnum | Respuestas_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * respuestas_video_cuestionario findFirstOrThrow
   */
  export type respuestas_video_cuestionarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the respuestas_video_cuestionario
     */
    select?: respuestas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: respuestas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which respuestas_video_cuestionario to fetch.
     */
    where?: respuestas_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of respuestas_video_cuestionarios to fetch.
     */
    orderBy?: respuestas_video_cuestionarioOrderByWithRelationInput | respuestas_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for respuestas_video_cuestionarios.
     */
    cursor?: respuestas_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` respuestas_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` respuestas_video_cuestionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of respuestas_video_cuestionarios.
     */
    distinct?: Respuestas_video_cuestionarioScalarFieldEnum | Respuestas_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * respuestas_video_cuestionario findMany
   */
  export type respuestas_video_cuestionarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the respuestas_video_cuestionario
     */
    select?: respuestas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: respuestas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter, which respuestas_video_cuestionarios to fetch.
     */
    where?: respuestas_video_cuestionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of respuestas_video_cuestionarios to fetch.
     */
    orderBy?: respuestas_video_cuestionarioOrderByWithRelationInput | respuestas_video_cuestionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing respuestas_video_cuestionarios.
     */
    cursor?: respuestas_video_cuestionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` respuestas_video_cuestionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` respuestas_video_cuestionarios.
     */
    skip?: number
    distinct?: Respuestas_video_cuestionarioScalarFieldEnum | Respuestas_video_cuestionarioScalarFieldEnum[]
  }


  /**
   * respuestas_video_cuestionario create
   */
  export type respuestas_video_cuestionarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the respuestas_video_cuestionario
     */
    select?: respuestas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: respuestas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * The data needed to create a respuestas_video_cuestionario.
     */
    data: XOR<respuestas_video_cuestionarioCreateInput, respuestas_video_cuestionarioUncheckedCreateInput>
  }


  /**
   * respuestas_video_cuestionario createMany
   */
  export type respuestas_video_cuestionarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many respuestas_video_cuestionarios.
     */
    data: respuestas_video_cuestionarioCreateManyInput | respuestas_video_cuestionarioCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * respuestas_video_cuestionario update
   */
  export type respuestas_video_cuestionarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the respuestas_video_cuestionario
     */
    select?: respuestas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: respuestas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * The data needed to update a respuestas_video_cuestionario.
     */
    data: XOR<respuestas_video_cuestionarioUpdateInput, respuestas_video_cuestionarioUncheckedUpdateInput>
    /**
     * Choose, which respuestas_video_cuestionario to update.
     */
    where: respuestas_video_cuestionarioWhereUniqueInput
  }


  /**
   * respuestas_video_cuestionario updateMany
   */
  export type respuestas_video_cuestionarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update respuestas_video_cuestionarios.
     */
    data: XOR<respuestas_video_cuestionarioUpdateManyMutationInput, respuestas_video_cuestionarioUncheckedUpdateManyInput>
    /**
     * Filter which respuestas_video_cuestionarios to update
     */
    where?: respuestas_video_cuestionarioWhereInput
  }


  /**
   * respuestas_video_cuestionario upsert
   */
  export type respuestas_video_cuestionarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the respuestas_video_cuestionario
     */
    select?: respuestas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: respuestas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * The filter to search for the respuestas_video_cuestionario to update in case it exists.
     */
    where: respuestas_video_cuestionarioWhereUniqueInput
    /**
     * In case the respuestas_video_cuestionario found by the `where` argument doesn't exist, create a new respuestas_video_cuestionario with this data.
     */
    create: XOR<respuestas_video_cuestionarioCreateInput, respuestas_video_cuestionarioUncheckedCreateInput>
    /**
     * In case the respuestas_video_cuestionario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<respuestas_video_cuestionarioUpdateInput, respuestas_video_cuestionarioUncheckedUpdateInput>
  }


  /**
   * respuestas_video_cuestionario delete
   */
  export type respuestas_video_cuestionarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the respuestas_video_cuestionario
     */
    select?: respuestas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: respuestas_video_cuestionarioInclude<ExtArgs> | null
    /**
     * Filter which respuestas_video_cuestionario to delete.
     */
    where: respuestas_video_cuestionarioWhereUniqueInput
  }


  /**
   * respuestas_video_cuestionario deleteMany
   */
  export type respuestas_video_cuestionarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which respuestas_video_cuestionarios to delete
     */
    where?: respuestas_video_cuestionarioWhereInput
  }


  /**
   * respuestas_video_cuestionario without action
   */
  export type respuestas_video_cuestionarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the respuestas_video_cuestionario
     */
    select?: respuestas_video_cuestionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: respuestas_video_cuestionarioInclude<ExtArgs> | null
  }



  /**
   * Model detalles_quiz
   */

  export type AggregateDetalles_quiz = {
    _count: Detalles_quizCountAggregateOutputType | null
    _avg: Detalles_quizAvgAggregateOutputType | null
    _sum: Detalles_quizSumAggregateOutputType | null
    _min: Detalles_quizMinAggregateOutputType | null
    _max: Detalles_quizMaxAggregateOutputType | null
  }

  export type Detalles_quizAvgAggregateOutputType = {
    id_quiz: number | null
    id_palabra: number | null
  }

  export type Detalles_quizSumAggregateOutputType = {
    id_quiz: number | null
    id_palabra: number | null
  }

  export type Detalles_quizMinAggregateOutputType = {
    id_quiz: number | null
    id_palabra: number | null
  }

  export type Detalles_quizMaxAggregateOutputType = {
    id_quiz: number | null
    id_palabra: number | null
  }

  export type Detalles_quizCountAggregateOutputType = {
    id_quiz: number
    id_palabra: number
    _all: number
  }


  export type Detalles_quizAvgAggregateInputType = {
    id_quiz?: true
    id_palabra?: true
  }

  export type Detalles_quizSumAggregateInputType = {
    id_quiz?: true
    id_palabra?: true
  }

  export type Detalles_quizMinAggregateInputType = {
    id_quiz?: true
    id_palabra?: true
  }

  export type Detalles_quizMaxAggregateInputType = {
    id_quiz?: true
    id_palabra?: true
  }

  export type Detalles_quizCountAggregateInputType = {
    id_quiz?: true
    id_palabra?: true
    _all?: true
  }

  export type Detalles_quizAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalles_quiz to aggregate.
     */
    where?: detalles_quizWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalles_quizs to fetch.
     */
    orderBy?: detalles_quizOrderByWithRelationInput | detalles_quizOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: detalles_quizWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalles_quizs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalles_quizs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned detalles_quizs
    **/
    _count?: true | Detalles_quizCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Detalles_quizAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Detalles_quizSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Detalles_quizMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Detalles_quizMaxAggregateInputType
  }

  export type GetDetalles_quizAggregateType<T extends Detalles_quizAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalles_quiz]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalles_quiz[P]>
      : GetScalarType<T[P], AggregateDetalles_quiz[P]>
  }




  export type detalles_quizGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalles_quizWhereInput
    orderBy?: detalles_quizOrderByWithAggregationInput | detalles_quizOrderByWithAggregationInput[]
    by: Detalles_quizScalarFieldEnum[] | Detalles_quizScalarFieldEnum
    having?: detalles_quizScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Detalles_quizCountAggregateInputType | true
    _avg?: Detalles_quizAvgAggregateInputType
    _sum?: Detalles_quizSumAggregateInputType
    _min?: Detalles_quizMinAggregateInputType
    _max?: Detalles_quizMaxAggregateInputType
  }

  export type Detalles_quizGroupByOutputType = {
    id_quiz: number
    id_palabra: number
    _count: Detalles_quizCountAggregateOutputType | null
    _avg: Detalles_quizAvgAggregateOutputType | null
    _sum: Detalles_quizSumAggregateOutputType | null
    _min: Detalles_quizMinAggregateOutputType | null
    _max: Detalles_quizMaxAggregateOutputType | null
  }

  type GetDetalles_quizGroupByPayload<T extends detalles_quizGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Detalles_quizGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Detalles_quizGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Detalles_quizGroupByOutputType[P]>
            : GetScalarType<T[P], Detalles_quizGroupByOutputType[P]>
        }
      >
    >


  export type detalles_quizSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_quiz?: boolean
    id_palabra?: boolean
    quiz?: boolean | quizDefaultArgs<ExtArgs>
    palabra?: boolean | palabraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalles_quiz"]>

  export type detalles_quizSelectScalar = {
    id_quiz?: boolean
    id_palabra?: boolean
  }

  export type detalles_quizInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    quiz?: boolean | quizDefaultArgs<ExtArgs>
    palabra?: boolean | palabraDefaultArgs<ExtArgs>
  }


  export type $detalles_quizPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "detalles_quiz"
    objects: {
      quiz: Prisma.$quizPayload<ExtArgs>
      palabra: Prisma.$palabraPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_quiz: number
      id_palabra: number
    }, ExtArgs["result"]["detalles_quiz"]>
    composites: {}
  }


  type detalles_quizGetPayload<S extends boolean | null | undefined | detalles_quizDefaultArgs> = $Result.GetResult<Prisma.$detalles_quizPayload, S>

  type detalles_quizCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<detalles_quizFindManyArgs, 'select' | 'include'> & {
      select?: Detalles_quizCountAggregateInputType | true
    }

  export interface detalles_quizDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['detalles_quiz'], meta: { name: 'detalles_quiz' } }
    /**
     * Find zero or one Detalles_quiz that matches the filter.
     * @param {detalles_quizFindUniqueArgs} args - Arguments to find a Detalles_quiz
     * @example
     * // Get one Detalles_quiz
     * const detalles_quiz = await prisma.detalles_quiz.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends detalles_quizFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, detalles_quizFindUniqueArgs<ExtArgs>>
    ): Prisma__detalles_quizClient<$Result.GetResult<Prisma.$detalles_quizPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Detalles_quiz that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {detalles_quizFindUniqueOrThrowArgs} args - Arguments to find a Detalles_quiz
     * @example
     * // Get one Detalles_quiz
     * const detalles_quiz = await prisma.detalles_quiz.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends detalles_quizFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, detalles_quizFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__detalles_quizClient<$Result.GetResult<Prisma.$detalles_quizPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Detalles_quiz that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalles_quizFindFirstArgs} args - Arguments to find a Detalles_quiz
     * @example
     * // Get one Detalles_quiz
     * const detalles_quiz = await prisma.detalles_quiz.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends detalles_quizFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, detalles_quizFindFirstArgs<ExtArgs>>
    ): Prisma__detalles_quizClient<$Result.GetResult<Prisma.$detalles_quizPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Detalles_quiz that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalles_quizFindFirstOrThrowArgs} args - Arguments to find a Detalles_quiz
     * @example
     * // Get one Detalles_quiz
     * const detalles_quiz = await prisma.detalles_quiz.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends detalles_quizFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, detalles_quizFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__detalles_quizClient<$Result.GetResult<Prisma.$detalles_quizPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Detalles_quizs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalles_quizFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Detalles_quizs
     * const detalles_quizs = await prisma.detalles_quiz.findMany()
     * 
     * // Get first 10 Detalles_quizs
     * const detalles_quizs = await prisma.detalles_quiz.findMany({ take: 10 })
     * 
     * // Only select the `id_quiz`
     * const detalles_quizWithId_quizOnly = await prisma.detalles_quiz.findMany({ select: { id_quiz: true } })
     * 
    **/
    findMany<T extends detalles_quizFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, detalles_quizFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalles_quizPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Detalles_quiz.
     * @param {detalles_quizCreateArgs} args - Arguments to create a Detalles_quiz.
     * @example
     * // Create one Detalles_quiz
     * const Detalles_quiz = await prisma.detalles_quiz.create({
     *   data: {
     *     // ... data to create a Detalles_quiz
     *   }
     * })
     * 
    **/
    create<T extends detalles_quizCreateArgs<ExtArgs>>(
      args: SelectSubset<T, detalles_quizCreateArgs<ExtArgs>>
    ): Prisma__detalles_quizClient<$Result.GetResult<Prisma.$detalles_quizPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Detalles_quizs.
     *     @param {detalles_quizCreateManyArgs} args - Arguments to create many Detalles_quizs.
     *     @example
     *     // Create many Detalles_quizs
     *     const detalles_quiz = await prisma.detalles_quiz.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends detalles_quizCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, detalles_quizCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Detalles_quiz.
     * @param {detalles_quizDeleteArgs} args - Arguments to delete one Detalles_quiz.
     * @example
     * // Delete one Detalles_quiz
     * const Detalles_quiz = await prisma.detalles_quiz.delete({
     *   where: {
     *     // ... filter to delete one Detalles_quiz
     *   }
     * })
     * 
    **/
    delete<T extends detalles_quizDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, detalles_quizDeleteArgs<ExtArgs>>
    ): Prisma__detalles_quizClient<$Result.GetResult<Prisma.$detalles_quizPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Detalles_quiz.
     * @param {detalles_quizUpdateArgs} args - Arguments to update one Detalles_quiz.
     * @example
     * // Update one Detalles_quiz
     * const detalles_quiz = await prisma.detalles_quiz.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends detalles_quizUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, detalles_quizUpdateArgs<ExtArgs>>
    ): Prisma__detalles_quizClient<$Result.GetResult<Prisma.$detalles_quizPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Detalles_quizs.
     * @param {detalles_quizDeleteManyArgs} args - Arguments to filter Detalles_quizs to delete.
     * @example
     * // Delete a few Detalles_quizs
     * const { count } = await prisma.detalles_quiz.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends detalles_quizDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, detalles_quizDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalles_quizs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalles_quizUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Detalles_quizs
     * const detalles_quiz = await prisma.detalles_quiz.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends detalles_quizUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, detalles_quizUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Detalles_quiz.
     * @param {detalles_quizUpsertArgs} args - Arguments to update or create a Detalles_quiz.
     * @example
     * // Update or create a Detalles_quiz
     * const detalles_quiz = await prisma.detalles_quiz.upsert({
     *   create: {
     *     // ... data to create a Detalles_quiz
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Detalles_quiz we want to update
     *   }
     * })
    **/
    upsert<T extends detalles_quizUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, detalles_quizUpsertArgs<ExtArgs>>
    ): Prisma__detalles_quizClient<$Result.GetResult<Prisma.$detalles_quizPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Detalles_quizs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalles_quizCountArgs} args - Arguments to filter Detalles_quizs to count.
     * @example
     * // Count the number of Detalles_quizs
     * const count = await prisma.detalles_quiz.count({
     *   where: {
     *     // ... the filter for the Detalles_quizs we want to count
     *   }
     * })
    **/
    count<T extends detalles_quizCountArgs>(
      args?: Subset<T, detalles_quizCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Detalles_quizCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Detalles_quiz.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Detalles_quizAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Detalles_quizAggregateArgs>(args: Subset<T, Detalles_quizAggregateArgs>): Prisma.PrismaPromise<GetDetalles_quizAggregateType<T>>

    /**
     * Group by Detalles_quiz.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalles_quizGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends detalles_quizGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: detalles_quizGroupByArgs['orderBy'] }
        : { orderBy?: detalles_quizGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, detalles_quizGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalles_quizGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the detalles_quiz model
   */
  readonly fields: detalles_quizFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for detalles_quiz.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__detalles_quizClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    quiz<T extends quizDefaultArgs<ExtArgs> = {}>(args?: Subset<T, quizDefaultArgs<ExtArgs>>): Prisma__quizClient<$Result.GetResult<Prisma.$quizPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    palabra<T extends palabraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, palabraDefaultArgs<ExtArgs>>): Prisma__palabraClient<$Result.GetResult<Prisma.$palabraPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the detalles_quiz model
   */ 
  interface detalles_quizFieldRefs {
    readonly id_quiz: FieldRef<"detalles_quiz", 'Int'>
    readonly id_palabra: FieldRef<"detalles_quiz", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * detalles_quiz findUnique
   */
  export type detalles_quizFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalles_quiz
     */
    select?: detalles_quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalles_quizInclude<ExtArgs> | null
    /**
     * Filter, which detalles_quiz to fetch.
     */
    where: detalles_quizWhereUniqueInput
  }


  /**
   * detalles_quiz findUniqueOrThrow
   */
  export type detalles_quizFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalles_quiz
     */
    select?: detalles_quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalles_quizInclude<ExtArgs> | null
    /**
     * Filter, which detalles_quiz to fetch.
     */
    where: detalles_quizWhereUniqueInput
  }


  /**
   * detalles_quiz findFirst
   */
  export type detalles_quizFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalles_quiz
     */
    select?: detalles_quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalles_quizInclude<ExtArgs> | null
    /**
     * Filter, which detalles_quiz to fetch.
     */
    where?: detalles_quizWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalles_quizs to fetch.
     */
    orderBy?: detalles_quizOrderByWithRelationInput | detalles_quizOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalles_quizs.
     */
    cursor?: detalles_quizWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalles_quizs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalles_quizs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalles_quizs.
     */
    distinct?: Detalles_quizScalarFieldEnum | Detalles_quizScalarFieldEnum[]
  }


  /**
   * detalles_quiz findFirstOrThrow
   */
  export type detalles_quizFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalles_quiz
     */
    select?: detalles_quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalles_quizInclude<ExtArgs> | null
    /**
     * Filter, which detalles_quiz to fetch.
     */
    where?: detalles_quizWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalles_quizs to fetch.
     */
    orderBy?: detalles_quizOrderByWithRelationInput | detalles_quizOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalles_quizs.
     */
    cursor?: detalles_quizWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalles_quizs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalles_quizs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalles_quizs.
     */
    distinct?: Detalles_quizScalarFieldEnum | Detalles_quizScalarFieldEnum[]
  }


  /**
   * detalles_quiz findMany
   */
  export type detalles_quizFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalles_quiz
     */
    select?: detalles_quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalles_quizInclude<ExtArgs> | null
    /**
     * Filter, which detalles_quizs to fetch.
     */
    where?: detalles_quizWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalles_quizs to fetch.
     */
    orderBy?: detalles_quizOrderByWithRelationInput | detalles_quizOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing detalles_quizs.
     */
    cursor?: detalles_quizWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalles_quizs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalles_quizs.
     */
    skip?: number
    distinct?: Detalles_quizScalarFieldEnum | Detalles_quizScalarFieldEnum[]
  }


  /**
   * detalles_quiz create
   */
  export type detalles_quizCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalles_quiz
     */
    select?: detalles_quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalles_quizInclude<ExtArgs> | null
    /**
     * The data needed to create a detalles_quiz.
     */
    data: XOR<detalles_quizCreateInput, detalles_quizUncheckedCreateInput>
  }


  /**
   * detalles_quiz createMany
   */
  export type detalles_quizCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many detalles_quizs.
     */
    data: detalles_quizCreateManyInput | detalles_quizCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * detalles_quiz update
   */
  export type detalles_quizUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalles_quiz
     */
    select?: detalles_quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalles_quizInclude<ExtArgs> | null
    /**
     * The data needed to update a detalles_quiz.
     */
    data: XOR<detalles_quizUpdateInput, detalles_quizUncheckedUpdateInput>
    /**
     * Choose, which detalles_quiz to update.
     */
    where: detalles_quizWhereUniqueInput
  }


  /**
   * detalles_quiz updateMany
   */
  export type detalles_quizUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update detalles_quizs.
     */
    data: XOR<detalles_quizUpdateManyMutationInput, detalles_quizUncheckedUpdateManyInput>
    /**
     * Filter which detalles_quizs to update
     */
    where?: detalles_quizWhereInput
  }


  /**
   * detalles_quiz upsert
   */
  export type detalles_quizUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalles_quiz
     */
    select?: detalles_quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalles_quizInclude<ExtArgs> | null
    /**
     * The filter to search for the detalles_quiz to update in case it exists.
     */
    where: detalles_quizWhereUniqueInput
    /**
     * In case the detalles_quiz found by the `where` argument doesn't exist, create a new detalles_quiz with this data.
     */
    create: XOR<detalles_quizCreateInput, detalles_quizUncheckedCreateInput>
    /**
     * In case the detalles_quiz was found with the provided `where` argument, update it with this data.
     */
    update: XOR<detalles_quizUpdateInput, detalles_quizUncheckedUpdateInput>
  }


  /**
   * detalles_quiz delete
   */
  export type detalles_quizDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalles_quiz
     */
    select?: detalles_quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalles_quizInclude<ExtArgs> | null
    /**
     * Filter which detalles_quiz to delete.
     */
    where: detalles_quizWhereUniqueInput
  }


  /**
   * detalles_quiz deleteMany
   */
  export type detalles_quizDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalles_quizs to delete
     */
    where?: detalles_quizWhereInput
  }


  /**
   * detalles_quiz without action
   */
  export type detalles_quizDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalles_quiz
     */
    select?: detalles_quizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalles_quizInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const MiembroScalarFieldEnum: {
    id_miembro: 'id_miembro',
    usuario: 'usuario',
    contrasegna: 'contrasegna',
    es_administrador: 'es_administrador'
  };

  export type MiembroScalarFieldEnum = (typeof MiembroScalarFieldEnum)[keyof typeof MiembroScalarFieldEnum]


  export const IslaScalarFieldEnum: {
    id_isla: 'id_isla',
    nombre: 'nombre',
    modelo_general: 'modelo_general',
    modelo_especifico: 'modelo_especifico'
  };

  export type IslaScalarFieldEnum = (typeof IslaScalarFieldEnum)[keyof typeof IslaScalarFieldEnum]


  export const Video_cuestionarioScalarFieldEnum: {
    id_video_cuestionario: 'id_video_cuestionario',
    nombre: 'nombre',
    id_isla: 'id_isla'
  };

  export type Video_cuestionarioScalarFieldEnum = (typeof Video_cuestionarioScalarFieldEnum)[keyof typeof Video_cuestionarioScalarFieldEnum]


  export const QuizScalarFieldEnum: {
    id_quiz: 'id_quiz',
    id_isla: 'id_isla',
    nombre: 'nombre'
  };

  export type QuizScalarFieldEnum = (typeof QuizScalarFieldEnum)[keyof typeof QuizScalarFieldEnum]


  export const Modelo_comlScalarFieldEnum: {
    id_modelo_coml: 'id_modelo_coml',
    id_isla: 'id_isla'
  };

  export type Modelo_comlScalarFieldEnum = (typeof Modelo_comlScalarFieldEnum)[keyof typeof Modelo_comlScalarFieldEnum]


  export const Treasure_huntScalarFieldEnum: {
    id_treasure_hunt: 'id_treasure_hunt',
    id_isla: 'id_isla',
    id_modelo_coml: 'id_modelo_coml'
  };

  export type Treasure_huntScalarFieldEnum = (typeof Treasure_huntScalarFieldEnum)[keyof typeof Treasure_huntScalarFieldEnum]


  export const NivelScalarFieldEnum: {
    id_nivel: 'id_nivel',
    id_isla: 'id_isla',
    id_video_cuestionario: 'id_video_cuestionario',
    id_quiz: 'id_quiz',
    id_treasure_hunt: 'id_treasure_hunt'
  };

  export type NivelScalarFieldEnum = (typeof NivelScalarFieldEnum)[keyof typeof NivelScalarFieldEnum]


  export const PalabraScalarFieldEnum: {
    id_palabra: 'id_palabra',
    id_isla: 'id_isla',
    palabra: 'palabra',
    id_video_segna: 'id_video_segna',
    url_icono: 'url_icono'
  };

  export type PalabraScalarFieldEnum = (typeof PalabraScalarFieldEnum)[keyof typeof PalabraScalarFieldEnum]


  export const Parte_video_cuestionarioScalarFieldEnum: {
    id_parte_video_cuestionario: 'id_parte_video_cuestionario',
    id_video_cuestionario: 'id_video_cuestionario',
    url_video: 'url_video',
    indice: 'indice',
    nombre: 'nombre'
  };

  export type Parte_video_cuestionarioScalarFieldEnum = (typeof Parte_video_cuestionarioScalarFieldEnum)[keyof typeof Parte_video_cuestionarioScalarFieldEnum]


  export const Palabras_video_cuestionarioScalarFieldEnum: {
    id_video_cuestionario: 'id_video_cuestionario',
    id_palabra: 'id_palabra'
  };

  export type Palabras_video_cuestionarioScalarFieldEnum = (typeof Palabras_video_cuestionarioScalarFieldEnum)[keyof typeof Palabras_video_cuestionarioScalarFieldEnum]


  export const Preguntas_video_cuestionarioScalarFieldEnum: {
    id_preguntas_video_cuestionario: 'id_preguntas_video_cuestionario',
    id_parte_video_cuestionario: 'id_parte_video_cuestionario',
    pregunta: 'pregunta'
  };

  export type Preguntas_video_cuestionarioScalarFieldEnum = (typeof Preguntas_video_cuestionarioScalarFieldEnum)[keyof typeof Preguntas_video_cuestionarioScalarFieldEnum]


  export const Respuestas_video_cuestionarioScalarFieldEnum: {
    id_respuestas_video_cuestionario: 'id_respuestas_video_cuestionario',
    id_preguntas_video_cuestionario: 'id_preguntas_video_cuestionario',
    respuesta: 'respuesta',
    es_correcta: 'es_correcta'
  };

  export type Respuestas_video_cuestionarioScalarFieldEnum = (typeof Respuestas_video_cuestionarioScalarFieldEnum)[keyof typeof Respuestas_video_cuestionarioScalarFieldEnum]


  export const Detalles_quizScalarFieldEnum: {
    id_quiz: 'id_quiz',
    id_palabra: 'id_palabra'
  };

  export type Detalles_quizScalarFieldEnum = (typeof Detalles_quizScalarFieldEnum)[keyof typeof Detalles_quizScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Bytes'
   */
  export type BytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes'>
    


  /**
   * Reference to a field of type 'Bytes[]'
   */
  export type ListBytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type miembroWhereInput = {
    AND?: miembroWhereInput | miembroWhereInput[]
    OR?: miembroWhereInput[]
    NOT?: miembroWhereInput | miembroWhereInput[]
    id_miembro?: IntFilter<"miembro"> | number
    usuario?: StringFilter<"miembro"> | string
    contrasegna?: StringFilter<"miembro"> | string
    es_administrador?: BoolFilter<"miembro"> | boolean
  }

  export type miembroOrderByWithRelationInput = {
    id_miembro?: SortOrder
    usuario?: SortOrder
    contrasegna?: SortOrder
    es_administrador?: SortOrder
  }

  export type miembroWhereUniqueInput = Prisma.AtLeast<{
    id_miembro?: number
    AND?: miembroWhereInput | miembroWhereInput[]
    OR?: miembroWhereInput[]
    NOT?: miembroWhereInput | miembroWhereInput[]
    usuario?: StringFilter<"miembro"> | string
    contrasegna?: StringFilter<"miembro"> | string
    es_administrador?: BoolFilter<"miembro"> | boolean
  }, "id_miembro">

  export type miembroOrderByWithAggregationInput = {
    id_miembro?: SortOrder
    usuario?: SortOrder
    contrasegna?: SortOrder
    es_administrador?: SortOrder
    _count?: miembroCountOrderByAggregateInput
    _avg?: miembroAvgOrderByAggregateInput
    _max?: miembroMaxOrderByAggregateInput
    _min?: miembroMinOrderByAggregateInput
    _sum?: miembroSumOrderByAggregateInput
  }

  export type miembroScalarWhereWithAggregatesInput = {
    AND?: miembroScalarWhereWithAggregatesInput | miembroScalarWhereWithAggregatesInput[]
    OR?: miembroScalarWhereWithAggregatesInput[]
    NOT?: miembroScalarWhereWithAggregatesInput | miembroScalarWhereWithAggregatesInput[]
    id_miembro?: IntWithAggregatesFilter<"miembro"> | number
    usuario?: StringWithAggregatesFilter<"miembro"> | string
    contrasegna?: StringWithAggregatesFilter<"miembro"> | string
    es_administrador?: BoolWithAggregatesFilter<"miembro"> | boolean
  }

  export type islaWhereInput = {
    AND?: islaWhereInput | islaWhereInput[]
    OR?: islaWhereInput[]
    NOT?: islaWhereInput | islaWhereInput[]
    id_isla?: IntFilter<"isla"> | number
    nombre?: StringFilter<"isla"> | string
    modelo_general?: BytesNullableFilter<"isla"> | Buffer | null
    modelo_especifico?: BytesNullableFilter<"isla"> | Buffer | null
    video_cuestionario?: Video_cuestionarioListRelationFilter
    quiz?: QuizListRelationFilter
    modelo_coml?: Modelo_comlListRelationFilter
    treasure_hunt?: Treasure_huntListRelationFilter
    nivel?: NivelListRelationFilter
    palabra?: PalabraListRelationFilter
  }

  export type islaOrderByWithRelationInput = {
    id_isla?: SortOrder
    nombre?: SortOrder
    modelo_general?: SortOrderInput | SortOrder
    modelo_especifico?: SortOrderInput | SortOrder
    video_cuestionario?: video_cuestionarioOrderByRelationAggregateInput
    quiz?: quizOrderByRelationAggregateInput
    modelo_coml?: modelo_comlOrderByRelationAggregateInput
    treasure_hunt?: treasure_huntOrderByRelationAggregateInput
    nivel?: nivelOrderByRelationAggregateInput
    palabra?: palabraOrderByRelationAggregateInput
  }

  export type islaWhereUniqueInput = Prisma.AtLeast<{
    id_isla?: number
    AND?: islaWhereInput | islaWhereInput[]
    OR?: islaWhereInput[]
    NOT?: islaWhereInput | islaWhereInput[]
    nombre?: StringFilter<"isla"> | string
    modelo_general?: BytesNullableFilter<"isla"> | Buffer | null
    modelo_especifico?: BytesNullableFilter<"isla"> | Buffer | null
    video_cuestionario?: Video_cuestionarioListRelationFilter
    quiz?: QuizListRelationFilter
    modelo_coml?: Modelo_comlListRelationFilter
    treasure_hunt?: Treasure_huntListRelationFilter
    nivel?: NivelListRelationFilter
    palabra?: PalabraListRelationFilter
  }, "id_isla">

  export type islaOrderByWithAggregationInput = {
    id_isla?: SortOrder
    nombre?: SortOrder
    modelo_general?: SortOrderInput | SortOrder
    modelo_especifico?: SortOrderInput | SortOrder
    _count?: islaCountOrderByAggregateInput
    _avg?: islaAvgOrderByAggregateInput
    _max?: islaMaxOrderByAggregateInput
    _min?: islaMinOrderByAggregateInput
    _sum?: islaSumOrderByAggregateInput
  }

  export type islaScalarWhereWithAggregatesInput = {
    AND?: islaScalarWhereWithAggregatesInput | islaScalarWhereWithAggregatesInput[]
    OR?: islaScalarWhereWithAggregatesInput[]
    NOT?: islaScalarWhereWithAggregatesInput | islaScalarWhereWithAggregatesInput[]
    id_isla?: IntWithAggregatesFilter<"isla"> | number
    nombre?: StringWithAggregatesFilter<"isla"> | string
    modelo_general?: BytesNullableWithAggregatesFilter<"isla"> | Buffer | null
    modelo_especifico?: BytesNullableWithAggregatesFilter<"isla"> | Buffer | null
  }

  export type video_cuestionarioWhereInput = {
    AND?: video_cuestionarioWhereInput | video_cuestionarioWhereInput[]
    OR?: video_cuestionarioWhereInput[]
    NOT?: video_cuestionarioWhereInput | video_cuestionarioWhereInput[]
    id_video_cuestionario?: IntFilter<"video_cuestionario"> | number
    nombre?: StringFilter<"video_cuestionario"> | string
    id_isla?: IntFilter<"video_cuestionario"> | number
    isla?: XOR<IslaRelationFilter, islaWhereInput>
    nivel?: NivelListRelationFilter
    parte_video_cuestionario?: Parte_video_cuestionarioListRelationFilter
    palabras_video_cuestionario?: Palabras_video_cuestionarioListRelationFilter
  }

  export type video_cuestionarioOrderByWithRelationInput = {
    id_video_cuestionario?: SortOrder
    nombre?: SortOrder
    id_isla?: SortOrder
    isla?: islaOrderByWithRelationInput
    nivel?: nivelOrderByRelationAggregateInput
    parte_video_cuestionario?: parte_video_cuestionarioOrderByRelationAggregateInput
    palabras_video_cuestionario?: palabras_video_cuestionarioOrderByRelationAggregateInput
  }

  export type video_cuestionarioWhereUniqueInput = Prisma.AtLeast<{
    id_video_cuestionario?: number
    AND?: video_cuestionarioWhereInput | video_cuestionarioWhereInput[]
    OR?: video_cuestionarioWhereInput[]
    NOT?: video_cuestionarioWhereInput | video_cuestionarioWhereInput[]
    nombre?: StringFilter<"video_cuestionario"> | string
    id_isla?: IntFilter<"video_cuestionario"> | number
    isla?: XOR<IslaRelationFilter, islaWhereInput>
    nivel?: NivelListRelationFilter
    parte_video_cuestionario?: Parte_video_cuestionarioListRelationFilter
    palabras_video_cuestionario?: Palabras_video_cuestionarioListRelationFilter
  }, "id_video_cuestionario">

  export type video_cuestionarioOrderByWithAggregationInput = {
    id_video_cuestionario?: SortOrder
    nombre?: SortOrder
    id_isla?: SortOrder
    _count?: video_cuestionarioCountOrderByAggregateInput
    _avg?: video_cuestionarioAvgOrderByAggregateInput
    _max?: video_cuestionarioMaxOrderByAggregateInput
    _min?: video_cuestionarioMinOrderByAggregateInput
    _sum?: video_cuestionarioSumOrderByAggregateInput
  }

  export type video_cuestionarioScalarWhereWithAggregatesInput = {
    AND?: video_cuestionarioScalarWhereWithAggregatesInput | video_cuestionarioScalarWhereWithAggregatesInput[]
    OR?: video_cuestionarioScalarWhereWithAggregatesInput[]
    NOT?: video_cuestionarioScalarWhereWithAggregatesInput | video_cuestionarioScalarWhereWithAggregatesInput[]
    id_video_cuestionario?: IntWithAggregatesFilter<"video_cuestionario"> | number
    nombre?: StringWithAggregatesFilter<"video_cuestionario"> | string
    id_isla?: IntWithAggregatesFilter<"video_cuestionario"> | number
  }

  export type quizWhereInput = {
    AND?: quizWhereInput | quizWhereInput[]
    OR?: quizWhereInput[]
    NOT?: quizWhereInput | quizWhereInput[]
    id_quiz?: IntFilter<"quiz"> | number
    id_isla?: IntFilter<"quiz"> | number
    nombre?: StringFilter<"quiz"> | string
    isla?: XOR<IslaRelationFilter, islaWhereInput>
    nivel?: NivelListRelationFilter
    detalles_quiz?: Detalles_quizListRelationFilter
  }

  export type quizOrderByWithRelationInput = {
    id_quiz?: SortOrder
    id_isla?: SortOrder
    nombre?: SortOrder
    isla?: islaOrderByWithRelationInput
    nivel?: nivelOrderByRelationAggregateInput
    detalles_quiz?: detalles_quizOrderByRelationAggregateInput
  }

  export type quizWhereUniqueInput = Prisma.AtLeast<{
    id_quiz?: number
    AND?: quizWhereInput | quizWhereInput[]
    OR?: quizWhereInput[]
    NOT?: quizWhereInput | quizWhereInput[]
    id_isla?: IntFilter<"quiz"> | number
    nombre?: StringFilter<"quiz"> | string
    isla?: XOR<IslaRelationFilter, islaWhereInput>
    nivel?: NivelListRelationFilter
    detalles_quiz?: Detalles_quizListRelationFilter
  }, "id_quiz">

  export type quizOrderByWithAggregationInput = {
    id_quiz?: SortOrder
    id_isla?: SortOrder
    nombre?: SortOrder
    _count?: quizCountOrderByAggregateInput
    _avg?: quizAvgOrderByAggregateInput
    _max?: quizMaxOrderByAggregateInput
    _min?: quizMinOrderByAggregateInput
    _sum?: quizSumOrderByAggregateInput
  }

  export type quizScalarWhereWithAggregatesInput = {
    AND?: quizScalarWhereWithAggregatesInput | quizScalarWhereWithAggregatesInput[]
    OR?: quizScalarWhereWithAggregatesInput[]
    NOT?: quizScalarWhereWithAggregatesInput | quizScalarWhereWithAggregatesInput[]
    id_quiz?: IntWithAggregatesFilter<"quiz"> | number
    id_isla?: IntWithAggregatesFilter<"quiz"> | number
    nombre?: StringWithAggregatesFilter<"quiz"> | string
  }

  export type modelo_comlWhereInput = {
    AND?: modelo_comlWhereInput | modelo_comlWhereInput[]
    OR?: modelo_comlWhereInput[]
    NOT?: modelo_comlWhereInput | modelo_comlWhereInput[]
    id_modelo_coml?: IntFilter<"modelo_coml"> | number
    id_isla?: IntFilter<"modelo_coml"> | number
    isla?: XOR<IslaRelationFilter, islaWhereInput>
    treasure_hunt?: Treasure_huntListRelationFilter
  }

  export type modelo_comlOrderByWithRelationInput = {
    id_modelo_coml?: SortOrder
    id_isla?: SortOrder
    isla?: islaOrderByWithRelationInput
    treasure_hunt?: treasure_huntOrderByRelationAggregateInput
  }

  export type modelo_comlWhereUniqueInput = Prisma.AtLeast<{
    id_modelo_coml?: number
    AND?: modelo_comlWhereInput | modelo_comlWhereInput[]
    OR?: modelo_comlWhereInput[]
    NOT?: modelo_comlWhereInput | modelo_comlWhereInput[]
    id_isla?: IntFilter<"modelo_coml"> | number
    isla?: XOR<IslaRelationFilter, islaWhereInput>
    treasure_hunt?: Treasure_huntListRelationFilter
  }, "id_modelo_coml">

  export type modelo_comlOrderByWithAggregationInput = {
    id_modelo_coml?: SortOrder
    id_isla?: SortOrder
    _count?: modelo_comlCountOrderByAggregateInput
    _avg?: modelo_comlAvgOrderByAggregateInput
    _max?: modelo_comlMaxOrderByAggregateInput
    _min?: modelo_comlMinOrderByAggregateInput
    _sum?: modelo_comlSumOrderByAggregateInput
  }

  export type modelo_comlScalarWhereWithAggregatesInput = {
    AND?: modelo_comlScalarWhereWithAggregatesInput | modelo_comlScalarWhereWithAggregatesInput[]
    OR?: modelo_comlScalarWhereWithAggregatesInput[]
    NOT?: modelo_comlScalarWhereWithAggregatesInput | modelo_comlScalarWhereWithAggregatesInput[]
    id_modelo_coml?: IntWithAggregatesFilter<"modelo_coml"> | number
    id_isla?: IntWithAggregatesFilter<"modelo_coml"> | number
  }

  export type treasure_huntWhereInput = {
    AND?: treasure_huntWhereInput | treasure_huntWhereInput[]
    OR?: treasure_huntWhereInput[]
    NOT?: treasure_huntWhereInput | treasure_huntWhereInput[]
    id_treasure_hunt?: IntFilter<"treasure_hunt"> | number
    id_isla?: IntFilter<"treasure_hunt"> | number
    id_modelo_coml?: IntFilter<"treasure_hunt"> | number
    isla?: XOR<IslaRelationFilter, islaWhereInput>
    modelo_coml?: XOR<Modelo_comlRelationFilter, modelo_comlWhereInput>
    nivel?: NivelListRelationFilter
  }

  export type treasure_huntOrderByWithRelationInput = {
    id_treasure_hunt?: SortOrder
    id_isla?: SortOrder
    id_modelo_coml?: SortOrder
    isla?: islaOrderByWithRelationInput
    modelo_coml?: modelo_comlOrderByWithRelationInput
    nivel?: nivelOrderByRelationAggregateInput
  }

  export type treasure_huntWhereUniqueInput = Prisma.AtLeast<{
    id_treasure_hunt?: number
    AND?: treasure_huntWhereInput | treasure_huntWhereInput[]
    OR?: treasure_huntWhereInput[]
    NOT?: treasure_huntWhereInput | treasure_huntWhereInput[]
    id_isla?: IntFilter<"treasure_hunt"> | number
    id_modelo_coml?: IntFilter<"treasure_hunt"> | number
    isla?: XOR<IslaRelationFilter, islaWhereInput>
    modelo_coml?: XOR<Modelo_comlRelationFilter, modelo_comlWhereInput>
    nivel?: NivelListRelationFilter
  }, "id_treasure_hunt">

  export type treasure_huntOrderByWithAggregationInput = {
    id_treasure_hunt?: SortOrder
    id_isla?: SortOrder
    id_modelo_coml?: SortOrder
    _count?: treasure_huntCountOrderByAggregateInput
    _avg?: treasure_huntAvgOrderByAggregateInput
    _max?: treasure_huntMaxOrderByAggregateInput
    _min?: treasure_huntMinOrderByAggregateInput
    _sum?: treasure_huntSumOrderByAggregateInput
  }

  export type treasure_huntScalarWhereWithAggregatesInput = {
    AND?: treasure_huntScalarWhereWithAggregatesInput | treasure_huntScalarWhereWithAggregatesInput[]
    OR?: treasure_huntScalarWhereWithAggregatesInput[]
    NOT?: treasure_huntScalarWhereWithAggregatesInput | treasure_huntScalarWhereWithAggregatesInput[]
    id_treasure_hunt?: IntWithAggregatesFilter<"treasure_hunt"> | number
    id_isla?: IntWithAggregatesFilter<"treasure_hunt"> | number
    id_modelo_coml?: IntWithAggregatesFilter<"treasure_hunt"> | number
  }

  export type nivelWhereInput = {
    AND?: nivelWhereInput | nivelWhereInput[]
    OR?: nivelWhereInput[]
    NOT?: nivelWhereInput | nivelWhereInput[]
    id_nivel?: IntFilter<"nivel"> | number
    id_isla?: IntFilter<"nivel"> | number
    id_video_cuestionario?: IntFilter<"nivel"> | number
    id_quiz?: IntFilter<"nivel"> | number
    id_treasure_hunt?: IntFilter<"nivel"> | number
    isla?: XOR<IslaRelationFilter, islaWhereInput>
    video_cuestionario?: XOR<Video_cuestionarioRelationFilter, video_cuestionarioWhereInput>
    quiz?: XOR<QuizRelationFilter, quizWhereInput>
    treasure_hunt?: XOR<Treasure_huntRelationFilter, treasure_huntWhereInput>
  }

  export type nivelOrderByWithRelationInput = {
    id_nivel?: SortOrder
    id_isla?: SortOrder
    id_video_cuestionario?: SortOrder
    id_quiz?: SortOrder
    id_treasure_hunt?: SortOrder
    isla?: islaOrderByWithRelationInput
    video_cuestionario?: video_cuestionarioOrderByWithRelationInput
    quiz?: quizOrderByWithRelationInput
    treasure_hunt?: treasure_huntOrderByWithRelationInput
  }

  export type nivelWhereUniqueInput = Prisma.AtLeast<{
    id_nivel?: number
    AND?: nivelWhereInput | nivelWhereInput[]
    OR?: nivelWhereInput[]
    NOT?: nivelWhereInput | nivelWhereInput[]
    id_isla?: IntFilter<"nivel"> | number
    id_video_cuestionario?: IntFilter<"nivel"> | number
    id_quiz?: IntFilter<"nivel"> | number
    id_treasure_hunt?: IntFilter<"nivel"> | number
    isla?: XOR<IslaRelationFilter, islaWhereInput>
    video_cuestionario?: XOR<Video_cuestionarioRelationFilter, video_cuestionarioWhereInput>
    quiz?: XOR<QuizRelationFilter, quizWhereInput>
    treasure_hunt?: XOR<Treasure_huntRelationFilter, treasure_huntWhereInput>
  }, "id_nivel">

  export type nivelOrderByWithAggregationInput = {
    id_nivel?: SortOrder
    id_isla?: SortOrder
    id_video_cuestionario?: SortOrder
    id_quiz?: SortOrder
    id_treasure_hunt?: SortOrder
    _count?: nivelCountOrderByAggregateInput
    _avg?: nivelAvgOrderByAggregateInput
    _max?: nivelMaxOrderByAggregateInput
    _min?: nivelMinOrderByAggregateInput
    _sum?: nivelSumOrderByAggregateInput
  }

  export type nivelScalarWhereWithAggregatesInput = {
    AND?: nivelScalarWhereWithAggregatesInput | nivelScalarWhereWithAggregatesInput[]
    OR?: nivelScalarWhereWithAggregatesInput[]
    NOT?: nivelScalarWhereWithAggregatesInput | nivelScalarWhereWithAggregatesInput[]
    id_nivel?: IntWithAggregatesFilter<"nivel"> | number
    id_isla?: IntWithAggregatesFilter<"nivel"> | number
    id_video_cuestionario?: IntWithAggregatesFilter<"nivel"> | number
    id_quiz?: IntWithAggregatesFilter<"nivel"> | number
    id_treasure_hunt?: IntWithAggregatesFilter<"nivel"> | number
  }

  export type palabraWhereInput = {
    AND?: palabraWhereInput | palabraWhereInput[]
    OR?: palabraWhereInput[]
    NOT?: palabraWhereInput | palabraWhereInput[]
    id_palabra?: IntFilter<"palabra"> | number
    id_isla?: IntFilter<"palabra"> | number
    palabra?: StringFilter<"palabra"> | string
    id_video_segna?: StringFilter<"palabra"> | string
    url_icono?: StringFilter<"palabra"> | string
    isla?: XOR<IslaRelationFilter, islaWhereInput>
    detalles_quiz?: Detalles_quizListRelationFilter
    palabras_video_cuestionario?: Palabras_video_cuestionarioListRelationFilter
  }

  export type palabraOrderByWithRelationInput = {
    id_palabra?: SortOrder
    id_isla?: SortOrder
    palabra?: SortOrder
    id_video_segna?: SortOrder
    url_icono?: SortOrder
    isla?: islaOrderByWithRelationInput
    detalles_quiz?: detalles_quizOrderByRelationAggregateInput
    palabras_video_cuestionario?: palabras_video_cuestionarioOrderByRelationAggregateInput
  }

  export type palabraWhereUniqueInput = Prisma.AtLeast<{
    id_palabra?: number
    AND?: palabraWhereInput | palabraWhereInput[]
    OR?: palabraWhereInput[]
    NOT?: palabraWhereInput | palabraWhereInput[]
    id_isla?: IntFilter<"palabra"> | number
    palabra?: StringFilter<"palabra"> | string
    id_video_segna?: StringFilter<"palabra"> | string
    url_icono?: StringFilter<"palabra"> | string
    isla?: XOR<IslaRelationFilter, islaWhereInput>
    detalles_quiz?: Detalles_quizListRelationFilter
    palabras_video_cuestionario?: Palabras_video_cuestionarioListRelationFilter
  }, "id_palabra">

  export type palabraOrderByWithAggregationInput = {
    id_palabra?: SortOrder
    id_isla?: SortOrder
    palabra?: SortOrder
    id_video_segna?: SortOrder
    url_icono?: SortOrder
    _count?: palabraCountOrderByAggregateInput
    _avg?: palabraAvgOrderByAggregateInput
    _max?: palabraMaxOrderByAggregateInput
    _min?: palabraMinOrderByAggregateInput
    _sum?: palabraSumOrderByAggregateInput
  }

  export type palabraScalarWhereWithAggregatesInput = {
    AND?: palabraScalarWhereWithAggregatesInput | palabraScalarWhereWithAggregatesInput[]
    OR?: palabraScalarWhereWithAggregatesInput[]
    NOT?: palabraScalarWhereWithAggregatesInput | palabraScalarWhereWithAggregatesInput[]
    id_palabra?: IntWithAggregatesFilter<"palabra"> | number
    id_isla?: IntWithAggregatesFilter<"palabra"> | number
    palabra?: StringWithAggregatesFilter<"palabra"> | string
    id_video_segna?: StringWithAggregatesFilter<"palabra"> | string
    url_icono?: StringWithAggregatesFilter<"palabra"> | string
  }

  export type parte_video_cuestionarioWhereInput = {
    AND?: parte_video_cuestionarioWhereInput | parte_video_cuestionarioWhereInput[]
    OR?: parte_video_cuestionarioWhereInput[]
    NOT?: parte_video_cuestionarioWhereInput | parte_video_cuestionarioWhereInput[]
    id_parte_video_cuestionario?: IntFilter<"parte_video_cuestionario"> | number
    id_video_cuestionario?: IntFilter<"parte_video_cuestionario"> | number
    url_video?: StringFilter<"parte_video_cuestionario"> | string
    indice?: IntFilter<"parte_video_cuestionario"> | number
    nombre?: StringFilter<"parte_video_cuestionario"> | string
    video_cuestionario?: XOR<Video_cuestionarioRelationFilter, video_cuestionarioWhereInput>
    preguntas_video_cuestionario?: Preguntas_video_cuestionarioListRelationFilter
  }

  export type parte_video_cuestionarioOrderByWithRelationInput = {
    id_parte_video_cuestionario?: SortOrder
    id_video_cuestionario?: SortOrder
    url_video?: SortOrder
    indice?: SortOrder
    nombre?: SortOrder
    video_cuestionario?: video_cuestionarioOrderByWithRelationInput
    preguntas_video_cuestionario?: preguntas_video_cuestionarioOrderByRelationAggregateInput
  }

  export type parte_video_cuestionarioWhereUniqueInput = Prisma.AtLeast<{
    id_parte_video_cuestionario?: number
    AND?: parte_video_cuestionarioWhereInput | parte_video_cuestionarioWhereInput[]
    OR?: parte_video_cuestionarioWhereInput[]
    NOT?: parte_video_cuestionarioWhereInput | parte_video_cuestionarioWhereInput[]
    id_video_cuestionario?: IntFilter<"parte_video_cuestionario"> | number
    url_video?: StringFilter<"parte_video_cuestionario"> | string
    indice?: IntFilter<"parte_video_cuestionario"> | number
    nombre?: StringFilter<"parte_video_cuestionario"> | string
    video_cuestionario?: XOR<Video_cuestionarioRelationFilter, video_cuestionarioWhereInput>
    preguntas_video_cuestionario?: Preguntas_video_cuestionarioListRelationFilter
  }, "id_parte_video_cuestionario">

  export type parte_video_cuestionarioOrderByWithAggregationInput = {
    id_parte_video_cuestionario?: SortOrder
    id_video_cuestionario?: SortOrder
    url_video?: SortOrder
    indice?: SortOrder
    nombre?: SortOrder
    _count?: parte_video_cuestionarioCountOrderByAggregateInput
    _avg?: parte_video_cuestionarioAvgOrderByAggregateInput
    _max?: parte_video_cuestionarioMaxOrderByAggregateInput
    _min?: parte_video_cuestionarioMinOrderByAggregateInput
    _sum?: parte_video_cuestionarioSumOrderByAggregateInput
  }

  export type parte_video_cuestionarioScalarWhereWithAggregatesInput = {
    AND?: parte_video_cuestionarioScalarWhereWithAggregatesInput | parte_video_cuestionarioScalarWhereWithAggregatesInput[]
    OR?: parte_video_cuestionarioScalarWhereWithAggregatesInput[]
    NOT?: parte_video_cuestionarioScalarWhereWithAggregatesInput | parte_video_cuestionarioScalarWhereWithAggregatesInput[]
    id_parte_video_cuestionario?: IntWithAggregatesFilter<"parte_video_cuestionario"> | number
    id_video_cuestionario?: IntWithAggregatesFilter<"parte_video_cuestionario"> | number
    url_video?: StringWithAggregatesFilter<"parte_video_cuestionario"> | string
    indice?: IntWithAggregatesFilter<"parte_video_cuestionario"> | number
    nombre?: StringWithAggregatesFilter<"parte_video_cuestionario"> | string
  }

  export type palabras_video_cuestionarioWhereInput = {
    AND?: palabras_video_cuestionarioWhereInput | palabras_video_cuestionarioWhereInput[]
    OR?: palabras_video_cuestionarioWhereInput[]
    NOT?: palabras_video_cuestionarioWhereInput | palabras_video_cuestionarioWhereInput[]
    id_video_cuestionario?: IntFilter<"palabras_video_cuestionario"> | number
    id_palabra?: IntFilter<"palabras_video_cuestionario"> | number
    video_cuestionario?: XOR<Video_cuestionarioRelationFilter, video_cuestionarioWhereInput>
    palabra?: XOR<PalabraRelationFilter, palabraWhereInput>
  }

  export type palabras_video_cuestionarioOrderByWithRelationInput = {
    id_video_cuestionario?: SortOrder
    id_palabra?: SortOrder
    video_cuestionario?: video_cuestionarioOrderByWithRelationInput
    palabra?: palabraOrderByWithRelationInput
  }

  export type palabras_video_cuestionarioWhereUniqueInput = Prisma.AtLeast<{
    id_video_cuestionario_id_palabra?: palabras_video_cuestionarioId_video_cuestionarioId_palabraCompoundUniqueInput
    AND?: palabras_video_cuestionarioWhereInput | palabras_video_cuestionarioWhereInput[]
    OR?: palabras_video_cuestionarioWhereInput[]
    NOT?: palabras_video_cuestionarioWhereInput | palabras_video_cuestionarioWhereInput[]
    id_video_cuestionario?: IntFilter<"palabras_video_cuestionario"> | number
    id_palabra?: IntFilter<"palabras_video_cuestionario"> | number
    video_cuestionario?: XOR<Video_cuestionarioRelationFilter, video_cuestionarioWhereInput>
    palabra?: XOR<PalabraRelationFilter, palabraWhereInput>
  }, "id_video_cuestionario_id_palabra">

  export type palabras_video_cuestionarioOrderByWithAggregationInput = {
    id_video_cuestionario?: SortOrder
    id_palabra?: SortOrder
    _count?: palabras_video_cuestionarioCountOrderByAggregateInput
    _avg?: palabras_video_cuestionarioAvgOrderByAggregateInput
    _max?: palabras_video_cuestionarioMaxOrderByAggregateInput
    _min?: palabras_video_cuestionarioMinOrderByAggregateInput
    _sum?: palabras_video_cuestionarioSumOrderByAggregateInput
  }

  export type palabras_video_cuestionarioScalarWhereWithAggregatesInput = {
    AND?: palabras_video_cuestionarioScalarWhereWithAggregatesInput | palabras_video_cuestionarioScalarWhereWithAggregatesInput[]
    OR?: palabras_video_cuestionarioScalarWhereWithAggregatesInput[]
    NOT?: palabras_video_cuestionarioScalarWhereWithAggregatesInput | palabras_video_cuestionarioScalarWhereWithAggregatesInput[]
    id_video_cuestionario?: IntWithAggregatesFilter<"palabras_video_cuestionario"> | number
    id_palabra?: IntWithAggregatesFilter<"palabras_video_cuestionario"> | number
  }

  export type preguntas_video_cuestionarioWhereInput = {
    AND?: preguntas_video_cuestionarioWhereInput | preguntas_video_cuestionarioWhereInput[]
    OR?: preguntas_video_cuestionarioWhereInput[]
    NOT?: preguntas_video_cuestionarioWhereInput | preguntas_video_cuestionarioWhereInput[]
    id_preguntas_video_cuestionario?: IntFilter<"preguntas_video_cuestionario"> | number
    id_parte_video_cuestionario?: IntFilter<"preguntas_video_cuestionario"> | number
    pregunta?: StringFilter<"preguntas_video_cuestionario"> | string
    parte_video_cuestionario?: XOR<Parte_video_cuestionarioRelationFilter, parte_video_cuestionarioWhereInput>
    respuestas_video_cuestionario?: Respuestas_video_cuestionarioListRelationFilter
  }

  export type preguntas_video_cuestionarioOrderByWithRelationInput = {
    id_preguntas_video_cuestionario?: SortOrder
    id_parte_video_cuestionario?: SortOrder
    pregunta?: SortOrder
    parte_video_cuestionario?: parte_video_cuestionarioOrderByWithRelationInput
    respuestas_video_cuestionario?: respuestas_video_cuestionarioOrderByRelationAggregateInput
  }

  export type preguntas_video_cuestionarioWhereUniqueInput = Prisma.AtLeast<{
    id_preguntas_video_cuestionario?: number
    AND?: preguntas_video_cuestionarioWhereInput | preguntas_video_cuestionarioWhereInput[]
    OR?: preguntas_video_cuestionarioWhereInput[]
    NOT?: preguntas_video_cuestionarioWhereInput | preguntas_video_cuestionarioWhereInput[]
    id_parte_video_cuestionario?: IntFilter<"preguntas_video_cuestionario"> | number
    pregunta?: StringFilter<"preguntas_video_cuestionario"> | string
    parte_video_cuestionario?: XOR<Parte_video_cuestionarioRelationFilter, parte_video_cuestionarioWhereInput>
    respuestas_video_cuestionario?: Respuestas_video_cuestionarioListRelationFilter
  }, "id_preguntas_video_cuestionario">

  export type preguntas_video_cuestionarioOrderByWithAggregationInput = {
    id_preguntas_video_cuestionario?: SortOrder
    id_parte_video_cuestionario?: SortOrder
    pregunta?: SortOrder
    _count?: preguntas_video_cuestionarioCountOrderByAggregateInput
    _avg?: preguntas_video_cuestionarioAvgOrderByAggregateInput
    _max?: preguntas_video_cuestionarioMaxOrderByAggregateInput
    _min?: preguntas_video_cuestionarioMinOrderByAggregateInput
    _sum?: preguntas_video_cuestionarioSumOrderByAggregateInput
  }

  export type preguntas_video_cuestionarioScalarWhereWithAggregatesInput = {
    AND?: preguntas_video_cuestionarioScalarWhereWithAggregatesInput | preguntas_video_cuestionarioScalarWhereWithAggregatesInput[]
    OR?: preguntas_video_cuestionarioScalarWhereWithAggregatesInput[]
    NOT?: preguntas_video_cuestionarioScalarWhereWithAggregatesInput | preguntas_video_cuestionarioScalarWhereWithAggregatesInput[]
    id_preguntas_video_cuestionario?: IntWithAggregatesFilter<"preguntas_video_cuestionario"> | number
    id_parte_video_cuestionario?: IntWithAggregatesFilter<"preguntas_video_cuestionario"> | number
    pregunta?: StringWithAggregatesFilter<"preguntas_video_cuestionario"> | string
  }

  export type respuestas_video_cuestionarioWhereInput = {
    AND?: respuestas_video_cuestionarioWhereInput | respuestas_video_cuestionarioWhereInput[]
    OR?: respuestas_video_cuestionarioWhereInput[]
    NOT?: respuestas_video_cuestionarioWhereInput | respuestas_video_cuestionarioWhereInput[]
    id_respuestas_video_cuestionario?: IntFilter<"respuestas_video_cuestionario"> | number
    id_preguntas_video_cuestionario?: IntFilter<"respuestas_video_cuestionario"> | number
    respuesta?: StringFilter<"respuestas_video_cuestionario"> | string
    es_correcta?: BoolFilter<"respuestas_video_cuestionario"> | boolean
    preguntas_video_cuestionario?: XOR<Preguntas_video_cuestionarioRelationFilter, preguntas_video_cuestionarioWhereInput>
  }

  export type respuestas_video_cuestionarioOrderByWithRelationInput = {
    id_respuestas_video_cuestionario?: SortOrder
    id_preguntas_video_cuestionario?: SortOrder
    respuesta?: SortOrder
    es_correcta?: SortOrder
    preguntas_video_cuestionario?: preguntas_video_cuestionarioOrderByWithRelationInput
  }

  export type respuestas_video_cuestionarioWhereUniqueInput = Prisma.AtLeast<{
    id_respuestas_video_cuestionario?: number
    AND?: respuestas_video_cuestionarioWhereInput | respuestas_video_cuestionarioWhereInput[]
    OR?: respuestas_video_cuestionarioWhereInput[]
    NOT?: respuestas_video_cuestionarioWhereInput | respuestas_video_cuestionarioWhereInput[]
    id_preguntas_video_cuestionario?: IntFilter<"respuestas_video_cuestionario"> | number
    respuesta?: StringFilter<"respuestas_video_cuestionario"> | string
    es_correcta?: BoolFilter<"respuestas_video_cuestionario"> | boolean
    preguntas_video_cuestionario?: XOR<Preguntas_video_cuestionarioRelationFilter, preguntas_video_cuestionarioWhereInput>
  }, "id_respuestas_video_cuestionario">

  export type respuestas_video_cuestionarioOrderByWithAggregationInput = {
    id_respuestas_video_cuestionario?: SortOrder
    id_preguntas_video_cuestionario?: SortOrder
    respuesta?: SortOrder
    es_correcta?: SortOrder
    _count?: respuestas_video_cuestionarioCountOrderByAggregateInput
    _avg?: respuestas_video_cuestionarioAvgOrderByAggregateInput
    _max?: respuestas_video_cuestionarioMaxOrderByAggregateInput
    _min?: respuestas_video_cuestionarioMinOrderByAggregateInput
    _sum?: respuestas_video_cuestionarioSumOrderByAggregateInput
  }

  export type respuestas_video_cuestionarioScalarWhereWithAggregatesInput = {
    AND?: respuestas_video_cuestionarioScalarWhereWithAggregatesInput | respuestas_video_cuestionarioScalarWhereWithAggregatesInput[]
    OR?: respuestas_video_cuestionarioScalarWhereWithAggregatesInput[]
    NOT?: respuestas_video_cuestionarioScalarWhereWithAggregatesInput | respuestas_video_cuestionarioScalarWhereWithAggregatesInput[]
    id_respuestas_video_cuestionario?: IntWithAggregatesFilter<"respuestas_video_cuestionario"> | number
    id_preguntas_video_cuestionario?: IntWithAggregatesFilter<"respuestas_video_cuestionario"> | number
    respuesta?: StringWithAggregatesFilter<"respuestas_video_cuestionario"> | string
    es_correcta?: BoolWithAggregatesFilter<"respuestas_video_cuestionario"> | boolean
  }

  export type detalles_quizWhereInput = {
    AND?: detalles_quizWhereInput | detalles_quizWhereInput[]
    OR?: detalles_quizWhereInput[]
    NOT?: detalles_quizWhereInput | detalles_quizWhereInput[]
    id_quiz?: IntFilter<"detalles_quiz"> | number
    id_palabra?: IntFilter<"detalles_quiz"> | number
    quiz?: XOR<QuizRelationFilter, quizWhereInput>
    palabra?: XOR<PalabraRelationFilter, palabraWhereInput>
  }

  export type detalles_quizOrderByWithRelationInput = {
    id_quiz?: SortOrder
    id_palabra?: SortOrder
    quiz?: quizOrderByWithRelationInput
    palabra?: palabraOrderByWithRelationInput
  }

  export type detalles_quizWhereUniqueInput = Prisma.AtLeast<{
    id_quiz_id_palabra?: detalles_quizId_quizId_palabraCompoundUniqueInput
    AND?: detalles_quizWhereInput | detalles_quizWhereInput[]
    OR?: detalles_quizWhereInput[]
    NOT?: detalles_quizWhereInput | detalles_quizWhereInput[]
    id_quiz?: IntFilter<"detalles_quiz"> | number
    id_palabra?: IntFilter<"detalles_quiz"> | number
    quiz?: XOR<QuizRelationFilter, quizWhereInput>
    palabra?: XOR<PalabraRelationFilter, palabraWhereInput>
  }, "id_quiz_id_palabra">

  export type detalles_quizOrderByWithAggregationInput = {
    id_quiz?: SortOrder
    id_palabra?: SortOrder
    _count?: detalles_quizCountOrderByAggregateInput
    _avg?: detalles_quizAvgOrderByAggregateInput
    _max?: detalles_quizMaxOrderByAggregateInput
    _min?: detalles_quizMinOrderByAggregateInput
    _sum?: detalles_quizSumOrderByAggregateInput
  }

  export type detalles_quizScalarWhereWithAggregatesInput = {
    AND?: detalles_quizScalarWhereWithAggregatesInput | detalles_quizScalarWhereWithAggregatesInput[]
    OR?: detalles_quizScalarWhereWithAggregatesInput[]
    NOT?: detalles_quizScalarWhereWithAggregatesInput | detalles_quizScalarWhereWithAggregatesInput[]
    id_quiz?: IntWithAggregatesFilter<"detalles_quiz"> | number
    id_palabra?: IntWithAggregatesFilter<"detalles_quiz"> | number
  }

  export type miembroCreateInput = {
    usuario: string
    contrasegna: string
    es_administrador: boolean
  }

  export type miembroUncheckedCreateInput = {
    id_miembro?: number
    usuario: string
    contrasegna: string
    es_administrador: boolean
  }

  export type miembroUpdateInput = {
    usuario?: StringFieldUpdateOperationsInput | string
    contrasegna?: StringFieldUpdateOperationsInput | string
    es_administrador?: BoolFieldUpdateOperationsInput | boolean
  }

  export type miembroUncheckedUpdateInput = {
    id_miembro?: IntFieldUpdateOperationsInput | number
    usuario?: StringFieldUpdateOperationsInput | string
    contrasegna?: StringFieldUpdateOperationsInput | string
    es_administrador?: BoolFieldUpdateOperationsInput | boolean
  }

  export type miembroCreateManyInput = {
    id_miembro?: number
    usuario: string
    contrasegna: string
    es_administrador: boolean
  }

  export type miembroUpdateManyMutationInput = {
    usuario?: StringFieldUpdateOperationsInput | string
    contrasegna?: StringFieldUpdateOperationsInput | string
    es_administrador?: BoolFieldUpdateOperationsInput | boolean
  }

  export type miembroUncheckedUpdateManyInput = {
    id_miembro?: IntFieldUpdateOperationsInput | number
    usuario?: StringFieldUpdateOperationsInput | string
    contrasegna?: StringFieldUpdateOperationsInput | string
    es_administrador?: BoolFieldUpdateOperationsInput | boolean
  }

  export type islaCreateInput = {
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    video_cuestionario?: video_cuestionarioCreateNestedManyWithoutIslaInput
    quiz?: quizCreateNestedManyWithoutIslaInput
    modelo_coml?: modelo_comlCreateNestedManyWithoutIslaInput
    treasure_hunt?: treasure_huntCreateNestedManyWithoutIslaInput
    nivel?: nivelCreateNestedManyWithoutIslaInput
    palabra?: palabraCreateNestedManyWithoutIslaInput
  }

  export type islaUncheckedCreateInput = {
    id_isla?: number
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    video_cuestionario?: video_cuestionarioUncheckedCreateNestedManyWithoutIslaInput
    quiz?: quizUncheckedCreateNestedManyWithoutIslaInput
    modelo_coml?: modelo_comlUncheckedCreateNestedManyWithoutIslaInput
    treasure_hunt?: treasure_huntUncheckedCreateNestedManyWithoutIslaInput
    nivel?: nivelUncheckedCreateNestedManyWithoutIslaInput
    palabra?: palabraUncheckedCreateNestedManyWithoutIslaInput
  }

  export type islaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    video_cuestionario?: video_cuestionarioUpdateManyWithoutIslaNestedInput
    quiz?: quizUpdateManyWithoutIslaNestedInput
    modelo_coml?: modelo_comlUpdateManyWithoutIslaNestedInput
    treasure_hunt?: treasure_huntUpdateManyWithoutIslaNestedInput
    nivel?: nivelUpdateManyWithoutIslaNestedInput
    palabra?: palabraUpdateManyWithoutIslaNestedInput
  }

  export type islaUncheckedUpdateInput = {
    id_isla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    video_cuestionario?: video_cuestionarioUncheckedUpdateManyWithoutIslaNestedInput
    quiz?: quizUncheckedUpdateManyWithoutIslaNestedInput
    modelo_coml?: modelo_comlUncheckedUpdateManyWithoutIslaNestedInput
    treasure_hunt?: treasure_huntUncheckedUpdateManyWithoutIslaNestedInput
    nivel?: nivelUncheckedUpdateManyWithoutIslaNestedInput
    palabra?: palabraUncheckedUpdateManyWithoutIslaNestedInput
  }

  export type islaCreateManyInput = {
    id_isla?: number
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
  }

  export type islaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type islaUncheckedUpdateManyInput = {
    id_isla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type video_cuestionarioCreateInput = {
    nombre: string
    isla: islaCreateNestedOneWithoutVideo_cuestionarioInput
    nivel?: nivelCreateNestedManyWithoutVideo_cuestionarioInput
    parte_video_cuestionario?: parte_video_cuestionarioCreateNestedManyWithoutVideo_cuestionarioInput
    palabras_video_cuestionario?: palabras_video_cuestionarioCreateNestedManyWithoutVideo_cuestionarioInput
  }

  export type video_cuestionarioUncheckedCreateInput = {
    id_video_cuestionario?: number
    nombre: string
    id_isla: number
    nivel?: nivelUncheckedCreateNestedManyWithoutVideo_cuestionarioInput
    parte_video_cuestionario?: parte_video_cuestionarioUncheckedCreateNestedManyWithoutVideo_cuestionarioInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedCreateNestedManyWithoutVideo_cuestionarioInput
  }

  export type video_cuestionarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    isla?: islaUpdateOneRequiredWithoutVideo_cuestionarioNestedInput
    nivel?: nivelUpdateManyWithoutVideo_cuestionarioNestedInput
    parte_video_cuestionario?: parte_video_cuestionarioUpdateManyWithoutVideo_cuestionarioNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUpdateManyWithoutVideo_cuestionarioNestedInput
  }

  export type video_cuestionarioUncheckedUpdateInput = {
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    id_isla?: IntFieldUpdateOperationsInput | number
    nivel?: nivelUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput
    parte_video_cuestionario?: parte_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput
  }

  export type video_cuestionarioCreateManyInput = {
    id_video_cuestionario?: number
    nombre: string
    id_isla: number
  }

  export type video_cuestionarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type video_cuestionarioUncheckedUpdateManyInput = {
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    id_isla?: IntFieldUpdateOperationsInput | number
  }

  export type quizCreateInput = {
    nombre: string
    isla: islaCreateNestedOneWithoutQuizInput
    nivel?: nivelCreateNestedManyWithoutQuizInput
    detalles_quiz?: detalles_quizCreateNestedManyWithoutQuizInput
  }

  export type quizUncheckedCreateInput = {
    id_quiz?: number
    id_isla: number
    nombre: string
    nivel?: nivelUncheckedCreateNestedManyWithoutQuizInput
    detalles_quiz?: detalles_quizUncheckedCreateNestedManyWithoutQuizInput
  }

  export type quizUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    isla?: islaUpdateOneRequiredWithoutQuizNestedInput
    nivel?: nivelUpdateManyWithoutQuizNestedInput
    detalles_quiz?: detalles_quizUpdateManyWithoutQuizNestedInput
  }

  export type quizUncheckedUpdateInput = {
    id_quiz?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: nivelUncheckedUpdateManyWithoutQuizNestedInput
    detalles_quiz?: detalles_quizUncheckedUpdateManyWithoutQuizNestedInput
  }

  export type quizCreateManyInput = {
    id_quiz?: number
    id_isla: number
    nombre: string
  }

  export type quizUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type quizUncheckedUpdateManyInput = {
    id_quiz?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type modelo_comlCreateInput = {
    isla: islaCreateNestedOneWithoutModelo_comlInput
    treasure_hunt?: treasure_huntCreateNestedManyWithoutModelo_comlInput
  }

  export type modelo_comlUncheckedCreateInput = {
    id_modelo_coml?: number
    id_isla: number
    treasure_hunt?: treasure_huntUncheckedCreateNestedManyWithoutModelo_comlInput
  }

  export type modelo_comlUpdateInput = {
    isla?: islaUpdateOneRequiredWithoutModelo_comlNestedInput
    treasure_hunt?: treasure_huntUpdateManyWithoutModelo_comlNestedInput
  }

  export type modelo_comlUncheckedUpdateInput = {
    id_modelo_coml?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    treasure_hunt?: treasure_huntUncheckedUpdateManyWithoutModelo_comlNestedInput
  }

  export type modelo_comlCreateManyInput = {
    id_modelo_coml?: number
    id_isla: number
  }

  export type modelo_comlUpdateManyMutationInput = {

  }

  export type modelo_comlUncheckedUpdateManyInput = {
    id_modelo_coml?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
  }

  export type treasure_huntCreateInput = {
    isla: islaCreateNestedOneWithoutTreasure_huntInput
    modelo_coml: modelo_comlCreateNestedOneWithoutTreasure_huntInput
    nivel?: nivelCreateNestedManyWithoutTreasure_huntInput
  }

  export type treasure_huntUncheckedCreateInput = {
    id_treasure_hunt?: number
    id_isla: number
    id_modelo_coml: number
    nivel?: nivelUncheckedCreateNestedManyWithoutTreasure_huntInput
  }

  export type treasure_huntUpdateInput = {
    isla?: islaUpdateOneRequiredWithoutTreasure_huntNestedInput
    modelo_coml?: modelo_comlUpdateOneRequiredWithoutTreasure_huntNestedInput
    nivel?: nivelUpdateManyWithoutTreasure_huntNestedInput
  }

  export type treasure_huntUncheckedUpdateInput = {
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    id_modelo_coml?: IntFieldUpdateOperationsInput | number
    nivel?: nivelUncheckedUpdateManyWithoutTreasure_huntNestedInput
  }

  export type treasure_huntCreateManyInput = {
    id_treasure_hunt?: number
    id_isla: number
    id_modelo_coml: number
  }

  export type treasure_huntUpdateManyMutationInput = {

  }

  export type treasure_huntUncheckedUpdateManyInput = {
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    id_modelo_coml?: IntFieldUpdateOperationsInput | number
  }

  export type nivelCreateInput = {
    isla: islaCreateNestedOneWithoutNivelInput
    video_cuestionario: video_cuestionarioCreateNestedOneWithoutNivelInput
    quiz: quizCreateNestedOneWithoutNivelInput
    treasure_hunt: treasure_huntCreateNestedOneWithoutNivelInput
  }

  export type nivelUncheckedCreateInput = {
    id_nivel?: number
    id_isla: number
    id_video_cuestionario: number
    id_quiz: number
    id_treasure_hunt: number
  }

  export type nivelUpdateInput = {
    isla?: islaUpdateOneRequiredWithoutNivelNestedInput
    video_cuestionario?: video_cuestionarioUpdateOneRequiredWithoutNivelNestedInput
    quiz?: quizUpdateOneRequiredWithoutNivelNestedInput
    treasure_hunt?: treasure_huntUpdateOneRequiredWithoutNivelNestedInput
  }

  export type nivelUncheckedUpdateInput = {
    id_nivel?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_quiz?: IntFieldUpdateOperationsInput | number
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
  }

  export type nivelCreateManyInput = {
    id_nivel?: number
    id_isla: number
    id_video_cuestionario: number
    id_quiz: number
    id_treasure_hunt: number
  }

  export type nivelUpdateManyMutationInput = {

  }

  export type nivelUncheckedUpdateManyInput = {
    id_nivel?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_quiz?: IntFieldUpdateOperationsInput | number
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
  }

  export type palabraCreateInput = {
    palabra: string
    id_video_segna: string
    url_icono: string
    isla: islaCreateNestedOneWithoutPalabraInput
    detalles_quiz?: detalles_quizCreateNestedManyWithoutPalabraInput
    palabras_video_cuestionario?: palabras_video_cuestionarioCreateNestedManyWithoutPalabraInput
  }

  export type palabraUncheckedCreateInput = {
    id_palabra?: number
    id_isla: number
    palabra: string
    id_video_segna: string
    url_icono: string
    detalles_quiz?: detalles_quizUncheckedCreateNestedManyWithoutPalabraInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedCreateNestedManyWithoutPalabraInput
  }

  export type palabraUpdateInput = {
    palabra?: StringFieldUpdateOperationsInput | string
    id_video_segna?: StringFieldUpdateOperationsInput | string
    url_icono?: StringFieldUpdateOperationsInput | string
    isla?: islaUpdateOneRequiredWithoutPalabraNestedInput
    detalles_quiz?: detalles_quizUpdateManyWithoutPalabraNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUpdateManyWithoutPalabraNestedInput
  }

  export type palabraUncheckedUpdateInput = {
    id_palabra?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    palabra?: StringFieldUpdateOperationsInput | string
    id_video_segna?: StringFieldUpdateOperationsInput | string
    url_icono?: StringFieldUpdateOperationsInput | string
    detalles_quiz?: detalles_quizUncheckedUpdateManyWithoutPalabraNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedUpdateManyWithoutPalabraNestedInput
  }

  export type palabraCreateManyInput = {
    id_palabra?: number
    id_isla: number
    palabra: string
    id_video_segna: string
    url_icono: string
  }

  export type palabraUpdateManyMutationInput = {
    palabra?: StringFieldUpdateOperationsInput | string
    id_video_segna?: StringFieldUpdateOperationsInput | string
    url_icono?: StringFieldUpdateOperationsInput | string
  }

  export type palabraUncheckedUpdateManyInput = {
    id_palabra?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    palabra?: StringFieldUpdateOperationsInput | string
    id_video_segna?: StringFieldUpdateOperationsInput | string
    url_icono?: StringFieldUpdateOperationsInput | string
  }

  export type parte_video_cuestionarioCreateInput = {
    url_video: string
    indice: number
    nombre: string
    video_cuestionario: video_cuestionarioCreateNestedOneWithoutParte_video_cuestionarioInput
    preguntas_video_cuestionario?: preguntas_video_cuestionarioCreateNestedManyWithoutParte_video_cuestionarioInput
  }

  export type parte_video_cuestionarioUncheckedCreateInput = {
    id_parte_video_cuestionario?: number
    id_video_cuestionario: number
    url_video: string
    indice: number
    nombre: string
    preguntas_video_cuestionario?: preguntas_video_cuestionarioUncheckedCreateNestedManyWithoutParte_video_cuestionarioInput
  }

  export type parte_video_cuestionarioUpdateInput = {
    url_video?: StringFieldUpdateOperationsInput | string
    indice?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    video_cuestionario?: video_cuestionarioUpdateOneRequiredWithoutParte_video_cuestionarioNestedInput
    preguntas_video_cuestionario?: preguntas_video_cuestionarioUpdateManyWithoutParte_video_cuestionarioNestedInput
  }

  export type parte_video_cuestionarioUncheckedUpdateInput = {
    id_parte_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    url_video?: StringFieldUpdateOperationsInput | string
    indice?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    preguntas_video_cuestionario?: preguntas_video_cuestionarioUncheckedUpdateManyWithoutParte_video_cuestionarioNestedInput
  }

  export type parte_video_cuestionarioCreateManyInput = {
    id_parte_video_cuestionario?: number
    id_video_cuestionario: number
    url_video: string
    indice: number
    nombre: string
  }

  export type parte_video_cuestionarioUpdateManyMutationInput = {
    url_video?: StringFieldUpdateOperationsInput | string
    indice?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type parte_video_cuestionarioUncheckedUpdateManyInput = {
    id_parte_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    url_video?: StringFieldUpdateOperationsInput | string
    indice?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type palabras_video_cuestionarioCreateInput = {
    video_cuestionario: video_cuestionarioCreateNestedOneWithoutPalabras_video_cuestionarioInput
    palabra: palabraCreateNestedOneWithoutPalabras_video_cuestionarioInput
  }

  export type palabras_video_cuestionarioUncheckedCreateInput = {
    id_video_cuestionario: number
    id_palabra: number
  }

  export type palabras_video_cuestionarioUpdateInput = {
    video_cuestionario?: video_cuestionarioUpdateOneRequiredWithoutPalabras_video_cuestionarioNestedInput
    palabra?: palabraUpdateOneRequiredWithoutPalabras_video_cuestionarioNestedInput
  }

  export type palabras_video_cuestionarioUncheckedUpdateInput = {
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_palabra?: IntFieldUpdateOperationsInput | number
  }

  export type palabras_video_cuestionarioCreateManyInput = {
    id_video_cuestionario: number
    id_palabra: number
  }

  export type palabras_video_cuestionarioUpdateManyMutationInput = {

  }

  export type palabras_video_cuestionarioUncheckedUpdateManyInput = {
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_palabra?: IntFieldUpdateOperationsInput | number
  }

  export type preguntas_video_cuestionarioCreateInput = {
    pregunta: string
    parte_video_cuestionario: parte_video_cuestionarioCreateNestedOneWithoutPreguntas_video_cuestionarioInput
    respuestas_video_cuestionario?: respuestas_video_cuestionarioCreateNestedManyWithoutPreguntas_video_cuestionarioInput
  }

  export type preguntas_video_cuestionarioUncheckedCreateInput = {
    id_preguntas_video_cuestionario?: number
    id_parte_video_cuestionario: number
    pregunta: string
    respuestas_video_cuestionario?: respuestas_video_cuestionarioUncheckedCreateNestedManyWithoutPreguntas_video_cuestionarioInput
  }

  export type preguntas_video_cuestionarioUpdateInput = {
    pregunta?: StringFieldUpdateOperationsInput | string
    parte_video_cuestionario?: parte_video_cuestionarioUpdateOneRequiredWithoutPreguntas_video_cuestionarioNestedInput
    respuestas_video_cuestionario?: respuestas_video_cuestionarioUpdateManyWithoutPreguntas_video_cuestionarioNestedInput
  }

  export type preguntas_video_cuestionarioUncheckedUpdateInput = {
    id_preguntas_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_parte_video_cuestionario?: IntFieldUpdateOperationsInput | number
    pregunta?: StringFieldUpdateOperationsInput | string
    respuestas_video_cuestionario?: respuestas_video_cuestionarioUncheckedUpdateManyWithoutPreguntas_video_cuestionarioNestedInput
  }

  export type preguntas_video_cuestionarioCreateManyInput = {
    id_preguntas_video_cuestionario?: number
    id_parte_video_cuestionario: number
    pregunta: string
  }

  export type preguntas_video_cuestionarioUpdateManyMutationInput = {
    pregunta?: StringFieldUpdateOperationsInput | string
  }

  export type preguntas_video_cuestionarioUncheckedUpdateManyInput = {
    id_preguntas_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_parte_video_cuestionario?: IntFieldUpdateOperationsInput | number
    pregunta?: StringFieldUpdateOperationsInput | string
  }

  export type respuestas_video_cuestionarioCreateInput = {
    respuesta: string
    es_correcta: boolean
    preguntas_video_cuestionario: preguntas_video_cuestionarioCreateNestedOneWithoutRespuestas_video_cuestionarioInput
  }

  export type respuestas_video_cuestionarioUncheckedCreateInput = {
    id_respuestas_video_cuestionario?: number
    id_preguntas_video_cuestionario: number
    respuesta: string
    es_correcta: boolean
  }

  export type respuestas_video_cuestionarioUpdateInput = {
    respuesta?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
    preguntas_video_cuestionario?: preguntas_video_cuestionarioUpdateOneRequiredWithoutRespuestas_video_cuestionarioNestedInput
  }

  export type respuestas_video_cuestionarioUncheckedUpdateInput = {
    id_respuestas_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_preguntas_video_cuestionario?: IntFieldUpdateOperationsInput | number
    respuesta?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
  }

  export type respuestas_video_cuestionarioCreateManyInput = {
    id_respuestas_video_cuestionario?: number
    id_preguntas_video_cuestionario: number
    respuesta: string
    es_correcta: boolean
  }

  export type respuestas_video_cuestionarioUpdateManyMutationInput = {
    respuesta?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
  }

  export type respuestas_video_cuestionarioUncheckedUpdateManyInput = {
    id_respuestas_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_preguntas_video_cuestionario?: IntFieldUpdateOperationsInput | number
    respuesta?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
  }

  export type detalles_quizCreateInput = {
    quiz: quizCreateNestedOneWithoutDetalles_quizInput
    palabra: palabraCreateNestedOneWithoutDetalles_quizInput
  }

  export type detalles_quizUncheckedCreateInput = {
    id_quiz: number
    id_palabra: number
  }

  export type detalles_quizUpdateInput = {
    quiz?: quizUpdateOneRequiredWithoutDetalles_quizNestedInput
    palabra?: palabraUpdateOneRequiredWithoutDetalles_quizNestedInput
  }

  export type detalles_quizUncheckedUpdateInput = {
    id_quiz?: IntFieldUpdateOperationsInput | number
    id_palabra?: IntFieldUpdateOperationsInput | number
  }

  export type detalles_quizCreateManyInput = {
    id_quiz: number
    id_palabra: number
  }

  export type detalles_quizUpdateManyMutationInput = {

  }

  export type detalles_quizUncheckedUpdateManyInput = {
    id_quiz?: IntFieldUpdateOperationsInput | number
    id_palabra?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type miembroCountOrderByAggregateInput = {
    id_miembro?: SortOrder
    usuario?: SortOrder
    contrasegna?: SortOrder
    es_administrador?: SortOrder
  }

  export type miembroAvgOrderByAggregateInput = {
    id_miembro?: SortOrder
  }

  export type miembroMaxOrderByAggregateInput = {
    id_miembro?: SortOrder
    usuario?: SortOrder
    contrasegna?: SortOrder
    es_administrador?: SortOrder
  }

  export type miembroMinOrderByAggregateInput = {
    id_miembro?: SortOrder
    usuario?: SortOrder
    contrasegna?: SortOrder
    es_administrador?: SortOrder
  }

  export type miembroSumOrderByAggregateInput = {
    id_miembro?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type BytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type Video_cuestionarioListRelationFilter = {
    every?: video_cuestionarioWhereInput
    some?: video_cuestionarioWhereInput
    none?: video_cuestionarioWhereInput
  }

  export type QuizListRelationFilter = {
    every?: quizWhereInput
    some?: quizWhereInput
    none?: quizWhereInput
  }

  export type Modelo_comlListRelationFilter = {
    every?: modelo_comlWhereInput
    some?: modelo_comlWhereInput
    none?: modelo_comlWhereInput
  }

  export type Treasure_huntListRelationFilter = {
    every?: treasure_huntWhereInput
    some?: treasure_huntWhereInput
    none?: treasure_huntWhereInput
  }

  export type NivelListRelationFilter = {
    every?: nivelWhereInput
    some?: nivelWhereInput
    none?: nivelWhereInput
  }

  export type PalabraListRelationFilter = {
    every?: palabraWhereInput
    some?: palabraWhereInput
    none?: palabraWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type video_cuestionarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type quizOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type modelo_comlOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type treasure_huntOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type nivelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type palabraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type islaCountOrderByAggregateInput = {
    id_isla?: SortOrder
    nombre?: SortOrder
    modelo_general?: SortOrder
    modelo_especifico?: SortOrder
  }

  export type islaAvgOrderByAggregateInput = {
    id_isla?: SortOrder
  }

  export type islaMaxOrderByAggregateInput = {
    id_isla?: SortOrder
    nombre?: SortOrder
    modelo_general?: SortOrder
    modelo_especifico?: SortOrder
  }

  export type islaMinOrderByAggregateInput = {
    id_isla?: SortOrder
    nombre?: SortOrder
    modelo_general?: SortOrder
    modelo_especifico?: SortOrder
  }

  export type islaSumOrderByAggregateInput = {
    id_isla?: SortOrder
  }

  export type BytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type IslaRelationFilter = {
    is?: islaWhereInput
    isNot?: islaWhereInput
  }

  export type Parte_video_cuestionarioListRelationFilter = {
    every?: parte_video_cuestionarioWhereInput
    some?: parte_video_cuestionarioWhereInput
    none?: parte_video_cuestionarioWhereInput
  }

  export type Palabras_video_cuestionarioListRelationFilter = {
    every?: palabras_video_cuestionarioWhereInput
    some?: palabras_video_cuestionarioWhereInput
    none?: palabras_video_cuestionarioWhereInput
  }

  export type parte_video_cuestionarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type palabras_video_cuestionarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type video_cuestionarioCountOrderByAggregateInput = {
    id_video_cuestionario?: SortOrder
    nombre?: SortOrder
    id_isla?: SortOrder
  }

  export type video_cuestionarioAvgOrderByAggregateInput = {
    id_video_cuestionario?: SortOrder
    id_isla?: SortOrder
  }

  export type video_cuestionarioMaxOrderByAggregateInput = {
    id_video_cuestionario?: SortOrder
    nombre?: SortOrder
    id_isla?: SortOrder
  }

  export type video_cuestionarioMinOrderByAggregateInput = {
    id_video_cuestionario?: SortOrder
    nombre?: SortOrder
    id_isla?: SortOrder
  }

  export type video_cuestionarioSumOrderByAggregateInput = {
    id_video_cuestionario?: SortOrder
    id_isla?: SortOrder
  }

  export type Detalles_quizListRelationFilter = {
    every?: detalles_quizWhereInput
    some?: detalles_quizWhereInput
    none?: detalles_quizWhereInput
  }

  export type detalles_quizOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type quizCountOrderByAggregateInput = {
    id_quiz?: SortOrder
    id_isla?: SortOrder
    nombre?: SortOrder
  }

  export type quizAvgOrderByAggregateInput = {
    id_quiz?: SortOrder
    id_isla?: SortOrder
  }

  export type quizMaxOrderByAggregateInput = {
    id_quiz?: SortOrder
    id_isla?: SortOrder
    nombre?: SortOrder
  }

  export type quizMinOrderByAggregateInput = {
    id_quiz?: SortOrder
    id_isla?: SortOrder
    nombre?: SortOrder
  }

  export type quizSumOrderByAggregateInput = {
    id_quiz?: SortOrder
    id_isla?: SortOrder
  }

  export type modelo_comlCountOrderByAggregateInput = {
    id_modelo_coml?: SortOrder
    id_isla?: SortOrder
  }

  export type modelo_comlAvgOrderByAggregateInput = {
    id_modelo_coml?: SortOrder
    id_isla?: SortOrder
  }

  export type modelo_comlMaxOrderByAggregateInput = {
    id_modelo_coml?: SortOrder
    id_isla?: SortOrder
  }

  export type modelo_comlMinOrderByAggregateInput = {
    id_modelo_coml?: SortOrder
    id_isla?: SortOrder
  }

  export type modelo_comlSumOrderByAggregateInput = {
    id_modelo_coml?: SortOrder
    id_isla?: SortOrder
  }

  export type Modelo_comlRelationFilter = {
    is?: modelo_comlWhereInput
    isNot?: modelo_comlWhereInput
  }

  export type treasure_huntCountOrderByAggregateInput = {
    id_treasure_hunt?: SortOrder
    id_isla?: SortOrder
    id_modelo_coml?: SortOrder
  }

  export type treasure_huntAvgOrderByAggregateInput = {
    id_treasure_hunt?: SortOrder
    id_isla?: SortOrder
    id_modelo_coml?: SortOrder
  }

  export type treasure_huntMaxOrderByAggregateInput = {
    id_treasure_hunt?: SortOrder
    id_isla?: SortOrder
    id_modelo_coml?: SortOrder
  }

  export type treasure_huntMinOrderByAggregateInput = {
    id_treasure_hunt?: SortOrder
    id_isla?: SortOrder
    id_modelo_coml?: SortOrder
  }

  export type treasure_huntSumOrderByAggregateInput = {
    id_treasure_hunt?: SortOrder
    id_isla?: SortOrder
    id_modelo_coml?: SortOrder
  }

  export type Video_cuestionarioRelationFilter = {
    is?: video_cuestionarioWhereInput
    isNot?: video_cuestionarioWhereInput
  }

  export type QuizRelationFilter = {
    is?: quizWhereInput
    isNot?: quizWhereInput
  }

  export type Treasure_huntRelationFilter = {
    is?: treasure_huntWhereInput
    isNot?: treasure_huntWhereInput
  }

  export type nivelCountOrderByAggregateInput = {
    id_nivel?: SortOrder
    id_isla?: SortOrder
    id_video_cuestionario?: SortOrder
    id_quiz?: SortOrder
    id_treasure_hunt?: SortOrder
  }

  export type nivelAvgOrderByAggregateInput = {
    id_nivel?: SortOrder
    id_isla?: SortOrder
    id_video_cuestionario?: SortOrder
    id_quiz?: SortOrder
    id_treasure_hunt?: SortOrder
  }

  export type nivelMaxOrderByAggregateInput = {
    id_nivel?: SortOrder
    id_isla?: SortOrder
    id_video_cuestionario?: SortOrder
    id_quiz?: SortOrder
    id_treasure_hunt?: SortOrder
  }

  export type nivelMinOrderByAggregateInput = {
    id_nivel?: SortOrder
    id_isla?: SortOrder
    id_video_cuestionario?: SortOrder
    id_quiz?: SortOrder
    id_treasure_hunt?: SortOrder
  }

  export type nivelSumOrderByAggregateInput = {
    id_nivel?: SortOrder
    id_isla?: SortOrder
    id_video_cuestionario?: SortOrder
    id_quiz?: SortOrder
    id_treasure_hunt?: SortOrder
  }

  export type palabraCountOrderByAggregateInput = {
    id_palabra?: SortOrder
    id_isla?: SortOrder
    palabra?: SortOrder
    id_video_segna?: SortOrder
    url_icono?: SortOrder
  }

  export type palabraAvgOrderByAggregateInput = {
    id_palabra?: SortOrder
    id_isla?: SortOrder
  }

  export type palabraMaxOrderByAggregateInput = {
    id_palabra?: SortOrder
    id_isla?: SortOrder
    palabra?: SortOrder
    id_video_segna?: SortOrder
    url_icono?: SortOrder
  }

  export type palabraMinOrderByAggregateInput = {
    id_palabra?: SortOrder
    id_isla?: SortOrder
    palabra?: SortOrder
    id_video_segna?: SortOrder
    url_icono?: SortOrder
  }

  export type palabraSumOrderByAggregateInput = {
    id_palabra?: SortOrder
    id_isla?: SortOrder
  }

  export type Preguntas_video_cuestionarioListRelationFilter = {
    every?: preguntas_video_cuestionarioWhereInput
    some?: preguntas_video_cuestionarioWhereInput
    none?: preguntas_video_cuestionarioWhereInput
  }

  export type preguntas_video_cuestionarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type parte_video_cuestionarioCountOrderByAggregateInput = {
    id_parte_video_cuestionario?: SortOrder
    id_video_cuestionario?: SortOrder
    url_video?: SortOrder
    indice?: SortOrder
    nombre?: SortOrder
  }

  export type parte_video_cuestionarioAvgOrderByAggregateInput = {
    id_parte_video_cuestionario?: SortOrder
    id_video_cuestionario?: SortOrder
    indice?: SortOrder
  }

  export type parte_video_cuestionarioMaxOrderByAggregateInput = {
    id_parte_video_cuestionario?: SortOrder
    id_video_cuestionario?: SortOrder
    url_video?: SortOrder
    indice?: SortOrder
    nombre?: SortOrder
  }

  export type parte_video_cuestionarioMinOrderByAggregateInput = {
    id_parte_video_cuestionario?: SortOrder
    id_video_cuestionario?: SortOrder
    url_video?: SortOrder
    indice?: SortOrder
    nombre?: SortOrder
  }

  export type parte_video_cuestionarioSumOrderByAggregateInput = {
    id_parte_video_cuestionario?: SortOrder
    id_video_cuestionario?: SortOrder
    indice?: SortOrder
  }

  export type PalabraRelationFilter = {
    is?: palabraWhereInput
    isNot?: palabraWhereInput
  }

  export type palabras_video_cuestionarioId_video_cuestionarioId_palabraCompoundUniqueInput = {
    id_video_cuestionario: number
    id_palabra: number
  }

  export type palabras_video_cuestionarioCountOrderByAggregateInput = {
    id_video_cuestionario?: SortOrder
    id_palabra?: SortOrder
  }

  export type palabras_video_cuestionarioAvgOrderByAggregateInput = {
    id_video_cuestionario?: SortOrder
    id_palabra?: SortOrder
  }

  export type palabras_video_cuestionarioMaxOrderByAggregateInput = {
    id_video_cuestionario?: SortOrder
    id_palabra?: SortOrder
  }

  export type palabras_video_cuestionarioMinOrderByAggregateInput = {
    id_video_cuestionario?: SortOrder
    id_palabra?: SortOrder
  }

  export type palabras_video_cuestionarioSumOrderByAggregateInput = {
    id_video_cuestionario?: SortOrder
    id_palabra?: SortOrder
  }

  export type Parte_video_cuestionarioRelationFilter = {
    is?: parte_video_cuestionarioWhereInput
    isNot?: parte_video_cuestionarioWhereInput
  }

  export type Respuestas_video_cuestionarioListRelationFilter = {
    every?: respuestas_video_cuestionarioWhereInput
    some?: respuestas_video_cuestionarioWhereInput
    none?: respuestas_video_cuestionarioWhereInput
  }

  export type respuestas_video_cuestionarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type preguntas_video_cuestionarioCountOrderByAggregateInput = {
    id_preguntas_video_cuestionario?: SortOrder
    id_parte_video_cuestionario?: SortOrder
    pregunta?: SortOrder
  }

  export type preguntas_video_cuestionarioAvgOrderByAggregateInput = {
    id_preguntas_video_cuestionario?: SortOrder
    id_parte_video_cuestionario?: SortOrder
  }

  export type preguntas_video_cuestionarioMaxOrderByAggregateInput = {
    id_preguntas_video_cuestionario?: SortOrder
    id_parte_video_cuestionario?: SortOrder
    pregunta?: SortOrder
  }

  export type preguntas_video_cuestionarioMinOrderByAggregateInput = {
    id_preguntas_video_cuestionario?: SortOrder
    id_parte_video_cuestionario?: SortOrder
    pregunta?: SortOrder
  }

  export type preguntas_video_cuestionarioSumOrderByAggregateInput = {
    id_preguntas_video_cuestionario?: SortOrder
    id_parte_video_cuestionario?: SortOrder
  }

  export type Preguntas_video_cuestionarioRelationFilter = {
    is?: preguntas_video_cuestionarioWhereInput
    isNot?: preguntas_video_cuestionarioWhereInput
  }

  export type respuestas_video_cuestionarioCountOrderByAggregateInput = {
    id_respuestas_video_cuestionario?: SortOrder
    id_preguntas_video_cuestionario?: SortOrder
    respuesta?: SortOrder
    es_correcta?: SortOrder
  }

  export type respuestas_video_cuestionarioAvgOrderByAggregateInput = {
    id_respuestas_video_cuestionario?: SortOrder
    id_preguntas_video_cuestionario?: SortOrder
  }

  export type respuestas_video_cuestionarioMaxOrderByAggregateInput = {
    id_respuestas_video_cuestionario?: SortOrder
    id_preguntas_video_cuestionario?: SortOrder
    respuesta?: SortOrder
    es_correcta?: SortOrder
  }

  export type respuestas_video_cuestionarioMinOrderByAggregateInput = {
    id_respuestas_video_cuestionario?: SortOrder
    id_preguntas_video_cuestionario?: SortOrder
    respuesta?: SortOrder
    es_correcta?: SortOrder
  }

  export type respuestas_video_cuestionarioSumOrderByAggregateInput = {
    id_respuestas_video_cuestionario?: SortOrder
    id_preguntas_video_cuestionario?: SortOrder
  }

  export type detalles_quizId_quizId_palabraCompoundUniqueInput = {
    id_quiz: number
    id_palabra: number
  }

  export type detalles_quizCountOrderByAggregateInput = {
    id_quiz?: SortOrder
    id_palabra?: SortOrder
  }

  export type detalles_quizAvgOrderByAggregateInput = {
    id_quiz?: SortOrder
    id_palabra?: SortOrder
  }

  export type detalles_quizMaxOrderByAggregateInput = {
    id_quiz?: SortOrder
    id_palabra?: SortOrder
  }

  export type detalles_quizMinOrderByAggregateInput = {
    id_quiz?: SortOrder
    id_palabra?: SortOrder
  }

  export type detalles_quizSumOrderByAggregateInput = {
    id_quiz?: SortOrder
    id_palabra?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type video_cuestionarioCreateNestedManyWithoutIslaInput = {
    create?: XOR<video_cuestionarioCreateWithoutIslaInput, video_cuestionarioUncheckedCreateWithoutIslaInput> | video_cuestionarioCreateWithoutIslaInput[] | video_cuestionarioUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: video_cuestionarioCreateOrConnectWithoutIslaInput | video_cuestionarioCreateOrConnectWithoutIslaInput[]
    createMany?: video_cuestionarioCreateManyIslaInputEnvelope
    connect?: video_cuestionarioWhereUniqueInput | video_cuestionarioWhereUniqueInput[]
  }

  export type quizCreateNestedManyWithoutIslaInput = {
    create?: XOR<quizCreateWithoutIslaInput, quizUncheckedCreateWithoutIslaInput> | quizCreateWithoutIslaInput[] | quizUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: quizCreateOrConnectWithoutIslaInput | quizCreateOrConnectWithoutIslaInput[]
    createMany?: quizCreateManyIslaInputEnvelope
    connect?: quizWhereUniqueInput | quizWhereUniqueInput[]
  }

  export type modelo_comlCreateNestedManyWithoutIslaInput = {
    create?: XOR<modelo_comlCreateWithoutIslaInput, modelo_comlUncheckedCreateWithoutIslaInput> | modelo_comlCreateWithoutIslaInput[] | modelo_comlUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: modelo_comlCreateOrConnectWithoutIslaInput | modelo_comlCreateOrConnectWithoutIslaInput[]
    createMany?: modelo_comlCreateManyIslaInputEnvelope
    connect?: modelo_comlWhereUniqueInput | modelo_comlWhereUniqueInput[]
  }

  export type treasure_huntCreateNestedManyWithoutIslaInput = {
    create?: XOR<treasure_huntCreateWithoutIslaInput, treasure_huntUncheckedCreateWithoutIslaInput> | treasure_huntCreateWithoutIslaInput[] | treasure_huntUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: treasure_huntCreateOrConnectWithoutIslaInput | treasure_huntCreateOrConnectWithoutIslaInput[]
    createMany?: treasure_huntCreateManyIslaInputEnvelope
    connect?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
  }

  export type nivelCreateNestedManyWithoutIslaInput = {
    create?: XOR<nivelCreateWithoutIslaInput, nivelUncheckedCreateWithoutIslaInput> | nivelCreateWithoutIslaInput[] | nivelUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutIslaInput | nivelCreateOrConnectWithoutIslaInput[]
    createMany?: nivelCreateManyIslaInputEnvelope
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
  }

  export type palabraCreateNestedManyWithoutIslaInput = {
    create?: XOR<palabraCreateWithoutIslaInput, palabraUncheckedCreateWithoutIslaInput> | palabraCreateWithoutIslaInput[] | palabraUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: palabraCreateOrConnectWithoutIslaInput | palabraCreateOrConnectWithoutIslaInput[]
    createMany?: palabraCreateManyIslaInputEnvelope
    connect?: palabraWhereUniqueInput | palabraWhereUniqueInput[]
  }

  export type video_cuestionarioUncheckedCreateNestedManyWithoutIslaInput = {
    create?: XOR<video_cuestionarioCreateWithoutIslaInput, video_cuestionarioUncheckedCreateWithoutIslaInput> | video_cuestionarioCreateWithoutIslaInput[] | video_cuestionarioUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: video_cuestionarioCreateOrConnectWithoutIslaInput | video_cuestionarioCreateOrConnectWithoutIslaInput[]
    createMany?: video_cuestionarioCreateManyIslaInputEnvelope
    connect?: video_cuestionarioWhereUniqueInput | video_cuestionarioWhereUniqueInput[]
  }

  export type quizUncheckedCreateNestedManyWithoutIslaInput = {
    create?: XOR<quizCreateWithoutIslaInput, quizUncheckedCreateWithoutIslaInput> | quizCreateWithoutIslaInput[] | quizUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: quizCreateOrConnectWithoutIslaInput | quizCreateOrConnectWithoutIslaInput[]
    createMany?: quizCreateManyIslaInputEnvelope
    connect?: quizWhereUniqueInput | quizWhereUniqueInput[]
  }

  export type modelo_comlUncheckedCreateNestedManyWithoutIslaInput = {
    create?: XOR<modelo_comlCreateWithoutIslaInput, modelo_comlUncheckedCreateWithoutIslaInput> | modelo_comlCreateWithoutIslaInput[] | modelo_comlUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: modelo_comlCreateOrConnectWithoutIslaInput | modelo_comlCreateOrConnectWithoutIslaInput[]
    createMany?: modelo_comlCreateManyIslaInputEnvelope
    connect?: modelo_comlWhereUniqueInput | modelo_comlWhereUniqueInput[]
  }

  export type treasure_huntUncheckedCreateNestedManyWithoutIslaInput = {
    create?: XOR<treasure_huntCreateWithoutIslaInput, treasure_huntUncheckedCreateWithoutIslaInput> | treasure_huntCreateWithoutIslaInput[] | treasure_huntUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: treasure_huntCreateOrConnectWithoutIslaInput | treasure_huntCreateOrConnectWithoutIslaInput[]
    createMany?: treasure_huntCreateManyIslaInputEnvelope
    connect?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
  }

  export type nivelUncheckedCreateNestedManyWithoutIslaInput = {
    create?: XOR<nivelCreateWithoutIslaInput, nivelUncheckedCreateWithoutIslaInput> | nivelCreateWithoutIslaInput[] | nivelUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutIslaInput | nivelCreateOrConnectWithoutIslaInput[]
    createMany?: nivelCreateManyIslaInputEnvelope
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
  }

  export type palabraUncheckedCreateNestedManyWithoutIslaInput = {
    create?: XOR<palabraCreateWithoutIslaInput, palabraUncheckedCreateWithoutIslaInput> | palabraCreateWithoutIslaInput[] | palabraUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: palabraCreateOrConnectWithoutIslaInput | palabraCreateOrConnectWithoutIslaInput[]
    createMany?: palabraCreateManyIslaInputEnvelope
    connect?: palabraWhereUniqueInput | palabraWhereUniqueInput[]
  }

  export type NullableBytesFieldUpdateOperationsInput = {
    set?: Buffer | null
  }

  export type video_cuestionarioUpdateManyWithoutIslaNestedInput = {
    create?: XOR<video_cuestionarioCreateWithoutIslaInput, video_cuestionarioUncheckedCreateWithoutIslaInput> | video_cuestionarioCreateWithoutIslaInput[] | video_cuestionarioUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: video_cuestionarioCreateOrConnectWithoutIslaInput | video_cuestionarioCreateOrConnectWithoutIslaInput[]
    upsert?: video_cuestionarioUpsertWithWhereUniqueWithoutIslaInput | video_cuestionarioUpsertWithWhereUniqueWithoutIslaInput[]
    createMany?: video_cuestionarioCreateManyIslaInputEnvelope
    set?: video_cuestionarioWhereUniqueInput | video_cuestionarioWhereUniqueInput[]
    disconnect?: video_cuestionarioWhereUniqueInput | video_cuestionarioWhereUniqueInput[]
    delete?: video_cuestionarioWhereUniqueInput | video_cuestionarioWhereUniqueInput[]
    connect?: video_cuestionarioWhereUniqueInput | video_cuestionarioWhereUniqueInput[]
    update?: video_cuestionarioUpdateWithWhereUniqueWithoutIslaInput | video_cuestionarioUpdateWithWhereUniqueWithoutIslaInput[]
    updateMany?: video_cuestionarioUpdateManyWithWhereWithoutIslaInput | video_cuestionarioUpdateManyWithWhereWithoutIslaInput[]
    deleteMany?: video_cuestionarioScalarWhereInput | video_cuestionarioScalarWhereInput[]
  }

  export type quizUpdateManyWithoutIslaNestedInput = {
    create?: XOR<quizCreateWithoutIslaInput, quizUncheckedCreateWithoutIslaInput> | quizCreateWithoutIslaInput[] | quizUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: quizCreateOrConnectWithoutIslaInput | quizCreateOrConnectWithoutIslaInput[]
    upsert?: quizUpsertWithWhereUniqueWithoutIslaInput | quizUpsertWithWhereUniqueWithoutIslaInput[]
    createMany?: quizCreateManyIslaInputEnvelope
    set?: quizWhereUniqueInput | quizWhereUniqueInput[]
    disconnect?: quizWhereUniqueInput | quizWhereUniqueInput[]
    delete?: quizWhereUniqueInput | quizWhereUniqueInput[]
    connect?: quizWhereUniqueInput | quizWhereUniqueInput[]
    update?: quizUpdateWithWhereUniqueWithoutIslaInput | quizUpdateWithWhereUniqueWithoutIslaInput[]
    updateMany?: quizUpdateManyWithWhereWithoutIslaInput | quizUpdateManyWithWhereWithoutIslaInput[]
    deleteMany?: quizScalarWhereInput | quizScalarWhereInput[]
  }

  export type modelo_comlUpdateManyWithoutIslaNestedInput = {
    create?: XOR<modelo_comlCreateWithoutIslaInput, modelo_comlUncheckedCreateWithoutIslaInput> | modelo_comlCreateWithoutIslaInput[] | modelo_comlUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: modelo_comlCreateOrConnectWithoutIslaInput | modelo_comlCreateOrConnectWithoutIslaInput[]
    upsert?: modelo_comlUpsertWithWhereUniqueWithoutIslaInput | modelo_comlUpsertWithWhereUniqueWithoutIslaInput[]
    createMany?: modelo_comlCreateManyIslaInputEnvelope
    set?: modelo_comlWhereUniqueInput | modelo_comlWhereUniqueInput[]
    disconnect?: modelo_comlWhereUniqueInput | modelo_comlWhereUniqueInput[]
    delete?: modelo_comlWhereUniqueInput | modelo_comlWhereUniqueInput[]
    connect?: modelo_comlWhereUniqueInput | modelo_comlWhereUniqueInput[]
    update?: modelo_comlUpdateWithWhereUniqueWithoutIslaInput | modelo_comlUpdateWithWhereUniqueWithoutIslaInput[]
    updateMany?: modelo_comlUpdateManyWithWhereWithoutIslaInput | modelo_comlUpdateManyWithWhereWithoutIslaInput[]
    deleteMany?: modelo_comlScalarWhereInput | modelo_comlScalarWhereInput[]
  }

  export type treasure_huntUpdateManyWithoutIslaNestedInput = {
    create?: XOR<treasure_huntCreateWithoutIslaInput, treasure_huntUncheckedCreateWithoutIslaInput> | treasure_huntCreateWithoutIslaInput[] | treasure_huntUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: treasure_huntCreateOrConnectWithoutIslaInput | treasure_huntCreateOrConnectWithoutIslaInput[]
    upsert?: treasure_huntUpsertWithWhereUniqueWithoutIslaInput | treasure_huntUpsertWithWhereUniqueWithoutIslaInput[]
    createMany?: treasure_huntCreateManyIslaInputEnvelope
    set?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    disconnect?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    delete?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    connect?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    update?: treasure_huntUpdateWithWhereUniqueWithoutIslaInput | treasure_huntUpdateWithWhereUniqueWithoutIslaInput[]
    updateMany?: treasure_huntUpdateManyWithWhereWithoutIslaInput | treasure_huntUpdateManyWithWhereWithoutIslaInput[]
    deleteMany?: treasure_huntScalarWhereInput | treasure_huntScalarWhereInput[]
  }

  export type nivelUpdateManyWithoutIslaNestedInput = {
    create?: XOR<nivelCreateWithoutIslaInput, nivelUncheckedCreateWithoutIslaInput> | nivelCreateWithoutIslaInput[] | nivelUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutIslaInput | nivelCreateOrConnectWithoutIslaInput[]
    upsert?: nivelUpsertWithWhereUniqueWithoutIslaInput | nivelUpsertWithWhereUniqueWithoutIslaInput[]
    createMany?: nivelCreateManyIslaInputEnvelope
    set?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    disconnect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    delete?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    update?: nivelUpdateWithWhereUniqueWithoutIslaInput | nivelUpdateWithWhereUniqueWithoutIslaInput[]
    updateMany?: nivelUpdateManyWithWhereWithoutIslaInput | nivelUpdateManyWithWhereWithoutIslaInput[]
    deleteMany?: nivelScalarWhereInput | nivelScalarWhereInput[]
  }

  export type palabraUpdateManyWithoutIslaNestedInput = {
    create?: XOR<palabraCreateWithoutIslaInput, palabraUncheckedCreateWithoutIslaInput> | palabraCreateWithoutIslaInput[] | palabraUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: palabraCreateOrConnectWithoutIslaInput | palabraCreateOrConnectWithoutIslaInput[]
    upsert?: palabraUpsertWithWhereUniqueWithoutIslaInput | palabraUpsertWithWhereUniqueWithoutIslaInput[]
    createMany?: palabraCreateManyIslaInputEnvelope
    set?: palabraWhereUniqueInput | palabraWhereUniqueInput[]
    disconnect?: palabraWhereUniqueInput | palabraWhereUniqueInput[]
    delete?: palabraWhereUniqueInput | palabraWhereUniqueInput[]
    connect?: palabraWhereUniqueInput | palabraWhereUniqueInput[]
    update?: palabraUpdateWithWhereUniqueWithoutIslaInput | palabraUpdateWithWhereUniqueWithoutIslaInput[]
    updateMany?: palabraUpdateManyWithWhereWithoutIslaInput | palabraUpdateManyWithWhereWithoutIslaInput[]
    deleteMany?: palabraScalarWhereInput | palabraScalarWhereInput[]
  }

  export type video_cuestionarioUncheckedUpdateManyWithoutIslaNestedInput = {
    create?: XOR<video_cuestionarioCreateWithoutIslaInput, video_cuestionarioUncheckedCreateWithoutIslaInput> | video_cuestionarioCreateWithoutIslaInput[] | video_cuestionarioUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: video_cuestionarioCreateOrConnectWithoutIslaInput | video_cuestionarioCreateOrConnectWithoutIslaInput[]
    upsert?: video_cuestionarioUpsertWithWhereUniqueWithoutIslaInput | video_cuestionarioUpsertWithWhereUniqueWithoutIslaInput[]
    createMany?: video_cuestionarioCreateManyIslaInputEnvelope
    set?: video_cuestionarioWhereUniqueInput | video_cuestionarioWhereUniqueInput[]
    disconnect?: video_cuestionarioWhereUniqueInput | video_cuestionarioWhereUniqueInput[]
    delete?: video_cuestionarioWhereUniqueInput | video_cuestionarioWhereUniqueInput[]
    connect?: video_cuestionarioWhereUniqueInput | video_cuestionarioWhereUniqueInput[]
    update?: video_cuestionarioUpdateWithWhereUniqueWithoutIslaInput | video_cuestionarioUpdateWithWhereUniqueWithoutIslaInput[]
    updateMany?: video_cuestionarioUpdateManyWithWhereWithoutIslaInput | video_cuestionarioUpdateManyWithWhereWithoutIslaInput[]
    deleteMany?: video_cuestionarioScalarWhereInput | video_cuestionarioScalarWhereInput[]
  }

  export type quizUncheckedUpdateManyWithoutIslaNestedInput = {
    create?: XOR<quizCreateWithoutIslaInput, quizUncheckedCreateWithoutIslaInput> | quizCreateWithoutIslaInput[] | quizUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: quizCreateOrConnectWithoutIslaInput | quizCreateOrConnectWithoutIslaInput[]
    upsert?: quizUpsertWithWhereUniqueWithoutIslaInput | quizUpsertWithWhereUniqueWithoutIslaInput[]
    createMany?: quizCreateManyIslaInputEnvelope
    set?: quizWhereUniqueInput | quizWhereUniqueInput[]
    disconnect?: quizWhereUniqueInput | quizWhereUniqueInput[]
    delete?: quizWhereUniqueInput | quizWhereUniqueInput[]
    connect?: quizWhereUniqueInput | quizWhereUniqueInput[]
    update?: quizUpdateWithWhereUniqueWithoutIslaInput | quizUpdateWithWhereUniqueWithoutIslaInput[]
    updateMany?: quizUpdateManyWithWhereWithoutIslaInput | quizUpdateManyWithWhereWithoutIslaInput[]
    deleteMany?: quizScalarWhereInput | quizScalarWhereInput[]
  }

  export type modelo_comlUncheckedUpdateManyWithoutIslaNestedInput = {
    create?: XOR<modelo_comlCreateWithoutIslaInput, modelo_comlUncheckedCreateWithoutIslaInput> | modelo_comlCreateWithoutIslaInput[] | modelo_comlUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: modelo_comlCreateOrConnectWithoutIslaInput | modelo_comlCreateOrConnectWithoutIslaInput[]
    upsert?: modelo_comlUpsertWithWhereUniqueWithoutIslaInput | modelo_comlUpsertWithWhereUniqueWithoutIslaInput[]
    createMany?: modelo_comlCreateManyIslaInputEnvelope
    set?: modelo_comlWhereUniqueInput | modelo_comlWhereUniqueInput[]
    disconnect?: modelo_comlWhereUniqueInput | modelo_comlWhereUniqueInput[]
    delete?: modelo_comlWhereUniqueInput | modelo_comlWhereUniqueInput[]
    connect?: modelo_comlWhereUniqueInput | modelo_comlWhereUniqueInput[]
    update?: modelo_comlUpdateWithWhereUniqueWithoutIslaInput | modelo_comlUpdateWithWhereUniqueWithoutIslaInput[]
    updateMany?: modelo_comlUpdateManyWithWhereWithoutIslaInput | modelo_comlUpdateManyWithWhereWithoutIslaInput[]
    deleteMany?: modelo_comlScalarWhereInput | modelo_comlScalarWhereInput[]
  }

  export type treasure_huntUncheckedUpdateManyWithoutIslaNestedInput = {
    create?: XOR<treasure_huntCreateWithoutIslaInput, treasure_huntUncheckedCreateWithoutIslaInput> | treasure_huntCreateWithoutIslaInput[] | treasure_huntUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: treasure_huntCreateOrConnectWithoutIslaInput | treasure_huntCreateOrConnectWithoutIslaInput[]
    upsert?: treasure_huntUpsertWithWhereUniqueWithoutIslaInput | treasure_huntUpsertWithWhereUniqueWithoutIslaInput[]
    createMany?: treasure_huntCreateManyIslaInputEnvelope
    set?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    disconnect?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    delete?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    connect?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    update?: treasure_huntUpdateWithWhereUniqueWithoutIslaInput | treasure_huntUpdateWithWhereUniqueWithoutIslaInput[]
    updateMany?: treasure_huntUpdateManyWithWhereWithoutIslaInput | treasure_huntUpdateManyWithWhereWithoutIslaInput[]
    deleteMany?: treasure_huntScalarWhereInput | treasure_huntScalarWhereInput[]
  }

  export type nivelUncheckedUpdateManyWithoutIslaNestedInput = {
    create?: XOR<nivelCreateWithoutIslaInput, nivelUncheckedCreateWithoutIslaInput> | nivelCreateWithoutIslaInput[] | nivelUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutIslaInput | nivelCreateOrConnectWithoutIslaInput[]
    upsert?: nivelUpsertWithWhereUniqueWithoutIslaInput | nivelUpsertWithWhereUniqueWithoutIslaInput[]
    createMany?: nivelCreateManyIslaInputEnvelope
    set?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    disconnect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    delete?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    update?: nivelUpdateWithWhereUniqueWithoutIslaInput | nivelUpdateWithWhereUniqueWithoutIslaInput[]
    updateMany?: nivelUpdateManyWithWhereWithoutIslaInput | nivelUpdateManyWithWhereWithoutIslaInput[]
    deleteMany?: nivelScalarWhereInput | nivelScalarWhereInput[]
  }

  export type palabraUncheckedUpdateManyWithoutIslaNestedInput = {
    create?: XOR<palabraCreateWithoutIslaInput, palabraUncheckedCreateWithoutIslaInput> | palabraCreateWithoutIslaInput[] | palabraUncheckedCreateWithoutIslaInput[]
    connectOrCreate?: palabraCreateOrConnectWithoutIslaInput | palabraCreateOrConnectWithoutIslaInput[]
    upsert?: palabraUpsertWithWhereUniqueWithoutIslaInput | palabraUpsertWithWhereUniqueWithoutIslaInput[]
    createMany?: palabraCreateManyIslaInputEnvelope
    set?: palabraWhereUniqueInput | palabraWhereUniqueInput[]
    disconnect?: palabraWhereUniqueInput | palabraWhereUniqueInput[]
    delete?: palabraWhereUniqueInput | palabraWhereUniqueInput[]
    connect?: palabraWhereUniqueInput | palabraWhereUniqueInput[]
    update?: palabraUpdateWithWhereUniqueWithoutIslaInput | palabraUpdateWithWhereUniqueWithoutIslaInput[]
    updateMany?: palabraUpdateManyWithWhereWithoutIslaInput | palabraUpdateManyWithWhereWithoutIslaInput[]
    deleteMany?: palabraScalarWhereInput | palabraScalarWhereInput[]
  }

  export type islaCreateNestedOneWithoutVideo_cuestionarioInput = {
    create?: XOR<islaCreateWithoutVideo_cuestionarioInput, islaUncheckedCreateWithoutVideo_cuestionarioInput>
    connectOrCreate?: islaCreateOrConnectWithoutVideo_cuestionarioInput
    connect?: islaWhereUniqueInput
  }

  export type nivelCreateNestedManyWithoutVideo_cuestionarioInput = {
    create?: XOR<nivelCreateWithoutVideo_cuestionarioInput, nivelUncheckedCreateWithoutVideo_cuestionarioInput> | nivelCreateWithoutVideo_cuestionarioInput[] | nivelUncheckedCreateWithoutVideo_cuestionarioInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutVideo_cuestionarioInput | nivelCreateOrConnectWithoutVideo_cuestionarioInput[]
    createMany?: nivelCreateManyVideo_cuestionarioInputEnvelope
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
  }

  export type parte_video_cuestionarioCreateNestedManyWithoutVideo_cuestionarioInput = {
    create?: XOR<parte_video_cuestionarioCreateWithoutVideo_cuestionarioInput, parte_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput> | parte_video_cuestionarioCreateWithoutVideo_cuestionarioInput[] | parte_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput[]
    connectOrCreate?: parte_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput | parte_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput[]
    createMany?: parte_video_cuestionarioCreateManyVideo_cuestionarioInputEnvelope
    connect?: parte_video_cuestionarioWhereUniqueInput | parte_video_cuestionarioWhereUniqueInput[]
  }

  export type palabras_video_cuestionarioCreateNestedManyWithoutVideo_cuestionarioInput = {
    create?: XOR<palabras_video_cuestionarioCreateWithoutVideo_cuestionarioInput, palabras_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput> | palabras_video_cuestionarioCreateWithoutVideo_cuestionarioInput[] | palabras_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput[]
    connectOrCreate?: palabras_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput | palabras_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput[]
    createMany?: palabras_video_cuestionarioCreateManyVideo_cuestionarioInputEnvelope
    connect?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
  }

  export type nivelUncheckedCreateNestedManyWithoutVideo_cuestionarioInput = {
    create?: XOR<nivelCreateWithoutVideo_cuestionarioInput, nivelUncheckedCreateWithoutVideo_cuestionarioInput> | nivelCreateWithoutVideo_cuestionarioInput[] | nivelUncheckedCreateWithoutVideo_cuestionarioInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutVideo_cuestionarioInput | nivelCreateOrConnectWithoutVideo_cuestionarioInput[]
    createMany?: nivelCreateManyVideo_cuestionarioInputEnvelope
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
  }

  export type parte_video_cuestionarioUncheckedCreateNestedManyWithoutVideo_cuestionarioInput = {
    create?: XOR<parte_video_cuestionarioCreateWithoutVideo_cuestionarioInput, parte_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput> | parte_video_cuestionarioCreateWithoutVideo_cuestionarioInput[] | parte_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput[]
    connectOrCreate?: parte_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput | parte_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput[]
    createMany?: parte_video_cuestionarioCreateManyVideo_cuestionarioInputEnvelope
    connect?: parte_video_cuestionarioWhereUniqueInput | parte_video_cuestionarioWhereUniqueInput[]
  }

  export type palabras_video_cuestionarioUncheckedCreateNestedManyWithoutVideo_cuestionarioInput = {
    create?: XOR<palabras_video_cuestionarioCreateWithoutVideo_cuestionarioInput, palabras_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput> | palabras_video_cuestionarioCreateWithoutVideo_cuestionarioInput[] | palabras_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput[]
    connectOrCreate?: palabras_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput | palabras_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput[]
    createMany?: palabras_video_cuestionarioCreateManyVideo_cuestionarioInputEnvelope
    connect?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
  }

  export type islaUpdateOneRequiredWithoutVideo_cuestionarioNestedInput = {
    create?: XOR<islaCreateWithoutVideo_cuestionarioInput, islaUncheckedCreateWithoutVideo_cuestionarioInput>
    connectOrCreate?: islaCreateOrConnectWithoutVideo_cuestionarioInput
    upsert?: islaUpsertWithoutVideo_cuestionarioInput
    connect?: islaWhereUniqueInput
    update?: XOR<XOR<islaUpdateToOneWithWhereWithoutVideo_cuestionarioInput, islaUpdateWithoutVideo_cuestionarioInput>, islaUncheckedUpdateWithoutVideo_cuestionarioInput>
  }

  export type nivelUpdateManyWithoutVideo_cuestionarioNestedInput = {
    create?: XOR<nivelCreateWithoutVideo_cuestionarioInput, nivelUncheckedCreateWithoutVideo_cuestionarioInput> | nivelCreateWithoutVideo_cuestionarioInput[] | nivelUncheckedCreateWithoutVideo_cuestionarioInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutVideo_cuestionarioInput | nivelCreateOrConnectWithoutVideo_cuestionarioInput[]
    upsert?: nivelUpsertWithWhereUniqueWithoutVideo_cuestionarioInput | nivelUpsertWithWhereUniqueWithoutVideo_cuestionarioInput[]
    createMany?: nivelCreateManyVideo_cuestionarioInputEnvelope
    set?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    disconnect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    delete?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    update?: nivelUpdateWithWhereUniqueWithoutVideo_cuestionarioInput | nivelUpdateWithWhereUniqueWithoutVideo_cuestionarioInput[]
    updateMany?: nivelUpdateManyWithWhereWithoutVideo_cuestionarioInput | nivelUpdateManyWithWhereWithoutVideo_cuestionarioInput[]
    deleteMany?: nivelScalarWhereInput | nivelScalarWhereInput[]
  }

  export type parte_video_cuestionarioUpdateManyWithoutVideo_cuestionarioNestedInput = {
    create?: XOR<parte_video_cuestionarioCreateWithoutVideo_cuestionarioInput, parte_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput> | parte_video_cuestionarioCreateWithoutVideo_cuestionarioInput[] | parte_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput[]
    connectOrCreate?: parte_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput | parte_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput[]
    upsert?: parte_video_cuestionarioUpsertWithWhereUniqueWithoutVideo_cuestionarioInput | parte_video_cuestionarioUpsertWithWhereUniqueWithoutVideo_cuestionarioInput[]
    createMany?: parte_video_cuestionarioCreateManyVideo_cuestionarioInputEnvelope
    set?: parte_video_cuestionarioWhereUniqueInput | parte_video_cuestionarioWhereUniqueInput[]
    disconnect?: parte_video_cuestionarioWhereUniqueInput | parte_video_cuestionarioWhereUniqueInput[]
    delete?: parte_video_cuestionarioWhereUniqueInput | parte_video_cuestionarioWhereUniqueInput[]
    connect?: parte_video_cuestionarioWhereUniqueInput | parte_video_cuestionarioWhereUniqueInput[]
    update?: parte_video_cuestionarioUpdateWithWhereUniqueWithoutVideo_cuestionarioInput | parte_video_cuestionarioUpdateWithWhereUniqueWithoutVideo_cuestionarioInput[]
    updateMany?: parte_video_cuestionarioUpdateManyWithWhereWithoutVideo_cuestionarioInput | parte_video_cuestionarioUpdateManyWithWhereWithoutVideo_cuestionarioInput[]
    deleteMany?: parte_video_cuestionarioScalarWhereInput | parte_video_cuestionarioScalarWhereInput[]
  }

  export type palabras_video_cuestionarioUpdateManyWithoutVideo_cuestionarioNestedInput = {
    create?: XOR<palabras_video_cuestionarioCreateWithoutVideo_cuestionarioInput, palabras_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput> | palabras_video_cuestionarioCreateWithoutVideo_cuestionarioInput[] | palabras_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput[]
    connectOrCreate?: palabras_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput | palabras_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput[]
    upsert?: palabras_video_cuestionarioUpsertWithWhereUniqueWithoutVideo_cuestionarioInput | palabras_video_cuestionarioUpsertWithWhereUniqueWithoutVideo_cuestionarioInput[]
    createMany?: palabras_video_cuestionarioCreateManyVideo_cuestionarioInputEnvelope
    set?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    disconnect?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    delete?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    connect?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    update?: palabras_video_cuestionarioUpdateWithWhereUniqueWithoutVideo_cuestionarioInput | palabras_video_cuestionarioUpdateWithWhereUniqueWithoutVideo_cuestionarioInput[]
    updateMany?: palabras_video_cuestionarioUpdateManyWithWhereWithoutVideo_cuestionarioInput | palabras_video_cuestionarioUpdateManyWithWhereWithoutVideo_cuestionarioInput[]
    deleteMany?: palabras_video_cuestionarioScalarWhereInput | palabras_video_cuestionarioScalarWhereInput[]
  }

  export type nivelUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput = {
    create?: XOR<nivelCreateWithoutVideo_cuestionarioInput, nivelUncheckedCreateWithoutVideo_cuestionarioInput> | nivelCreateWithoutVideo_cuestionarioInput[] | nivelUncheckedCreateWithoutVideo_cuestionarioInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutVideo_cuestionarioInput | nivelCreateOrConnectWithoutVideo_cuestionarioInput[]
    upsert?: nivelUpsertWithWhereUniqueWithoutVideo_cuestionarioInput | nivelUpsertWithWhereUniqueWithoutVideo_cuestionarioInput[]
    createMany?: nivelCreateManyVideo_cuestionarioInputEnvelope
    set?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    disconnect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    delete?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    update?: nivelUpdateWithWhereUniqueWithoutVideo_cuestionarioInput | nivelUpdateWithWhereUniqueWithoutVideo_cuestionarioInput[]
    updateMany?: nivelUpdateManyWithWhereWithoutVideo_cuestionarioInput | nivelUpdateManyWithWhereWithoutVideo_cuestionarioInput[]
    deleteMany?: nivelScalarWhereInput | nivelScalarWhereInput[]
  }

  export type parte_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput = {
    create?: XOR<parte_video_cuestionarioCreateWithoutVideo_cuestionarioInput, parte_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput> | parte_video_cuestionarioCreateWithoutVideo_cuestionarioInput[] | parte_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput[]
    connectOrCreate?: parte_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput | parte_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput[]
    upsert?: parte_video_cuestionarioUpsertWithWhereUniqueWithoutVideo_cuestionarioInput | parte_video_cuestionarioUpsertWithWhereUniqueWithoutVideo_cuestionarioInput[]
    createMany?: parte_video_cuestionarioCreateManyVideo_cuestionarioInputEnvelope
    set?: parte_video_cuestionarioWhereUniqueInput | parte_video_cuestionarioWhereUniqueInput[]
    disconnect?: parte_video_cuestionarioWhereUniqueInput | parte_video_cuestionarioWhereUniqueInput[]
    delete?: parte_video_cuestionarioWhereUniqueInput | parte_video_cuestionarioWhereUniqueInput[]
    connect?: parte_video_cuestionarioWhereUniqueInput | parte_video_cuestionarioWhereUniqueInput[]
    update?: parte_video_cuestionarioUpdateWithWhereUniqueWithoutVideo_cuestionarioInput | parte_video_cuestionarioUpdateWithWhereUniqueWithoutVideo_cuestionarioInput[]
    updateMany?: parte_video_cuestionarioUpdateManyWithWhereWithoutVideo_cuestionarioInput | parte_video_cuestionarioUpdateManyWithWhereWithoutVideo_cuestionarioInput[]
    deleteMany?: parte_video_cuestionarioScalarWhereInput | parte_video_cuestionarioScalarWhereInput[]
  }

  export type palabras_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput = {
    create?: XOR<palabras_video_cuestionarioCreateWithoutVideo_cuestionarioInput, palabras_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput> | palabras_video_cuestionarioCreateWithoutVideo_cuestionarioInput[] | palabras_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput[]
    connectOrCreate?: palabras_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput | palabras_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput[]
    upsert?: palabras_video_cuestionarioUpsertWithWhereUniqueWithoutVideo_cuestionarioInput | palabras_video_cuestionarioUpsertWithWhereUniqueWithoutVideo_cuestionarioInput[]
    createMany?: palabras_video_cuestionarioCreateManyVideo_cuestionarioInputEnvelope
    set?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    disconnect?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    delete?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    connect?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    update?: palabras_video_cuestionarioUpdateWithWhereUniqueWithoutVideo_cuestionarioInput | palabras_video_cuestionarioUpdateWithWhereUniqueWithoutVideo_cuestionarioInput[]
    updateMany?: palabras_video_cuestionarioUpdateManyWithWhereWithoutVideo_cuestionarioInput | palabras_video_cuestionarioUpdateManyWithWhereWithoutVideo_cuestionarioInput[]
    deleteMany?: palabras_video_cuestionarioScalarWhereInput | palabras_video_cuestionarioScalarWhereInput[]
  }

  export type islaCreateNestedOneWithoutQuizInput = {
    create?: XOR<islaCreateWithoutQuizInput, islaUncheckedCreateWithoutQuizInput>
    connectOrCreate?: islaCreateOrConnectWithoutQuizInput
    connect?: islaWhereUniqueInput
  }

  export type nivelCreateNestedManyWithoutQuizInput = {
    create?: XOR<nivelCreateWithoutQuizInput, nivelUncheckedCreateWithoutQuizInput> | nivelCreateWithoutQuizInput[] | nivelUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutQuizInput | nivelCreateOrConnectWithoutQuizInput[]
    createMany?: nivelCreateManyQuizInputEnvelope
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
  }

  export type detalles_quizCreateNestedManyWithoutQuizInput = {
    create?: XOR<detalles_quizCreateWithoutQuizInput, detalles_quizUncheckedCreateWithoutQuizInput> | detalles_quizCreateWithoutQuizInput[] | detalles_quizUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: detalles_quizCreateOrConnectWithoutQuizInput | detalles_quizCreateOrConnectWithoutQuizInput[]
    createMany?: detalles_quizCreateManyQuizInputEnvelope
    connect?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
  }

  export type nivelUncheckedCreateNestedManyWithoutQuizInput = {
    create?: XOR<nivelCreateWithoutQuizInput, nivelUncheckedCreateWithoutQuizInput> | nivelCreateWithoutQuizInput[] | nivelUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutQuizInput | nivelCreateOrConnectWithoutQuizInput[]
    createMany?: nivelCreateManyQuizInputEnvelope
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
  }

  export type detalles_quizUncheckedCreateNestedManyWithoutQuizInput = {
    create?: XOR<detalles_quizCreateWithoutQuizInput, detalles_quizUncheckedCreateWithoutQuizInput> | detalles_quizCreateWithoutQuizInput[] | detalles_quizUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: detalles_quizCreateOrConnectWithoutQuizInput | detalles_quizCreateOrConnectWithoutQuizInput[]
    createMany?: detalles_quizCreateManyQuizInputEnvelope
    connect?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
  }

  export type islaUpdateOneRequiredWithoutQuizNestedInput = {
    create?: XOR<islaCreateWithoutQuizInput, islaUncheckedCreateWithoutQuizInput>
    connectOrCreate?: islaCreateOrConnectWithoutQuizInput
    upsert?: islaUpsertWithoutQuizInput
    connect?: islaWhereUniqueInput
    update?: XOR<XOR<islaUpdateToOneWithWhereWithoutQuizInput, islaUpdateWithoutQuizInput>, islaUncheckedUpdateWithoutQuizInput>
  }

  export type nivelUpdateManyWithoutQuizNestedInput = {
    create?: XOR<nivelCreateWithoutQuizInput, nivelUncheckedCreateWithoutQuizInput> | nivelCreateWithoutQuizInput[] | nivelUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutQuizInput | nivelCreateOrConnectWithoutQuizInput[]
    upsert?: nivelUpsertWithWhereUniqueWithoutQuizInput | nivelUpsertWithWhereUniqueWithoutQuizInput[]
    createMany?: nivelCreateManyQuizInputEnvelope
    set?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    disconnect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    delete?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    update?: nivelUpdateWithWhereUniqueWithoutQuizInput | nivelUpdateWithWhereUniqueWithoutQuizInput[]
    updateMany?: nivelUpdateManyWithWhereWithoutQuizInput | nivelUpdateManyWithWhereWithoutQuizInput[]
    deleteMany?: nivelScalarWhereInput | nivelScalarWhereInput[]
  }

  export type detalles_quizUpdateManyWithoutQuizNestedInput = {
    create?: XOR<detalles_quizCreateWithoutQuizInput, detalles_quizUncheckedCreateWithoutQuizInput> | detalles_quizCreateWithoutQuizInput[] | detalles_quizUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: detalles_quizCreateOrConnectWithoutQuizInput | detalles_quizCreateOrConnectWithoutQuizInput[]
    upsert?: detalles_quizUpsertWithWhereUniqueWithoutQuizInput | detalles_quizUpsertWithWhereUniqueWithoutQuizInput[]
    createMany?: detalles_quizCreateManyQuizInputEnvelope
    set?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    disconnect?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    delete?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    connect?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    update?: detalles_quizUpdateWithWhereUniqueWithoutQuizInput | detalles_quizUpdateWithWhereUniqueWithoutQuizInput[]
    updateMany?: detalles_quizUpdateManyWithWhereWithoutQuizInput | detalles_quizUpdateManyWithWhereWithoutQuizInput[]
    deleteMany?: detalles_quizScalarWhereInput | detalles_quizScalarWhereInput[]
  }

  export type nivelUncheckedUpdateManyWithoutQuizNestedInput = {
    create?: XOR<nivelCreateWithoutQuizInput, nivelUncheckedCreateWithoutQuizInput> | nivelCreateWithoutQuizInput[] | nivelUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutQuizInput | nivelCreateOrConnectWithoutQuizInput[]
    upsert?: nivelUpsertWithWhereUniqueWithoutQuizInput | nivelUpsertWithWhereUniqueWithoutQuizInput[]
    createMany?: nivelCreateManyQuizInputEnvelope
    set?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    disconnect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    delete?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    update?: nivelUpdateWithWhereUniqueWithoutQuizInput | nivelUpdateWithWhereUniqueWithoutQuizInput[]
    updateMany?: nivelUpdateManyWithWhereWithoutQuizInput | nivelUpdateManyWithWhereWithoutQuizInput[]
    deleteMany?: nivelScalarWhereInput | nivelScalarWhereInput[]
  }

  export type detalles_quizUncheckedUpdateManyWithoutQuizNestedInput = {
    create?: XOR<detalles_quizCreateWithoutQuizInput, detalles_quizUncheckedCreateWithoutQuizInput> | detalles_quizCreateWithoutQuizInput[] | detalles_quizUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: detalles_quizCreateOrConnectWithoutQuizInput | detalles_quizCreateOrConnectWithoutQuizInput[]
    upsert?: detalles_quizUpsertWithWhereUniqueWithoutQuizInput | detalles_quizUpsertWithWhereUniqueWithoutQuizInput[]
    createMany?: detalles_quizCreateManyQuizInputEnvelope
    set?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    disconnect?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    delete?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    connect?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    update?: detalles_quizUpdateWithWhereUniqueWithoutQuizInput | detalles_quizUpdateWithWhereUniqueWithoutQuizInput[]
    updateMany?: detalles_quizUpdateManyWithWhereWithoutQuizInput | detalles_quizUpdateManyWithWhereWithoutQuizInput[]
    deleteMany?: detalles_quizScalarWhereInput | detalles_quizScalarWhereInput[]
  }

  export type islaCreateNestedOneWithoutModelo_comlInput = {
    create?: XOR<islaCreateWithoutModelo_comlInput, islaUncheckedCreateWithoutModelo_comlInput>
    connectOrCreate?: islaCreateOrConnectWithoutModelo_comlInput
    connect?: islaWhereUniqueInput
  }

  export type treasure_huntCreateNestedManyWithoutModelo_comlInput = {
    create?: XOR<treasure_huntCreateWithoutModelo_comlInput, treasure_huntUncheckedCreateWithoutModelo_comlInput> | treasure_huntCreateWithoutModelo_comlInput[] | treasure_huntUncheckedCreateWithoutModelo_comlInput[]
    connectOrCreate?: treasure_huntCreateOrConnectWithoutModelo_comlInput | treasure_huntCreateOrConnectWithoutModelo_comlInput[]
    createMany?: treasure_huntCreateManyModelo_comlInputEnvelope
    connect?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
  }

  export type treasure_huntUncheckedCreateNestedManyWithoutModelo_comlInput = {
    create?: XOR<treasure_huntCreateWithoutModelo_comlInput, treasure_huntUncheckedCreateWithoutModelo_comlInput> | treasure_huntCreateWithoutModelo_comlInput[] | treasure_huntUncheckedCreateWithoutModelo_comlInput[]
    connectOrCreate?: treasure_huntCreateOrConnectWithoutModelo_comlInput | treasure_huntCreateOrConnectWithoutModelo_comlInput[]
    createMany?: treasure_huntCreateManyModelo_comlInputEnvelope
    connect?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
  }

  export type islaUpdateOneRequiredWithoutModelo_comlNestedInput = {
    create?: XOR<islaCreateWithoutModelo_comlInput, islaUncheckedCreateWithoutModelo_comlInput>
    connectOrCreate?: islaCreateOrConnectWithoutModelo_comlInput
    upsert?: islaUpsertWithoutModelo_comlInput
    connect?: islaWhereUniqueInput
    update?: XOR<XOR<islaUpdateToOneWithWhereWithoutModelo_comlInput, islaUpdateWithoutModelo_comlInput>, islaUncheckedUpdateWithoutModelo_comlInput>
  }

  export type treasure_huntUpdateManyWithoutModelo_comlNestedInput = {
    create?: XOR<treasure_huntCreateWithoutModelo_comlInput, treasure_huntUncheckedCreateWithoutModelo_comlInput> | treasure_huntCreateWithoutModelo_comlInput[] | treasure_huntUncheckedCreateWithoutModelo_comlInput[]
    connectOrCreate?: treasure_huntCreateOrConnectWithoutModelo_comlInput | treasure_huntCreateOrConnectWithoutModelo_comlInput[]
    upsert?: treasure_huntUpsertWithWhereUniqueWithoutModelo_comlInput | treasure_huntUpsertWithWhereUniqueWithoutModelo_comlInput[]
    createMany?: treasure_huntCreateManyModelo_comlInputEnvelope
    set?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    disconnect?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    delete?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    connect?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    update?: treasure_huntUpdateWithWhereUniqueWithoutModelo_comlInput | treasure_huntUpdateWithWhereUniqueWithoutModelo_comlInput[]
    updateMany?: treasure_huntUpdateManyWithWhereWithoutModelo_comlInput | treasure_huntUpdateManyWithWhereWithoutModelo_comlInput[]
    deleteMany?: treasure_huntScalarWhereInput | treasure_huntScalarWhereInput[]
  }

  export type treasure_huntUncheckedUpdateManyWithoutModelo_comlNestedInput = {
    create?: XOR<treasure_huntCreateWithoutModelo_comlInput, treasure_huntUncheckedCreateWithoutModelo_comlInput> | treasure_huntCreateWithoutModelo_comlInput[] | treasure_huntUncheckedCreateWithoutModelo_comlInput[]
    connectOrCreate?: treasure_huntCreateOrConnectWithoutModelo_comlInput | treasure_huntCreateOrConnectWithoutModelo_comlInput[]
    upsert?: treasure_huntUpsertWithWhereUniqueWithoutModelo_comlInput | treasure_huntUpsertWithWhereUniqueWithoutModelo_comlInput[]
    createMany?: treasure_huntCreateManyModelo_comlInputEnvelope
    set?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    disconnect?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    delete?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    connect?: treasure_huntWhereUniqueInput | treasure_huntWhereUniqueInput[]
    update?: treasure_huntUpdateWithWhereUniqueWithoutModelo_comlInput | treasure_huntUpdateWithWhereUniqueWithoutModelo_comlInput[]
    updateMany?: treasure_huntUpdateManyWithWhereWithoutModelo_comlInput | treasure_huntUpdateManyWithWhereWithoutModelo_comlInput[]
    deleteMany?: treasure_huntScalarWhereInput | treasure_huntScalarWhereInput[]
  }

  export type islaCreateNestedOneWithoutTreasure_huntInput = {
    create?: XOR<islaCreateWithoutTreasure_huntInput, islaUncheckedCreateWithoutTreasure_huntInput>
    connectOrCreate?: islaCreateOrConnectWithoutTreasure_huntInput
    connect?: islaWhereUniqueInput
  }

  export type modelo_comlCreateNestedOneWithoutTreasure_huntInput = {
    create?: XOR<modelo_comlCreateWithoutTreasure_huntInput, modelo_comlUncheckedCreateWithoutTreasure_huntInput>
    connectOrCreate?: modelo_comlCreateOrConnectWithoutTreasure_huntInput
    connect?: modelo_comlWhereUniqueInput
  }

  export type nivelCreateNestedManyWithoutTreasure_huntInput = {
    create?: XOR<nivelCreateWithoutTreasure_huntInput, nivelUncheckedCreateWithoutTreasure_huntInput> | nivelCreateWithoutTreasure_huntInput[] | nivelUncheckedCreateWithoutTreasure_huntInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutTreasure_huntInput | nivelCreateOrConnectWithoutTreasure_huntInput[]
    createMany?: nivelCreateManyTreasure_huntInputEnvelope
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
  }

  export type nivelUncheckedCreateNestedManyWithoutTreasure_huntInput = {
    create?: XOR<nivelCreateWithoutTreasure_huntInput, nivelUncheckedCreateWithoutTreasure_huntInput> | nivelCreateWithoutTreasure_huntInput[] | nivelUncheckedCreateWithoutTreasure_huntInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutTreasure_huntInput | nivelCreateOrConnectWithoutTreasure_huntInput[]
    createMany?: nivelCreateManyTreasure_huntInputEnvelope
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
  }

  export type islaUpdateOneRequiredWithoutTreasure_huntNestedInput = {
    create?: XOR<islaCreateWithoutTreasure_huntInput, islaUncheckedCreateWithoutTreasure_huntInput>
    connectOrCreate?: islaCreateOrConnectWithoutTreasure_huntInput
    upsert?: islaUpsertWithoutTreasure_huntInput
    connect?: islaWhereUniqueInput
    update?: XOR<XOR<islaUpdateToOneWithWhereWithoutTreasure_huntInput, islaUpdateWithoutTreasure_huntInput>, islaUncheckedUpdateWithoutTreasure_huntInput>
  }

  export type modelo_comlUpdateOneRequiredWithoutTreasure_huntNestedInput = {
    create?: XOR<modelo_comlCreateWithoutTreasure_huntInput, modelo_comlUncheckedCreateWithoutTreasure_huntInput>
    connectOrCreate?: modelo_comlCreateOrConnectWithoutTreasure_huntInput
    upsert?: modelo_comlUpsertWithoutTreasure_huntInput
    connect?: modelo_comlWhereUniqueInput
    update?: XOR<XOR<modelo_comlUpdateToOneWithWhereWithoutTreasure_huntInput, modelo_comlUpdateWithoutTreasure_huntInput>, modelo_comlUncheckedUpdateWithoutTreasure_huntInput>
  }

  export type nivelUpdateManyWithoutTreasure_huntNestedInput = {
    create?: XOR<nivelCreateWithoutTreasure_huntInput, nivelUncheckedCreateWithoutTreasure_huntInput> | nivelCreateWithoutTreasure_huntInput[] | nivelUncheckedCreateWithoutTreasure_huntInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutTreasure_huntInput | nivelCreateOrConnectWithoutTreasure_huntInput[]
    upsert?: nivelUpsertWithWhereUniqueWithoutTreasure_huntInput | nivelUpsertWithWhereUniqueWithoutTreasure_huntInput[]
    createMany?: nivelCreateManyTreasure_huntInputEnvelope
    set?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    disconnect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    delete?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    update?: nivelUpdateWithWhereUniqueWithoutTreasure_huntInput | nivelUpdateWithWhereUniqueWithoutTreasure_huntInput[]
    updateMany?: nivelUpdateManyWithWhereWithoutTreasure_huntInput | nivelUpdateManyWithWhereWithoutTreasure_huntInput[]
    deleteMany?: nivelScalarWhereInput | nivelScalarWhereInput[]
  }

  export type nivelUncheckedUpdateManyWithoutTreasure_huntNestedInput = {
    create?: XOR<nivelCreateWithoutTreasure_huntInput, nivelUncheckedCreateWithoutTreasure_huntInput> | nivelCreateWithoutTreasure_huntInput[] | nivelUncheckedCreateWithoutTreasure_huntInput[]
    connectOrCreate?: nivelCreateOrConnectWithoutTreasure_huntInput | nivelCreateOrConnectWithoutTreasure_huntInput[]
    upsert?: nivelUpsertWithWhereUniqueWithoutTreasure_huntInput | nivelUpsertWithWhereUniqueWithoutTreasure_huntInput[]
    createMany?: nivelCreateManyTreasure_huntInputEnvelope
    set?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    disconnect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    delete?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    connect?: nivelWhereUniqueInput | nivelWhereUniqueInput[]
    update?: nivelUpdateWithWhereUniqueWithoutTreasure_huntInput | nivelUpdateWithWhereUniqueWithoutTreasure_huntInput[]
    updateMany?: nivelUpdateManyWithWhereWithoutTreasure_huntInput | nivelUpdateManyWithWhereWithoutTreasure_huntInput[]
    deleteMany?: nivelScalarWhereInput | nivelScalarWhereInput[]
  }

  export type islaCreateNestedOneWithoutNivelInput = {
    create?: XOR<islaCreateWithoutNivelInput, islaUncheckedCreateWithoutNivelInput>
    connectOrCreate?: islaCreateOrConnectWithoutNivelInput
    connect?: islaWhereUniqueInput
  }

  export type video_cuestionarioCreateNestedOneWithoutNivelInput = {
    create?: XOR<video_cuestionarioCreateWithoutNivelInput, video_cuestionarioUncheckedCreateWithoutNivelInput>
    connectOrCreate?: video_cuestionarioCreateOrConnectWithoutNivelInput
    connect?: video_cuestionarioWhereUniqueInput
  }

  export type quizCreateNestedOneWithoutNivelInput = {
    create?: XOR<quizCreateWithoutNivelInput, quizUncheckedCreateWithoutNivelInput>
    connectOrCreate?: quizCreateOrConnectWithoutNivelInput
    connect?: quizWhereUniqueInput
  }

  export type treasure_huntCreateNestedOneWithoutNivelInput = {
    create?: XOR<treasure_huntCreateWithoutNivelInput, treasure_huntUncheckedCreateWithoutNivelInput>
    connectOrCreate?: treasure_huntCreateOrConnectWithoutNivelInput
    connect?: treasure_huntWhereUniqueInput
  }

  export type islaUpdateOneRequiredWithoutNivelNestedInput = {
    create?: XOR<islaCreateWithoutNivelInput, islaUncheckedCreateWithoutNivelInput>
    connectOrCreate?: islaCreateOrConnectWithoutNivelInput
    upsert?: islaUpsertWithoutNivelInput
    connect?: islaWhereUniqueInput
    update?: XOR<XOR<islaUpdateToOneWithWhereWithoutNivelInput, islaUpdateWithoutNivelInput>, islaUncheckedUpdateWithoutNivelInput>
  }

  export type video_cuestionarioUpdateOneRequiredWithoutNivelNestedInput = {
    create?: XOR<video_cuestionarioCreateWithoutNivelInput, video_cuestionarioUncheckedCreateWithoutNivelInput>
    connectOrCreate?: video_cuestionarioCreateOrConnectWithoutNivelInput
    upsert?: video_cuestionarioUpsertWithoutNivelInput
    connect?: video_cuestionarioWhereUniqueInput
    update?: XOR<XOR<video_cuestionarioUpdateToOneWithWhereWithoutNivelInput, video_cuestionarioUpdateWithoutNivelInput>, video_cuestionarioUncheckedUpdateWithoutNivelInput>
  }

  export type quizUpdateOneRequiredWithoutNivelNestedInput = {
    create?: XOR<quizCreateWithoutNivelInput, quizUncheckedCreateWithoutNivelInput>
    connectOrCreate?: quizCreateOrConnectWithoutNivelInput
    upsert?: quizUpsertWithoutNivelInput
    connect?: quizWhereUniqueInput
    update?: XOR<XOR<quizUpdateToOneWithWhereWithoutNivelInput, quizUpdateWithoutNivelInput>, quizUncheckedUpdateWithoutNivelInput>
  }

  export type treasure_huntUpdateOneRequiredWithoutNivelNestedInput = {
    create?: XOR<treasure_huntCreateWithoutNivelInput, treasure_huntUncheckedCreateWithoutNivelInput>
    connectOrCreate?: treasure_huntCreateOrConnectWithoutNivelInput
    upsert?: treasure_huntUpsertWithoutNivelInput
    connect?: treasure_huntWhereUniqueInput
    update?: XOR<XOR<treasure_huntUpdateToOneWithWhereWithoutNivelInput, treasure_huntUpdateWithoutNivelInput>, treasure_huntUncheckedUpdateWithoutNivelInput>
  }

  export type islaCreateNestedOneWithoutPalabraInput = {
    create?: XOR<islaCreateWithoutPalabraInput, islaUncheckedCreateWithoutPalabraInput>
    connectOrCreate?: islaCreateOrConnectWithoutPalabraInput
    connect?: islaWhereUniqueInput
  }

  export type detalles_quizCreateNestedManyWithoutPalabraInput = {
    create?: XOR<detalles_quizCreateWithoutPalabraInput, detalles_quizUncheckedCreateWithoutPalabraInput> | detalles_quizCreateWithoutPalabraInput[] | detalles_quizUncheckedCreateWithoutPalabraInput[]
    connectOrCreate?: detalles_quizCreateOrConnectWithoutPalabraInput | detalles_quizCreateOrConnectWithoutPalabraInput[]
    createMany?: detalles_quizCreateManyPalabraInputEnvelope
    connect?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
  }

  export type palabras_video_cuestionarioCreateNestedManyWithoutPalabraInput = {
    create?: XOR<palabras_video_cuestionarioCreateWithoutPalabraInput, palabras_video_cuestionarioUncheckedCreateWithoutPalabraInput> | palabras_video_cuestionarioCreateWithoutPalabraInput[] | palabras_video_cuestionarioUncheckedCreateWithoutPalabraInput[]
    connectOrCreate?: palabras_video_cuestionarioCreateOrConnectWithoutPalabraInput | palabras_video_cuestionarioCreateOrConnectWithoutPalabraInput[]
    createMany?: palabras_video_cuestionarioCreateManyPalabraInputEnvelope
    connect?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
  }

  export type detalles_quizUncheckedCreateNestedManyWithoutPalabraInput = {
    create?: XOR<detalles_quizCreateWithoutPalabraInput, detalles_quizUncheckedCreateWithoutPalabraInput> | detalles_quizCreateWithoutPalabraInput[] | detalles_quizUncheckedCreateWithoutPalabraInput[]
    connectOrCreate?: detalles_quizCreateOrConnectWithoutPalabraInput | detalles_quizCreateOrConnectWithoutPalabraInput[]
    createMany?: detalles_quizCreateManyPalabraInputEnvelope
    connect?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
  }

  export type palabras_video_cuestionarioUncheckedCreateNestedManyWithoutPalabraInput = {
    create?: XOR<palabras_video_cuestionarioCreateWithoutPalabraInput, palabras_video_cuestionarioUncheckedCreateWithoutPalabraInput> | palabras_video_cuestionarioCreateWithoutPalabraInput[] | palabras_video_cuestionarioUncheckedCreateWithoutPalabraInput[]
    connectOrCreate?: palabras_video_cuestionarioCreateOrConnectWithoutPalabraInput | palabras_video_cuestionarioCreateOrConnectWithoutPalabraInput[]
    createMany?: palabras_video_cuestionarioCreateManyPalabraInputEnvelope
    connect?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
  }

  export type islaUpdateOneRequiredWithoutPalabraNestedInput = {
    create?: XOR<islaCreateWithoutPalabraInput, islaUncheckedCreateWithoutPalabraInput>
    connectOrCreate?: islaCreateOrConnectWithoutPalabraInput
    upsert?: islaUpsertWithoutPalabraInput
    connect?: islaWhereUniqueInput
    update?: XOR<XOR<islaUpdateToOneWithWhereWithoutPalabraInput, islaUpdateWithoutPalabraInput>, islaUncheckedUpdateWithoutPalabraInput>
  }

  export type detalles_quizUpdateManyWithoutPalabraNestedInput = {
    create?: XOR<detalles_quizCreateWithoutPalabraInput, detalles_quizUncheckedCreateWithoutPalabraInput> | detalles_quizCreateWithoutPalabraInput[] | detalles_quizUncheckedCreateWithoutPalabraInput[]
    connectOrCreate?: detalles_quizCreateOrConnectWithoutPalabraInput | detalles_quizCreateOrConnectWithoutPalabraInput[]
    upsert?: detalles_quizUpsertWithWhereUniqueWithoutPalabraInput | detalles_quizUpsertWithWhereUniqueWithoutPalabraInput[]
    createMany?: detalles_quizCreateManyPalabraInputEnvelope
    set?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    disconnect?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    delete?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    connect?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    update?: detalles_quizUpdateWithWhereUniqueWithoutPalabraInput | detalles_quizUpdateWithWhereUniqueWithoutPalabraInput[]
    updateMany?: detalles_quizUpdateManyWithWhereWithoutPalabraInput | detalles_quizUpdateManyWithWhereWithoutPalabraInput[]
    deleteMany?: detalles_quizScalarWhereInput | detalles_quizScalarWhereInput[]
  }

  export type palabras_video_cuestionarioUpdateManyWithoutPalabraNestedInput = {
    create?: XOR<palabras_video_cuestionarioCreateWithoutPalabraInput, palabras_video_cuestionarioUncheckedCreateWithoutPalabraInput> | palabras_video_cuestionarioCreateWithoutPalabraInput[] | palabras_video_cuestionarioUncheckedCreateWithoutPalabraInput[]
    connectOrCreate?: palabras_video_cuestionarioCreateOrConnectWithoutPalabraInput | palabras_video_cuestionarioCreateOrConnectWithoutPalabraInput[]
    upsert?: palabras_video_cuestionarioUpsertWithWhereUniqueWithoutPalabraInput | palabras_video_cuestionarioUpsertWithWhereUniqueWithoutPalabraInput[]
    createMany?: palabras_video_cuestionarioCreateManyPalabraInputEnvelope
    set?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    disconnect?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    delete?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    connect?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    update?: palabras_video_cuestionarioUpdateWithWhereUniqueWithoutPalabraInput | palabras_video_cuestionarioUpdateWithWhereUniqueWithoutPalabraInput[]
    updateMany?: palabras_video_cuestionarioUpdateManyWithWhereWithoutPalabraInput | palabras_video_cuestionarioUpdateManyWithWhereWithoutPalabraInput[]
    deleteMany?: palabras_video_cuestionarioScalarWhereInput | palabras_video_cuestionarioScalarWhereInput[]
  }

  export type detalles_quizUncheckedUpdateManyWithoutPalabraNestedInput = {
    create?: XOR<detalles_quizCreateWithoutPalabraInput, detalles_quizUncheckedCreateWithoutPalabraInput> | detalles_quizCreateWithoutPalabraInput[] | detalles_quizUncheckedCreateWithoutPalabraInput[]
    connectOrCreate?: detalles_quizCreateOrConnectWithoutPalabraInput | detalles_quizCreateOrConnectWithoutPalabraInput[]
    upsert?: detalles_quizUpsertWithWhereUniqueWithoutPalabraInput | detalles_quizUpsertWithWhereUniqueWithoutPalabraInput[]
    createMany?: detalles_quizCreateManyPalabraInputEnvelope
    set?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    disconnect?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    delete?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    connect?: detalles_quizWhereUniqueInput | detalles_quizWhereUniqueInput[]
    update?: detalles_quizUpdateWithWhereUniqueWithoutPalabraInput | detalles_quizUpdateWithWhereUniqueWithoutPalabraInput[]
    updateMany?: detalles_quizUpdateManyWithWhereWithoutPalabraInput | detalles_quizUpdateManyWithWhereWithoutPalabraInput[]
    deleteMany?: detalles_quizScalarWhereInput | detalles_quizScalarWhereInput[]
  }

  export type palabras_video_cuestionarioUncheckedUpdateManyWithoutPalabraNestedInput = {
    create?: XOR<palabras_video_cuestionarioCreateWithoutPalabraInput, palabras_video_cuestionarioUncheckedCreateWithoutPalabraInput> | palabras_video_cuestionarioCreateWithoutPalabraInput[] | palabras_video_cuestionarioUncheckedCreateWithoutPalabraInput[]
    connectOrCreate?: palabras_video_cuestionarioCreateOrConnectWithoutPalabraInput | palabras_video_cuestionarioCreateOrConnectWithoutPalabraInput[]
    upsert?: palabras_video_cuestionarioUpsertWithWhereUniqueWithoutPalabraInput | palabras_video_cuestionarioUpsertWithWhereUniqueWithoutPalabraInput[]
    createMany?: palabras_video_cuestionarioCreateManyPalabraInputEnvelope
    set?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    disconnect?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    delete?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    connect?: palabras_video_cuestionarioWhereUniqueInput | palabras_video_cuestionarioWhereUniqueInput[]
    update?: palabras_video_cuestionarioUpdateWithWhereUniqueWithoutPalabraInput | palabras_video_cuestionarioUpdateWithWhereUniqueWithoutPalabraInput[]
    updateMany?: palabras_video_cuestionarioUpdateManyWithWhereWithoutPalabraInput | palabras_video_cuestionarioUpdateManyWithWhereWithoutPalabraInput[]
    deleteMany?: palabras_video_cuestionarioScalarWhereInput | palabras_video_cuestionarioScalarWhereInput[]
  }

  export type video_cuestionarioCreateNestedOneWithoutParte_video_cuestionarioInput = {
    create?: XOR<video_cuestionarioCreateWithoutParte_video_cuestionarioInput, video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput>
    connectOrCreate?: video_cuestionarioCreateOrConnectWithoutParte_video_cuestionarioInput
    connect?: video_cuestionarioWhereUniqueInput
  }

  export type preguntas_video_cuestionarioCreateNestedManyWithoutParte_video_cuestionarioInput = {
    create?: XOR<preguntas_video_cuestionarioCreateWithoutParte_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput> | preguntas_video_cuestionarioCreateWithoutParte_video_cuestionarioInput[] | preguntas_video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput[]
    connectOrCreate?: preguntas_video_cuestionarioCreateOrConnectWithoutParte_video_cuestionarioInput | preguntas_video_cuestionarioCreateOrConnectWithoutParte_video_cuestionarioInput[]
    createMany?: preguntas_video_cuestionarioCreateManyParte_video_cuestionarioInputEnvelope
    connect?: preguntas_video_cuestionarioWhereUniqueInput | preguntas_video_cuestionarioWhereUniqueInput[]
  }

  export type preguntas_video_cuestionarioUncheckedCreateNestedManyWithoutParte_video_cuestionarioInput = {
    create?: XOR<preguntas_video_cuestionarioCreateWithoutParte_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput> | preguntas_video_cuestionarioCreateWithoutParte_video_cuestionarioInput[] | preguntas_video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput[]
    connectOrCreate?: preguntas_video_cuestionarioCreateOrConnectWithoutParte_video_cuestionarioInput | preguntas_video_cuestionarioCreateOrConnectWithoutParte_video_cuestionarioInput[]
    createMany?: preguntas_video_cuestionarioCreateManyParte_video_cuestionarioInputEnvelope
    connect?: preguntas_video_cuestionarioWhereUniqueInput | preguntas_video_cuestionarioWhereUniqueInput[]
  }

  export type video_cuestionarioUpdateOneRequiredWithoutParte_video_cuestionarioNestedInput = {
    create?: XOR<video_cuestionarioCreateWithoutParte_video_cuestionarioInput, video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput>
    connectOrCreate?: video_cuestionarioCreateOrConnectWithoutParte_video_cuestionarioInput
    upsert?: video_cuestionarioUpsertWithoutParte_video_cuestionarioInput
    connect?: video_cuestionarioWhereUniqueInput
    update?: XOR<XOR<video_cuestionarioUpdateToOneWithWhereWithoutParte_video_cuestionarioInput, video_cuestionarioUpdateWithoutParte_video_cuestionarioInput>, video_cuestionarioUncheckedUpdateWithoutParte_video_cuestionarioInput>
  }

  export type preguntas_video_cuestionarioUpdateManyWithoutParte_video_cuestionarioNestedInput = {
    create?: XOR<preguntas_video_cuestionarioCreateWithoutParte_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput> | preguntas_video_cuestionarioCreateWithoutParte_video_cuestionarioInput[] | preguntas_video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput[]
    connectOrCreate?: preguntas_video_cuestionarioCreateOrConnectWithoutParte_video_cuestionarioInput | preguntas_video_cuestionarioCreateOrConnectWithoutParte_video_cuestionarioInput[]
    upsert?: preguntas_video_cuestionarioUpsertWithWhereUniqueWithoutParte_video_cuestionarioInput | preguntas_video_cuestionarioUpsertWithWhereUniqueWithoutParte_video_cuestionarioInput[]
    createMany?: preguntas_video_cuestionarioCreateManyParte_video_cuestionarioInputEnvelope
    set?: preguntas_video_cuestionarioWhereUniqueInput | preguntas_video_cuestionarioWhereUniqueInput[]
    disconnect?: preguntas_video_cuestionarioWhereUniqueInput | preguntas_video_cuestionarioWhereUniqueInput[]
    delete?: preguntas_video_cuestionarioWhereUniqueInput | preguntas_video_cuestionarioWhereUniqueInput[]
    connect?: preguntas_video_cuestionarioWhereUniqueInput | preguntas_video_cuestionarioWhereUniqueInput[]
    update?: preguntas_video_cuestionarioUpdateWithWhereUniqueWithoutParte_video_cuestionarioInput | preguntas_video_cuestionarioUpdateWithWhereUniqueWithoutParte_video_cuestionarioInput[]
    updateMany?: preguntas_video_cuestionarioUpdateManyWithWhereWithoutParte_video_cuestionarioInput | preguntas_video_cuestionarioUpdateManyWithWhereWithoutParte_video_cuestionarioInput[]
    deleteMany?: preguntas_video_cuestionarioScalarWhereInput | preguntas_video_cuestionarioScalarWhereInput[]
  }

  export type preguntas_video_cuestionarioUncheckedUpdateManyWithoutParte_video_cuestionarioNestedInput = {
    create?: XOR<preguntas_video_cuestionarioCreateWithoutParte_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput> | preguntas_video_cuestionarioCreateWithoutParte_video_cuestionarioInput[] | preguntas_video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput[]
    connectOrCreate?: preguntas_video_cuestionarioCreateOrConnectWithoutParte_video_cuestionarioInput | preguntas_video_cuestionarioCreateOrConnectWithoutParte_video_cuestionarioInput[]
    upsert?: preguntas_video_cuestionarioUpsertWithWhereUniqueWithoutParte_video_cuestionarioInput | preguntas_video_cuestionarioUpsertWithWhereUniqueWithoutParte_video_cuestionarioInput[]
    createMany?: preguntas_video_cuestionarioCreateManyParte_video_cuestionarioInputEnvelope
    set?: preguntas_video_cuestionarioWhereUniqueInput | preguntas_video_cuestionarioWhereUniqueInput[]
    disconnect?: preguntas_video_cuestionarioWhereUniqueInput | preguntas_video_cuestionarioWhereUniqueInput[]
    delete?: preguntas_video_cuestionarioWhereUniqueInput | preguntas_video_cuestionarioWhereUniqueInput[]
    connect?: preguntas_video_cuestionarioWhereUniqueInput | preguntas_video_cuestionarioWhereUniqueInput[]
    update?: preguntas_video_cuestionarioUpdateWithWhereUniqueWithoutParte_video_cuestionarioInput | preguntas_video_cuestionarioUpdateWithWhereUniqueWithoutParte_video_cuestionarioInput[]
    updateMany?: preguntas_video_cuestionarioUpdateManyWithWhereWithoutParte_video_cuestionarioInput | preguntas_video_cuestionarioUpdateManyWithWhereWithoutParte_video_cuestionarioInput[]
    deleteMany?: preguntas_video_cuestionarioScalarWhereInput | preguntas_video_cuestionarioScalarWhereInput[]
  }

  export type video_cuestionarioCreateNestedOneWithoutPalabras_video_cuestionarioInput = {
    create?: XOR<video_cuestionarioCreateWithoutPalabras_video_cuestionarioInput, video_cuestionarioUncheckedCreateWithoutPalabras_video_cuestionarioInput>
    connectOrCreate?: video_cuestionarioCreateOrConnectWithoutPalabras_video_cuestionarioInput
    connect?: video_cuestionarioWhereUniqueInput
  }

  export type palabraCreateNestedOneWithoutPalabras_video_cuestionarioInput = {
    create?: XOR<palabraCreateWithoutPalabras_video_cuestionarioInput, palabraUncheckedCreateWithoutPalabras_video_cuestionarioInput>
    connectOrCreate?: palabraCreateOrConnectWithoutPalabras_video_cuestionarioInput
    connect?: palabraWhereUniqueInput
  }

  export type video_cuestionarioUpdateOneRequiredWithoutPalabras_video_cuestionarioNestedInput = {
    create?: XOR<video_cuestionarioCreateWithoutPalabras_video_cuestionarioInput, video_cuestionarioUncheckedCreateWithoutPalabras_video_cuestionarioInput>
    connectOrCreate?: video_cuestionarioCreateOrConnectWithoutPalabras_video_cuestionarioInput
    upsert?: video_cuestionarioUpsertWithoutPalabras_video_cuestionarioInput
    connect?: video_cuestionarioWhereUniqueInput
    update?: XOR<XOR<video_cuestionarioUpdateToOneWithWhereWithoutPalabras_video_cuestionarioInput, video_cuestionarioUpdateWithoutPalabras_video_cuestionarioInput>, video_cuestionarioUncheckedUpdateWithoutPalabras_video_cuestionarioInput>
  }

  export type palabraUpdateOneRequiredWithoutPalabras_video_cuestionarioNestedInput = {
    create?: XOR<palabraCreateWithoutPalabras_video_cuestionarioInput, palabraUncheckedCreateWithoutPalabras_video_cuestionarioInput>
    connectOrCreate?: palabraCreateOrConnectWithoutPalabras_video_cuestionarioInput
    upsert?: palabraUpsertWithoutPalabras_video_cuestionarioInput
    connect?: palabraWhereUniqueInput
    update?: XOR<XOR<palabraUpdateToOneWithWhereWithoutPalabras_video_cuestionarioInput, palabraUpdateWithoutPalabras_video_cuestionarioInput>, palabraUncheckedUpdateWithoutPalabras_video_cuestionarioInput>
  }

  export type parte_video_cuestionarioCreateNestedOneWithoutPreguntas_video_cuestionarioInput = {
    create?: XOR<parte_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput, parte_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput>
    connectOrCreate?: parte_video_cuestionarioCreateOrConnectWithoutPreguntas_video_cuestionarioInput
    connect?: parte_video_cuestionarioWhereUniqueInput
  }

  export type respuestas_video_cuestionarioCreateNestedManyWithoutPreguntas_video_cuestionarioInput = {
    create?: XOR<respuestas_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput, respuestas_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput> | respuestas_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput[] | respuestas_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput[]
    connectOrCreate?: respuestas_video_cuestionarioCreateOrConnectWithoutPreguntas_video_cuestionarioInput | respuestas_video_cuestionarioCreateOrConnectWithoutPreguntas_video_cuestionarioInput[]
    createMany?: respuestas_video_cuestionarioCreateManyPreguntas_video_cuestionarioInputEnvelope
    connect?: respuestas_video_cuestionarioWhereUniqueInput | respuestas_video_cuestionarioWhereUniqueInput[]
  }

  export type respuestas_video_cuestionarioUncheckedCreateNestedManyWithoutPreguntas_video_cuestionarioInput = {
    create?: XOR<respuestas_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput, respuestas_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput> | respuestas_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput[] | respuestas_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput[]
    connectOrCreate?: respuestas_video_cuestionarioCreateOrConnectWithoutPreguntas_video_cuestionarioInput | respuestas_video_cuestionarioCreateOrConnectWithoutPreguntas_video_cuestionarioInput[]
    createMany?: respuestas_video_cuestionarioCreateManyPreguntas_video_cuestionarioInputEnvelope
    connect?: respuestas_video_cuestionarioWhereUniqueInput | respuestas_video_cuestionarioWhereUniqueInput[]
  }

  export type parte_video_cuestionarioUpdateOneRequiredWithoutPreguntas_video_cuestionarioNestedInput = {
    create?: XOR<parte_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput, parte_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput>
    connectOrCreate?: parte_video_cuestionarioCreateOrConnectWithoutPreguntas_video_cuestionarioInput
    upsert?: parte_video_cuestionarioUpsertWithoutPreguntas_video_cuestionarioInput
    connect?: parte_video_cuestionarioWhereUniqueInput
    update?: XOR<XOR<parte_video_cuestionarioUpdateToOneWithWhereWithoutPreguntas_video_cuestionarioInput, parte_video_cuestionarioUpdateWithoutPreguntas_video_cuestionarioInput>, parte_video_cuestionarioUncheckedUpdateWithoutPreguntas_video_cuestionarioInput>
  }

  export type respuestas_video_cuestionarioUpdateManyWithoutPreguntas_video_cuestionarioNestedInput = {
    create?: XOR<respuestas_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput, respuestas_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput> | respuestas_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput[] | respuestas_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput[]
    connectOrCreate?: respuestas_video_cuestionarioCreateOrConnectWithoutPreguntas_video_cuestionarioInput | respuestas_video_cuestionarioCreateOrConnectWithoutPreguntas_video_cuestionarioInput[]
    upsert?: respuestas_video_cuestionarioUpsertWithWhereUniqueWithoutPreguntas_video_cuestionarioInput | respuestas_video_cuestionarioUpsertWithWhereUniqueWithoutPreguntas_video_cuestionarioInput[]
    createMany?: respuestas_video_cuestionarioCreateManyPreguntas_video_cuestionarioInputEnvelope
    set?: respuestas_video_cuestionarioWhereUniqueInput | respuestas_video_cuestionarioWhereUniqueInput[]
    disconnect?: respuestas_video_cuestionarioWhereUniqueInput | respuestas_video_cuestionarioWhereUniqueInput[]
    delete?: respuestas_video_cuestionarioWhereUniqueInput | respuestas_video_cuestionarioWhereUniqueInput[]
    connect?: respuestas_video_cuestionarioWhereUniqueInput | respuestas_video_cuestionarioWhereUniqueInput[]
    update?: respuestas_video_cuestionarioUpdateWithWhereUniqueWithoutPreguntas_video_cuestionarioInput | respuestas_video_cuestionarioUpdateWithWhereUniqueWithoutPreguntas_video_cuestionarioInput[]
    updateMany?: respuestas_video_cuestionarioUpdateManyWithWhereWithoutPreguntas_video_cuestionarioInput | respuestas_video_cuestionarioUpdateManyWithWhereWithoutPreguntas_video_cuestionarioInput[]
    deleteMany?: respuestas_video_cuestionarioScalarWhereInput | respuestas_video_cuestionarioScalarWhereInput[]
  }

  export type respuestas_video_cuestionarioUncheckedUpdateManyWithoutPreguntas_video_cuestionarioNestedInput = {
    create?: XOR<respuestas_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput, respuestas_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput> | respuestas_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput[] | respuestas_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput[]
    connectOrCreate?: respuestas_video_cuestionarioCreateOrConnectWithoutPreguntas_video_cuestionarioInput | respuestas_video_cuestionarioCreateOrConnectWithoutPreguntas_video_cuestionarioInput[]
    upsert?: respuestas_video_cuestionarioUpsertWithWhereUniqueWithoutPreguntas_video_cuestionarioInput | respuestas_video_cuestionarioUpsertWithWhereUniqueWithoutPreguntas_video_cuestionarioInput[]
    createMany?: respuestas_video_cuestionarioCreateManyPreguntas_video_cuestionarioInputEnvelope
    set?: respuestas_video_cuestionarioWhereUniqueInput | respuestas_video_cuestionarioWhereUniqueInput[]
    disconnect?: respuestas_video_cuestionarioWhereUniqueInput | respuestas_video_cuestionarioWhereUniqueInput[]
    delete?: respuestas_video_cuestionarioWhereUniqueInput | respuestas_video_cuestionarioWhereUniqueInput[]
    connect?: respuestas_video_cuestionarioWhereUniqueInput | respuestas_video_cuestionarioWhereUniqueInput[]
    update?: respuestas_video_cuestionarioUpdateWithWhereUniqueWithoutPreguntas_video_cuestionarioInput | respuestas_video_cuestionarioUpdateWithWhereUniqueWithoutPreguntas_video_cuestionarioInput[]
    updateMany?: respuestas_video_cuestionarioUpdateManyWithWhereWithoutPreguntas_video_cuestionarioInput | respuestas_video_cuestionarioUpdateManyWithWhereWithoutPreguntas_video_cuestionarioInput[]
    deleteMany?: respuestas_video_cuestionarioScalarWhereInput | respuestas_video_cuestionarioScalarWhereInput[]
  }

  export type preguntas_video_cuestionarioCreateNestedOneWithoutRespuestas_video_cuestionarioInput = {
    create?: XOR<preguntas_video_cuestionarioCreateWithoutRespuestas_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedCreateWithoutRespuestas_video_cuestionarioInput>
    connectOrCreate?: preguntas_video_cuestionarioCreateOrConnectWithoutRespuestas_video_cuestionarioInput
    connect?: preguntas_video_cuestionarioWhereUniqueInput
  }

  export type preguntas_video_cuestionarioUpdateOneRequiredWithoutRespuestas_video_cuestionarioNestedInput = {
    create?: XOR<preguntas_video_cuestionarioCreateWithoutRespuestas_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedCreateWithoutRespuestas_video_cuestionarioInput>
    connectOrCreate?: preguntas_video_cuestionarioCreateOrConnectWithoutRespuestas_video_cuestionarioInput
    upsert?: preguntas_video_cuestionarioUpsertWithoutRespuestas_video_cuestionarioInput
    connect?: preguntas_video_cuestionarioWhereUniqueInput
    update?: XOR<XOR<preguntas_video_cuestionarioUpdateToOneWithWhereWithoutRespuestas_video_cuestionarioInput, preguntas_video_cuestionarioUpdateWithoutRespuestas_video_cuestionarioInput>, preguntas_video_cuestionarioUncheckedUpdateWithoutRespuestas_video_cuestionarioInput>
  }

  export type quizCreateNestedOneWithoutDetalles_quizInput = {
    create?: XOR<quizCreateWithoutDetalles_quizInput, quizUncheckedCreateWithoutDetalles_quizInput>
    connectOrCreate?: quizCreateOrConnectWithoutDetalles_quizInput
    connect?: quizWhereUniqueInput
  }

  export type palabraCreateNestedOneWithoutDetalles_quizInput = {
    create?: XOR<palabraCreateWithoutDetalles_quizInput, palabraUncheckedCreateWithoutDetalles_quizInput>
    connectOrCreate?: palabraCreateOrConnectWithoutDetalles_quizInput
    connect?: palabraWhereUniqueInput
  }

  export type quizUpdateOneRequiredWithoutDetalles_quizNestedInput = {
    create?: XOR<quizCreateWithoutDetalles_quizInput, quizUncheckedCreateWithoutDetalles_quizInput>
    connectOrCreate?: quizCreateOrConnectWithoutDetalles_quizInput
    upsert?: quizUpsertWithoutDetalles_quizInput
    connect?: quizWhereUniqueInput
    update?: XOR<XOR<quizUpdateToOneWithWhereWithoutDetalles_quizInput, quizUpdateWithoutDetalles_quizInput>, quizUncheckedUpdateWithoutDetalles_quizInput>
  }

  export type palabraUpdateOneRequiredWithoutDetalles_quizNestedInput = {
    create?: XOR<palabraCreateWithoutDetalles_quizInput, palabraUncheckedCreateWithoutDetalles_quizInput>
    connectOrCreate?: palabraCreateOrConnectWithoutDetalles_quizInput
    upsert?: palabraUpsertWithoutDetalles_quizInput
    connect?: palabraWhereUniqueInput
    update?: XOR<XOR<palabraUpdateToOneWithWhereWithoutDetalles_quizInput, palabraUpdateWithoutDetalles_quizInput>, palabraUncheckedUpdateWithoutDetalles_quizInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedBytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type NestedBytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type video_cuestionarioCreateWithoutIslaInput = {
    nombre: string
    nivel?: nivelCreateNestedManyWithoutVideo_cuestionarioInput
    parte_video_cuestionario?: parte_video_cuestionarioCreateNestedManyWithoutVideo_cuestionarioInput
    palabras_video_cuestionario?: palabras_video_cuestionarioCreateNestedManyWithoutVideo_cuestionarioInput
  }

  export type video_cuestionarioUncheckedCreateWithoutIslaInput = {
    id_video_cuestionario?: number
    nombre: string
    nivel?: nivelUncheckedCreateNestedManyWithoutVideo_cuestionarioInput
    parte_video_cuestionario?: parte_video_cuestionarioUncheckedCreateNestedManyWithoutVideo_cuestionarioInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedCreateNestedManyWithoutVideo_cuestionarioInput
  }

  export type video_cuestionarioCreateOrConnectWithoutIslaInput = {
    where: video_cuestionarioWhereUniqueInput
    create: XOR<video_cuestionarioCreateWithoutIslaInput, video_cuestionarioUncheckedCreateWithoutIslaInput>
  }

  export type video_cuestionarioCreateManyIslaInputEnvelope = {
    data: video_cuestionarioCreateManyIslaInput | video_cuestionarioCreateManyIslaInput[]
    skipDuplicates?: boolean
  }

  export type quizCreateWithoutIslaInput = {
    nombre: string
    nivel?: nivelCreateNestedManyWithoutQuizInput
    detalles_quiz?: detalles_quizCreateNestedManyWithoutQuizInput
  }

  export type quizUncheckedCreateWithoutIslaInput = {
    id_quiz?: number
    nombre: string
    nivel?: nivelUncheckedCreateNestedManyWithoutQuizInput
    detalles_quiz?: detalles_quizUncheckedCreateNestedManyWithoutQuizInput
  }

  export type quizCreateOrConnectWithoutIslaInput = {
    where: quizWhereUniqueInput
    create: XOR<quizCreateWithoutIslaInput, quizUncheckedCreateWithoutIslaInput>
  }

  export type quizCreateManyIslaInputEnvelope = {
    data: quizCreateManyIslaInput | quizCreateManyIslaInput[]
    skipDuplicates?: boolean
  }

  export type modelo_comlCreateWithoutIslaInput = {
    treasure_hunt?: treasure_huntCreateNestedManyWithoutModelo_comlInput
  }

  export type modelo_comlUncheckedCreateWithoutIslaInput = {
    id_modelo_coml?: number
    treasure_hunt?: treasure_huntUncheckedCreateNestedManyWithoutModelo_comlInput
  }

  export type modelo_comlCreateOrConnectWithoutIslaInput = {
    where: modelo_comlWhereUniqueInput
    create: XOR<modelo_comlCreateWithoutIslaInput, modelo_comlUncheckedCreateWithoutIslaInput>
  }

  export type modelo_comlCreateManyIslaInputEnvelope = {
    data: modelo_comlCreateManyIslaInput | modelo_comlCreateManyIslaInput[]
    skipDuplicates?: boolean
  }

  export type treasure_huntCreateWithoutIslaInput = {
    modelo_coml: modelo_comlCreateNestedOneWithoutTreasure_huntInput
    nivel?: nivelCreateNestedManyWithoutTreasure_huntInput
  }

  export type treasure_huntUncheckedCreateWithoutIslaInput = {
    id_treasure_hunt?: number
    id_modelo_coml: number
    nivel?: nivelUncheckedCreateNestedManyWithoutTreasure_huntInput
  }

  export type treasure_huntCreateOrConnectWithoutIslaInput = {
    where: treasure_huntWhereUniqueInput
    create: XOR<treasure_huntCreateWithoutIslaInput, treasure_huntUncheckedCreateWithoutIslaInput>
  }

  export type treasure_huntCreateManyIslaInputEnvelope = {
    data: treasure_huntCreateManyIslaInput | treasure_huntCreateManyIslaInput[]
    skipDuplicates?: boolean
  }

  export type nivelCreateWithoutIslaInput = {
    video_cuestionario: video_cuestionarioCreateNestedOneWithoutNivelInput
    quiz: quizCreateNestedOneWithoutNivelInput
    treasure_hunt: treasure_huntCreateNestedOneWithoutNivelInput
  }

  export type nivelUncheckedCreateWithoutIslaInput = {
    id_nivel?: number
    id_video_cuestionario: number
    id_quiz: number
    id_treasure_hunt: number
  }

  export type nivelCreateOrConnectWithoutIslaInput = {
    where: nivelWhereUniqueInput
    create: XOR<nivelCreateWithoutIslaInput, nivelUncheckedCreateWithoutIslaInput>
  }

  export type nivelCreateManyIslaInputEnvelope = {
    data: nivelCreateManyIslaInput | nivelCreateManyIslaInput[]
    skipDuplicates?: boolean
  }

  export type palabraCreateWithoutIslaInput = {
    palabra: string
    id_video_segna: string
    url_icono: string
    detalles_quiz?: detalles_quizCreateNestedManyWithoutPalabraInput
    palabras_video_cuestionario?: palabras_video_cuestionarioCreateNestedManyWithoutPalabraInput
  }

  export type palabraUncheckedCreateWithoutIslaInput = {
    id_palabra?: number
    palabra: string
    id_video_segna: string
    url_icono: string
    detalles_quiz?: detalles_quizUncheckedCreateNestedManyWithoutPalabraInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedCreateNestedManyWithoutPalabraInput
  }

  export type palabraCreateOrConnectWithoutIslaInput = {
    where: palabraWhereUniqueInput
    create: XOR<palabraCreateWithoutIslaInput, palabraUncheckedCreateWithoutIslaInput>
  }

  export type palabraCreateManyIslaInputEnvelope = {
    data: palabraCreateManyIslaInput | palabraCreateManyIslaInput[]
    skipDuplicates?: boolean
  }

  export type video_cuestionarioUpsertWithWhereUniqueWithoutIslaInput = {
    where: video_cuestionarioWhereUniqueInput
    update: XOR<video_cuestionarioUpdateWithoutIslaInput, video_cuestionarioUncheckedUpdateWithoutIslaInput>
    create: XOR<video_cuestionarioCreateWithoutIslaInput, video_cuestionarioUncheckedCreateWithoutIslaInput>
  }

  export type video_cuestionarioUpdateWithWhereUniqueWithoutIslaInput = {
    where: video_cuestionarioWhereUniqueInput
    data: XOR<video_cuestionarioUpdateWithoutIslaInput, video_cuestionarioUncheckedUpdateWithoutIslaInput>
  }

  export type video_cuestionarioUpdateManyWithWhereWithoutIslaInput = {
    where: video_cuestionarioScalarWhereInput
    data: XOR<video_cuestionarioUpdateManyMutationInput, video_cuestionarioUncheckedUpdateManyWithoutIslaInput>
  }

  export type video_cuestionarioScalarWhereInput = {
    AND?: video_cuestionarioScalarWhereInput | video_cuestionarioScalarWhereInput[]
    OR?: video_cuestionarioScalarWhereInput[]
    NOT?: video_cuestionarioScalarWhereInput | video_cuestionarioScalarWhereInput[]
    id_video_cuestionario?: IntFilter<"video_cuestionario"> | number
    nombre?: StringFilter<"video_cuestionario"> | string
    id_isla?: IntFilter<"video_cuestionario"> | number
  }

  export type quizUpsertWithWhereUniqueWithoutIslaInput = {
    where: quizWhereUniqueInput
    update: XOR<quizUpdateWithoutIslaInput, quizUncheckedUpdateWithoutIslaInput>
    create: XOR<quizCreateWithoutIslaInput, quizUncheckedCreateWithoutIslaInput>
  }

  export type quizUpdateWithWhereUniqueWithoutIslaInput = {
    where: quizWhereUniqueInput
    data: XOR<quizUpdateWithoutIslaInput, quizUncheckedUpdateWithoutIslaInput>
  }

  export type quizUpdateManyWithWhereWithoutIslaInput = {
    where: quizScalarWhereInput
    data: XOR<quizUpdateManyMutationInput, quizUncheckedUpdateManyWithoutIslaInput>
  }

  export type quizScalarWhereInput = {
    AND?: quizScalarWhereInput | quizScalarWhereInput[]
    OR?: quizScalarWhereInput[]
    NOT?: quizScalarWhereInput | quizScalarWhereInput[]
    id_quiz?: IntFilter<"quiz"> | number
    id_isla?: IntFilter<"quiz"> | number
    nombre?: StringFilter<"quiz"> | string
  }

  export type modelo_comlUpsertWithWhereUniqueWithoutIslaInput = {
    where: modelo_comlWhereUniqueInput
    update: XOR<modelo_comlUpdateWithoutIslaInput, modelo_comlUncheckedUpdateWithoutIslaInput>
    create: XOR<modelo_comlCreateWithoutIslaInput, modelo_comlUncheckedCreateWithoutIslaInput>
  }

  export type modelo_comlUpdateWithWhereUniqueWithoutIslaInput = {
    where: modelo_comlWhereUniqueInput
    data: XOR<modelo_comlUpdateWithoutIslaInput, modelo_comlUncheckedUpdateWithoutIslaInput>
  }

  export type modelo_comlUpdateManyWithWhereWithoutIslaInput = {
    where: modelo_comlScalarWhereInput
    data: XOR<modelo_comlUpdateManyMutationInput, modelo_comlUncheckedUpdateManyWithoutIslaInput>
  }

  export type modelo_comlScalarWhereInput = {
    AND?: modelo_comlScalarWhereInput | modelo_comlScalarWhereInput[]
    OR?: modelo_comlScalarWhereInput[]
    NOT?: modelo_comlScalarWhereInput | modelo_comlScalarWhereInput[]
    id_modelo_coml?: IntFilter<"modelo_coml"> | number
    id_isla?: IntFilter<"modelo_coml"> | number
  }

  export type treasure_huntUpsertWithWhereUniqueWithoutIslaInput = {
    where: treasure_huntWhereUniqueInput
    update: XOR<treasure_huntUpdateWithoutIslaInput, treasure_huntUncheckedUpdateWithoutIslaInput>
    create: XOR<treasure_huntCreateWithoutIslaInput, treasure_huntUncheckedCreateWithoutIslaInput>
  }

  export type treasure_huntUpdateWithWhereUniqueWithoutIslaInput = {
    where: treasure_huntWhereUniqueInput
    data: XOR<treasure_huntUpdateWithoutIslaInput, treasure_huntUncheckedUpdateWithoutIslaInput>
  }

  export type treasure_huntUpdateManyWithWhereWithoutIslaInput = {
    where: treasure_huntScalarWhereInput
    data: XOR<treasure_huntUpdateManyMutationInput, treasure_huntUncheckedUpdateManyWithoutIslaInput>
  }

  export type treasure_huntScalarWhereInput = {
    AND?: treasure_huntScalarWhereInput | treasure_huntScalarWhereInput[]
    OR?: treasure_huntScalarWhereInput[]
    NOT?: treasure_huntScalarWhereInput | treasure_huntScalarWhereInput[]
    id_treasure_hunt?: IntFilter<"treasure_hunt"> | number
    id_isla?: IntFilter<"treasure_hunt"> | number
    id_modelo_coml?: IntFilter<"treasure_hunt"> | number
  }

  export type nivelUpsertWithWhereUniqueWithoutIslaInput = {
    where: nivelWhereUniqueInput
    update: XOR<nivelUpdateWithoutIslaInput, nivelUncheckedUpdateWithoutIslaInput>
    create: XOR<nivelCreateWithoutIslaInput, nivelUncheckedCreateWithoutIslaInput>
  }

  export type nivelUpdateWithWhereUniqueWithoutIslaInput = {
    where: nivelWhereUniqueInput
    data: XOR<nivelUpdateWithoutIslaInput, nivelUncheckedUpdateWithoutIslaInput>
  }

  export type nivelUpdateManyWithWhereWithoutIslaInput = {
    where: nivelScalarWhereInput
    data: XOR<nivelUpdateManyMutationInput, nivelUncheckedUpdateManyWithoutIslaInput>
  }

  export type nivelScalarWhereInput = {
    AND?: nivelScalarWhereInput | nivelScalarWhereInput[]
    OR?: nivelScalarWhereInput[]
    NOT?: nivelScalarWhereInput | nivelScalarWhereInput[]
    id_nivel?: IntFilter<"nivel"> | number
    id_isla?: IntFilter<"nivel"> | number
    id_video_cuestionario?: IntFilter<"nivel"> | number
    id_quiz?: IntFilter<"nivel"> | number
    id_treasure_hunt?: IntFilter<"nivel"> | number
  }

  export type palabraUpsertWithWhereUniqueWithoutIslaInput = {
    where: palabraWhereUniqueInput
    update: XOR<palabraUpdateWithoutIslaInput, palabraUncheckedUpdateWithoutIslaInput>
    create: XOR<palabraCreateWithoutIslaInput, palabraUncheckedCreateWithoutIslaInput>
  }

  export type palabraUpdateWithWhereUniqueWithoutIslaInput = {
    where: palabraWhereUniqueInput
    data: XOR<palabraUpdateWithoutIslaInput, palabraUncheckedUpdateWithoutIslaInput>
  }

  export type palabraUpdateManyWithWhereWithoutIslaInput = {
    where: palabraScalarWhereInput
    data: XOR<palabraUpdateManyMutationInput, palabraUncheckedUpdateManyWithoutIslaInput>
  }

  export type palabraScalarWhereInput = {
    AND?: palabraScalarWhereInput | palabraScalarWhereInput[]
    OR?: palabraScalarWhereInput[]
    NOT?: palabraScalarWhereInput | palabraScalarWhereInput[]
    id_palabra?: IntFilter<"palabra"> | number
    id_isla?: IntFilter<"palabra"> | number
    palabra?: StringFilter<"palabra"> | string
    id_video_segna?: StringFilter<"palabra"> | string
    url_icono?: StringFilter<"palabra"> | string
  }

  export type islaCreateWithoutVideo_cuestionarioInput = {
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    quiz?: quizCreateNestedManyWithoutIslaInput
    modelo_coml?: modelo_comlCreateNestedManyWithoutIslaInput
    treasure_hunt?: treasure_huntCreateNestedManyWithoutIslaInput
    nivel?: nivelCreateNestedManyWithoutIslaInput
    palabra?: palabraCreateNestedManyWithoutIslaInput
  }

  export type islaUncheckedCreateWithoutVideo_cuestionarioInput = {
    id_isla?: number
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    quiz?: quizUncheckedCreateNestedManyWithoutIslaInput
    modelo_coml?: modelo_comlUncheckedCreateNestedManyWithoutIslaInput
    treasure_hunt?: treasure_huntUncheckedCreateNestedManyWithoutIslaInput
    nivel?: nivelUncheckedCreateNestedManyWithoutIslaInput
    palabra?: palabraUncheckedCreateNestedManyWithoutIslaInput
  }

  export type islaCreateOrConnectWithoutVideo_cuestionarioInput = {
    where: islaWhereUniqueInput
    create: XOR<islaCreateWithoutVideo_cuestionarioInput, islaUncheckedCreateWithoutVideo_cuestionarioInput>
  }

  export type nivelCreateWithoutVideo_cuestionarioInput = {
    isla: islaCreateNestedOneWithoutNivelInput
    quiz: quizCreateNestedOneWithoutNivelInput
    treasure_hunt: treasure_huntCreateNestedOneWithoutNivelInput
  }

  export type nivelUncheckedCreateWithoutVideo_cuestionarioInput = {
    id_nivel?: number
    id_isla: number
    id_quiz: number
    id_treasure_hunt: number
  }

  export type nivelCreateOrConnectWithoutVideo_cuestionarioInput = {
    where: nivelWhereUniqueInput
    create: XOR<nivelCreateWithoutVideo_cuestionarioInput, nivelUncheckedCreateWithoutVideo_cuestionarioInput>
  }

  export type nivelCreateManyVideo_cuestionarioInputEnvelope = {
    data: nivelCreateManyVideo_cuestionarioInput | nivelCreateManyVideo_cuestionarioInput[]
    skipDuplicates?: boolean
  }

  export type parte_video_cuestionarioCreateWithoutVideo_cuestionarioInput = {
    url_video: string
    indice: number
    nombre: string
    preguntas_video_cuestionario?: preguntas_video_cuestionarioCreateNestedManyWithoutParte_video_cuestionarioInput
  }

  export type parte_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput = {
    id_parte_video_cuestionario?: number
    url_video: string
    indice: number
    nombre: string
    preguntas_video_cuestionario?: preguntas_video_cuestionarioUncheckedCreateNestedManyWithoutParte_video_cuestionarioInput
  }

  export type parte_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput = {
    where: parte_video_cuestionarioWhereUniqueInput
    create: XOR<parte_video_cuestionarioCreateWithoutVideo_cuestionarioInput, parte_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput>
  }

  export type parte_video_cuestionarioCreateManyVideo_cuestionarioInputEnvelope = {
    data: parte_video_cuestionarioCreateManyVideo_cuestionarioInput | parte_video_cuestionarioCreateManyVideo_cuestionarioInput[]
    skipDuplicates?: boolean
  }

  export type palabras_video_cuestionarioCreateWithoutVideo_cuestionarioInput = {
    palabra: palabraCreateNestedOneWithoutPalabras_video_cuestionarioInput
  }

  export type palabras_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput = {
    id_palabra: number
  }

  export type palabras_video_cuestionarioCreateOrConnectWithoutVideo_cuestionarioInput = {
    where: palabras_video_cuestionarioWhereUniqueInput
    create: XOR<palabras_video_cuestionarioCreateWithoutVideo_cuestionarioInput, palabras_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput>
  }

  export type palabras_video_cuestionarioCreateManyVideo_cuestionarioInputEnvelope = {
    data: palabras_video_cuestionarioCreateManyVideo_cuestionarioInput | palabras_video_cuestionarioCreateManyVideo_cuestionarioInput[]
    skipDuplicates?: boolean
  }

  export type islaUpsertWithoutVideo_cuestionarioInput = {
    update: XOR<islaUpdateWithoutVideo_cuestionarioInput, islaUncheckedUpdateWithoutVideo_cuestionarioInput>
    create: XOR<islaCreateWithoutVideo_cuestionarioInput, islaUncheckedCreateWithoutVideo_cuestionarioInput>
    where?: islaWhereInput
  }

  export type islaUpdateToOneWithWhereWithoutVideo_cuestionarioInput = {
    where?: islaWhereInput
    data: XOR<islaUpdateWithoutVideo_cuestionarioInput, islaUncheckedUpdateWithoutVideo_cuestionarioInput>
  }

  export type islaUpdateWithoutVideo_cuestionarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    quiz?: quizUpdateManyWithoutIslaNestedInput
    modelo_coml?: modelo_comlUpdateManyWithoutIslaNestedInput
    treasure_hunt?: treasure_huntUpdateManyWithoutIslaNestedInput
    nivel?: nivelUpdateManyWithoutIslaNestedInput
    palabra?: palabraUpdateManyWithoutIslaNestedInput
  }

  export type islaUncheckedUpdateWithoutVideo_cuestionarioInput = {
    id_isla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    quiz?: quizUncheckedUpdateManyWithoutIslaNestedInput
    modelo_coml?: modelo_comlUncheckedUpdateManyWithoutIslaNestedInput
    treasure_hunt?: treasure_huntUncheckedUpdateManyWithoutIslaNestedInput
    nivel?: nivelUncheckedUpdateManyWithoutIslaNestedInput
    palabra?: palabraUncheckedUpdateManyWithoutIslaNestedInput
  }

  export type nivelUpsertWithWhereUniqueWithoutVideo_cuestionarioInput = {
    where: nivelWhereUniqueInput
    update: XOR<nivelUpdateWithoutVideo_cuestionarioInput, nivelUncheckedUpdateWithoutVideo_cuestionarioInput>
    create: XOR<nivelCreateWithoutVideo_cuestionarioInput, nivelUncheckedCreateWithoutVideo_cuestionarioInput>
  }

  export type nivelUpdateWithWhereUniqueWithoutVideo_cuestionarioInput = {
    where: nivelWhereUniqueInput
    data: XOR<nivelUpdateWithoutVideo_cuestionarioInput, nivelUncheckedUpdateWithoutVideo_cuestionarioInput>
  }

  export type nivelUpdateManyWithWhereWithoutVideo_cuestionarioInput = {
    where: nivelScalarWhereInput
    data: XOR<nivelUpdateManyMutationInput, nivelUncheckedUpdateManyWithoutVideo_cuestionarioInput>
  }

  export type parte_video_cuestionarioUpsertWithWhereUniqueWithoutVideo_cuestionarioInput = {
    where: parte_video_cuestionarioWhereUniqueInput
    update: XOR<parte_video_cuestionarioUpdateWithoutVideo_cuestionarioInput, parte_video_cuestionarioUncheckedUpdateWithoutVideo_cuestionarioInput>
    create: XOR<parte_video_cuestionarioCreateWithoutVideo_cuestionarioInput, parte_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput>
  }

  export type parte_video_cuestionarioUpdateWithWhereUniqueWithoutVideo_cuestionarioInput = {
    where: parte_video_cuestionarioWhereUniqueInput
    data: XOR<parte_video_cuestionarioUpdateWithoutVideo_cuestionarioInput, parte_video_cuestionarioUncheckedUpdateWithoutVideo_cuestionarioInput>
  }

  export type parte_video_cuestionarioUpdateManyWithWhereWithoutVideo_cuestionarioInput = {
    where: parte_video_cuestionarioScalarWhereInput
    data: XOR<parte_video_cuestionarioUpdateManyMutationInput, parte_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioInput>
  }

  export type parte_video_cuestionarioScalarWhereInput = {
    AND?: parte_video_cuestionarioScalarWhereInput | parte_video_cuestionarioScalarWhereInput[]
    OR?: parte_video_cuestionarioScalarWhereInput[]
    NOT?: parte_video_cuestionarioScalarWhereInput | parte_video_cuestionarioScalarWhereInput[]
    id_parte_video_cuestionario?: IntFilter<"parte_video_cuestionario"> | number
    id_video_cuestionario?: IntFilter<"parte_video_cuestionario"> | number
    url_video?: StringFilter<"parte_video_cuestionario"> | string
    indice?: IntFilter<"parte_video_cuestionario"> | number
    nombre?: StringFilter<"parte_video_cuestionario"> | string
  }

  export type palabras_video_cuestionarioUpsertWithWhereUniqueWithoutVideo_cuestionarioInput = {
    where: palabras_video_cuestionarioWhereUniqueInput
    update: XOR<palabras_video_cuestionarioUpdateWithoutVideo_cuestionarioInput, palabras_video_cuestionarioUncheckedUpdateWithoutVideo_cuestionarioInput>
    create: XOR<palabras_video_cuestionarioCreateWithoutVideo_cuestionarioInput, palabras_video_cuestionarioUncheckedCreateWithoutVideo_cuestionarioInput>
  }

  export type palabras_video_cuestionarioUpdateWithWhereUniqueWithoutVideo_cuestionarioInput = {
    where: palabras_video_cuestionarioWhereUniqueInput
    data: XOR<palabras_video_cuestionarioUpdateWithoutVideo_cuestionarioInput, palabras_video_cuestionarioUncheckedUpdateWithoutVideo_cuestionarioInput>
  }

  export type palabras_video_cuestionarioUpdateManyWithWhereWithoutVideo_cuestionarioInput = {
    where: palabras_video_cuestionarioScalarWhereInput
    data: XOR<palabras_video_cuestionarioUpdateManyMutationInput, palabras_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioInput>
  }

  export type palabras_video_cuestionarioScalarWhereInput = {
    AND?: palabras_video_cuestionarioScalarWhereInput | palabras_video_cuestionarioScalarWhereInput[]
    OR?: palabras_video_cuestionarioScalarWhereInput[]
    NOT?: palabras_video_cuestionarioScalarWhereInput | palabras_video_cuestionarioScalarWhereInput[]
    id_video_cuestionario?: IntFilter<"palabras_video_cuestionario"> | number
    id_palabra?: IntFilter<"palabras_video_cuestionario"> | number
  }

  export type islaCreateWithoutQuizInput = {
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    video_cuestionario?: video_cuestionarioCreateNestedManyWithoutIslaInput
    modelo_coml?: modelo_comlCreateNestedManyWithoutIslaInput
    treasure_hunt?: treasure_huntCreateNestedManyWithoutIslaInput
    nivel?: nivelCreateNestedManyWithoutIslaInput
    palabra?: palabraCreateNestedManyWithoutIslaInput
  }

  export type islaUncheckedCreateWithoutQuizInput = {
    id_isla?: number
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    video_cuestionario?: video_cuestionarioUncheckedCreateNestedManyWithoutIslaInput
    modelo_coml?: modelo_comlUncheckedCreateNestedManyWithoutIslaInput
    treasure_hunt?: treasure_huntUncheckedCreateNestedManyWithoutIslaInput
    nivel?: nivelUncheckedCreateNestedManyWithoutIslaInput
    palabra?: palabraUncheckedCreateNestedManyWithoutIslaInput
  }

  export type islaCreateOrConnectWithoutQuizInput = {
    where: islaWhereUniqueInput
    create: XOR<islaCreateWithoutQuizInput, islaUncheckedCreateWithoutQuizInput>
  }

  export type nivelCreateWithoutQuizInput = {
    isla: islaCreateNestedOneWithoutNivelInput
    video_cuestionario: video_cuestionarioCreateNestedOneWithoutNivelInput
    treasure_hunt: treasure_huntCreateNestedOneWithoutNivelInput
  }

  export type nivelUncheckedCreateWithoutQuizInput = {
    id_nivel?: number
    id_isla: number
    id_video_cuestionario: number
    id_treasure_hunt: number
  }

  export type nivelCreateOrConnectWithoutQuizInput = {
    where: nivelWhereUniqueInput
    create: XOR<nivelCreateWithoutQuizInput, nivelUncheckedCreateWithoutQuizInput>
  }

  export type nivelCreateManyQuizInputEnvelope = {
    data: nivelCreateManyQuizInput | nivelCreateManyQuizInput[]
    skipDuplicates?: boolean
  }

  export type detalles_quizCreateWithoutQuizInput = {
    palabra: palabraCreateNestedOneWithoutDetalles_quizInput
  }

  export type detalles_quizUncheckedCreateWithoutQuizInput = {
    id_palabra: number
  }

  export type detalles_quizCreateOrConnectWithoutQuizInput = {
    where: detalles_quizWhereUniqueInput
    create: XOR<detalles_quizCreateWithoutQuizInput, detalles_quizUncheckedCreateWithoutQuizInput>
  }

  export type detalles_quizCreateManyQuizInputEnvelope = {
    data: detalles_quizCreateManyQuizInput | detalles_quizCreateManyQuizInput[]
    skipDuplicates?: boolean
  }

  export type islaUpsertWithoutQuizInput = {
    update: XOR<islaUpdateWithoutQuizInput, islaUncheckedUpdateWithoutQuizInput>
    create: XOR<islaCreateWithoutQuizInput, islaUncheckedCreateWithoutQuizInput>
    where?: islaWhereInput
  }

  export type islaUpdateToOneWithWhereWithoutQuizInput = {
    where?: islaWhereInput
    data: XOR<islaUpdateWithoutQuizInput, islaUncheckedUpdateWithoutQuizInput>
  }

  export type islaUpdateWithoutQuizInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    video_cuestionario?: video_cuestionarioUpdateManyWithoutIslaNestedInput
    modelo_coml?: modelo_comlUpdateManyWithoutIslaNestedInput
    treasure_hunt?: treasure_huntUpdateManyWithoutIslaNestedInput
    nivel?: nivelUpdateManyWithoutIslaNestedInput
    palabra?: palabraUpdateManyWithoutIslaNestedInput
  }

  export type islaUncheckedUpdateWithoutQuizInput = {
    id_isla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    video_cuestionario?: video_cuestionarioUncheckedUpdateManyWithoutIslaNestedInput
    modelo_coml?: modelo_comlUncheckedUpdateManyWithoutIslaNestedInput
    treasure_hunt?: treasure_huntUncheckedUpdateManyWithoutIslaNestedInput
    nivel?: nivelUncheckedUpdateManyWithoutIslaNestedInput
    palabra?: palabraUncheckedUpdateManyWithoutIslaNestedInput
  }

  export type nivelUpsertWithWhereUniqueWithoutQuizInput = {
    where: nivelWhereUniqueInput
    update: XOR<nivelUpdateWithoutQuizInput, nivelUncheckedUpdateWithoutQuizInput>
    create: XOR<nivelCreateWithoutQuizInput, nivelUncheckedCreateWithoutQuizInput>
  }

  export type nivelUpdateWithWhereUniqueWithoutQuizInput = {
    where: nivelWhereUniqueInput
    data: XOR<nivelUpdateWithoutQuizInput, nivelUncheckedUpdateWithoutQuizInput>
  }

  export type nivelUpdateManyWithWhereWithoutQuizInput = {
    where: nivelScalarWhereInput
    data: XOR<nivelUpdateManyMutationInput, nivelUncheckedUpdateManyWithoutQuizInput>
  }

  export type detalles_quizUpsertWithWhereUniqueWithoutQuizInput = {
    where: detalles_quizWhereUniqueInput
    update: XOR<detalles_quizUpdateWithoutQuizInput, detalles_quizUncheckedUpdateWithoutQuizInput>
    create: XOR<detalles_quizCreateWithoutQuizInput, detalles_quizUncheckedCreateWithoutQuizInput>
  }

  export type detalles_quizUpdateWithWhereUniqueWithoutQuizInput = {
    where: detalles_quizWhereUniqueInput
    data: XOR<detalles_quizUpdateWithoutQuizInput, detalles_quizUncheckedUpdateWithoutQuizInput>
  }

  export type detalles_quizUpdateManyWithWhereWithoutQuizInput = {
    where: detalles_quizScalarWhereInput
    data: XOR<detalles_quizUpdateManyMutationInput, detalles_quizUncheckedUpdateManyWithoutQuizInput>
  }

  export type detalles_quizScalarWhereInput = {
    AND?: detalles_quizScalarWhereInput | detalles_quizScalarWhereInput[]
    OR?: detalles_quizScalarWhereInput[]
    NOT?: detalles_quizScalarWhereInput | detalles_quizScalarWhereInput[]
    id_quiz?: IntFilter<"detalles_quiz"> | number
    id_palabra?: IntFilter<"detalles_quiz"> | number
  }

  export type islaCreateWithoutModelo_comlInput = {
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    video_cuestionario?: video_cuestionarioCreateNestedManyWithoutIslaInput
    quiz?: quizCreateNestedManyWithoutIslaInput
    treasure_hunt?: treasure_huntCreateNestedManyWithoutIslaInput
    nivel?: nivelCreateNestedManyWithoutIslaInput
    palabra?: palabraCreateNestedManyWithoutIslaInput
  }

  export type islaUncheckedCreateWithoutModelo_comlInput = {
    id_isla?: number
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    video_cuestionario?: video_cuestionarioUncheckedCreateNestedManyWithoutIslaInput
    quiz?: quizUncheckedCreateNestedManyWithoutIslaInput
    treasure_hunt?: treasure_huntUncheckedCreateNestedManyWithoutIslaInput
    nivel?: nivelUncheckedCreateNestedManyWithoutIslaInput
    palabra?: palabraUncheckedCreateNestedManyWithoutIslaInput
  }

  export type islaCreateOrConnectWithoutModelo_comlInput = {
    where: islaWhereUniqueInput
    create: XOR<islaCreateWithoutModelo_comlInput, islaUncheckedCreateWithoutModelo_comlInput>
  }

  export type treasure_huntCreateWithoutModelo_comlInput = {
    isla: islaCreateNestedOneWithoutTreasure_huntInput
    nivel?: nivelCreateNestedManyWithoutTreasure_huntInput
  }

  export type treasure_huntUncheckedCreateWithoutModelo_comlInput = {
    id_treasure_hunt?: number
    id_isla: number
    nivel?: nivelUncheckedCreateNestedManyWithoutTreasure_huntInput
  }

  export type treasure_huntCreateOrConnectWithoutModelo_comlInput = {
    where: treasure_huntWhereUniqueInput
    create: XOR<treasure_huntCreateWithoutModelo_comlInput, treasure_huntUncheckedCreateWithoutModelo_comlInput>
  }

  export type treasure_huntCreateManyModelo_comlInputEnvelope = {
    data: treasure_huntCreateManyModelo_comlInput | treasure_huntCreateManyModelo_comlInput[]
    skipDuplicates?: boolean
  }

  export type islaUpsertWithoutModelo_comlInput = {
    update: XOR<islaUpdateWithoutModelo_comlInput, islaUncheckedUpdateWithoutModelo_comlInput>
    create: XOR<islaCreateWithoutModelo_comlInput, islaUncheckedCreateWithoutModelo_comlInput>
    where?: islaWhereInput
  }

  export type islaUpdateToOneWithWhereWithoutModelo_comlInput = {
    where?: islaWhereInput
    data: XOR<islaUpdateWithoutModelo_comlInput, islaUncheckedUpdateWithoutModelo_comlInput>
  }

  export type islaUpdateWithoutModelo_comlInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    video_cuestionario?: video_cuestionarioUpdateManyWithoutIslaNestedInput
    quiz?: quizUpdateManyWithoutIslaNestedInput
    treasure_hunt?: treasure_huntUpdateManyWithoutIslaNestedInput
    nivel?: nivelUpdateManyWithoutIslaNestedInput
    palabra?: palabraUpdateManyWithoutIslaNestedInput
  }

  export type islaUncheckedUpdateWithoutModelo_comlInput = {
    id_isla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    video_cuestionario?: video_cuestionarioUncheckedUpdateManyWithoutIslaNestedInput
    quiz?: quizUncheckedUpdateManyWithoutIslaNestedInput
    treasure_hunt?: treasure_huntUncheckedUpdateManyWithoutIslaNestedInput
    nivel?: nivelUncheckedUpdateManyWithoutIslaNestedInput
    palabra?: palabraUncheckedUpdateManyWithoutIslaNestedInput
  }

  export type treasure_huntUpsertWithWhereUniqueWithoutModelo_comlInput = {
    where: treasure_huntWhereUniqueInput
    update: XOR<treasure_huntUpdateWithoutModelo_comlInput, treasure_huntUncheckedUpdateWithoutModelo_comlInput>
    create: XOR<treasure_huntCreateWithoutModelo_comlInput, treasure_huntUncheckedCreateWithoutModelo_comlInput>
  }

  export type treasure_huntUpdateWithWhereUniqueWithoutModelo_comlInput = {
    where: treasure_huntWhereUniqueInput
    data: XOR<treasure_huntUpdateWithoutModelo_comlInput, treasure_huntUncheckedUpdateWithoutModelo_comlInput>
  }

  export type treasure_huntUpdateManyWithWhereWithoutModelo_comlInput = {
    where: treasure_huntScalarWhereInput
    data: XOR<treasure_huntUpdateManyMutationInput, treasure_huntUncheckedUpdateManyWithoutModelo_comlInput>
  }

  export type islaCreateWithoutTreasure_huntInput = {
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    video_cuestionario?: video_cuestionarioCreateNestedManyWithoutIslaInput
    quiz?: quizCreateNestedManyWithoutIslaInput
    modelo_coml?: modelo_comlCreateNestedManyWithoutIslaInput
    nivel?: nivelCreateNestedManyWithoutIslaInput
    palabra?: palabraCreateNestedManyWithoutIslaInput
  }

  export type islaUncheckedCreateWithoutTreasure_huntInput = {
    id_isla?: number
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    video_cuestionario?: video_cuestionarioUncheckedCreateNestedManyWithoutIslaInput
    quiz?: quizUncheckedCreateNestedManyWithoutIslaInput
    modelo_coml?: modelo_comlUncheckedCreateNestedManyWithoutIslaInput
    nivel?: nivelUncheckedCreateNestedManyWithoutIslaInput
    palabra?: palabraUncheckedCreateNestedManyWithoutIslaInput
  }

  export type islaCreateOrConnectWithoutTreasure_huntInput = {
    where: islaWhereUniqueInput
    create: XOR<islaCreateWithoutTreasure_huntInput, islaUncheckedCreateWithoutTreasure_huntInput>
  }

  export type modelo_comlCreateWithoutTreasure_huntInput = {
    isla: islaCreateNestedOneWithoutModelo_comlInput
  }

  export type modelo_comlUncheckedCreateWithoutTreasure_huntInput = {
    id_modelo_coml?: number
    id_isla: number
  }

  export type modelo_comlCreateOrConnectWithoutTreasure_huntInput = {
    where: modelo_comlWhereUniqueInput
    create: XOR<modelo_comlCreateWithoutTreasure_huntInput, modelo_comlUncheckedCreateWithoutTreasure_huntInput>
  }

  export type nivelCreateWithoutTreasure_huntInput = {
    isla: islaCreateNestedOneWithoutNivelInput
    video_cuestionario: video_cuestionarioCreateNestedOneWithoutNivelInput
    quiz: quizCreateNestedOneWithoutNivelInput
  }

  export type nivelUncheckedCreateWithoutTreasure_huntInput = {
    id_nivel?: number
    id_isla: number
    id_video_cuestionario: number
    id_quiz: number
  }

  export type nivelCreateOrConnectWithoutTreasure_huntInput = {
    where: nivelWhereUniqueInput
    create: XOR<nivelCreateWithoutTreasure_huntInput, nivelUncheckedCreateWithoutTreasure_huntInput>
  }

  export type nivelCreateManyTreasure_huntInputEnvelope = {
    data: nivelCreateManyTreasure_huntInput | nivelCreateManyTreasure_huntInput[]
    skipDuplicates?: boolean
  }

  export type islaUpsertWithoutTreasure_huntInput = {
    update: XOR<islaUpdateWithoutTreasure_huntInput, islaUncheckedUpdateWithoutTreasure_huntInput>
    create: XOR<islaCreateWithoutTreasure_huntInput, islaUncheckedCreateWithoutTreasure_huntInput>
    where?: islaWhereInput
  }

  export type islaUpdateToOneWithWhereWithoutTreasure_huntInput = {
    where?: islaWhereInput
    data: XOR<islaUpdateWithoutTreasure_huntInput, islaUncheckedUpdateWithoutTreasure_huntInput>
  }

  export type islaUpdateWithoutTreasure_huntInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    video_cuestionario?: video_cuestionarioUpdateManyWithoutIslaNestedInput
    quiz?: quizUpdateManyWithoutIslaNestedInput
    modelo_coml?: modelo_comlUpdateManyWithoutIslaNestedInput
    nivel?: nivelUpdateManyWithoutIslaNestedInput
    palabra?: palabraUpdateManyWithoutIslaNestedInput
  }

  export type islaUncheckedUpdateWithoutTreasure_huntInput = {
    id_isla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    video_cuestionario?: video_cuestionarioUncheckedUpdateManyWithoutIslaNestedInput
    quiz?: quizUncheckedUpdateManyWithoutIslaNestedInput
    modelo_coml?: modelo_comlUncheckedUpdateManyWithoutIslaNestedInput
    nivel?: nivelUncheckedUpdateManyWithoutIslaNestedInput
    palabra?: palabraUncheckedUpdateManyWithoutIslaNestedInput
  }

  export type modelo_comlUpsertWithoutTreasure_huntInput = {
    update: XOR<modelo_comlUpdateWithoutTreasure_huntInput, modelo_comlUncheckedUpdateWithoutTreasure_huntInput>
    create: XOR<modelo_comlCreateWithoutTreasure_huntInput, modelo_comlUncheckedCreateWithoutTreasure_huntInput>
    where?: modelo_comlWhereInput
  }

  export type modelo_comlUpdateToOneWithWhereWithoutTreasure_huntInput = {
    where?: modelo_comlWhereInput
    data: XOR<modelo_comlUpdateWithoutTreasure_huntInput, modelo_comlUncheckedUpdateWithoutTreasure_huntInput>
  }

  export type modelo_comlUpdateWithoutTreasure_huntInput = {
    isla?: islaUpdateOneRequiredWithoutModelo_comlNestedInput
  }

  export type modelo_comlUncheckedUpdateWithoutTreasure_huntInput = {
    id_modelo_coml?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
  }

  export type nivelUpsertWithWhereUniqueWithoutTreasure_huntInput = {
    where: nivelWhereUniqueInput
    update: XOR<nivelUpdateWithoutTreasure_huntInput, nivelUncheckedUpdateWithoutTreasure_huntInput>
    create: XOR<nivelCreateWithoutTreasure_huntInput, nivelUncheckedCreateWithoutTreasure_huntInput>
  }

  export type nivelUpdateWithWhereUniqueWithoutTreasure_huntInput = {
    where: nivelWhereUniqueInput
    data: XOR<nivelUpdateWithoutTreasure_huntInput, nivelUncheckedUpdateWithoutTreasure_huntInput>
  }

  export type nivelUpdateManyWithWhereWithoutTreasure_huntInput = {
    where: nivelScalarWhereInput
    data: XOR<nivelUpdateManyMutationInput, nivelUncheckedUpdateManyWithoutTreasure_huntInput>
  }

  export type islaCreateWithoutNivelInput = {
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    video_cuestionario?: video_cuestionarioCreateNestedManyWithoutIslaInput
    quiz?: quizCreateNestedManyWithoutIslaInput
    modelo_coml?: modelo_comlCreateNestedManyWithoutIslaInput
    treasure_hunt?: treasure_huntCreateNestedManyWithoutIslaInput
    palabra?: palabraCreateNestedManyWithoutIslaInput
  }

  export type islaUncheckedCreateWithoutNivelInput = {
    id_isla?: number
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    video_cuestionario?: video_cuestionarioUncheckedCreateNestedManyWithoutIslaInput
    quiz?: quizUncheckedCreateNestedManyWithoutIslaInput
    modelo_coml?: modelo_comlUncheckedCreateNestedManyWithoutIslaInput
    treasure_hunt?: treasure_huntUncheckedCreateNestedManyWithoutIslaInput
    palabra?: palabraUncheckedCreateNestedManyWithoutIslaInput
  }

  export type islaCreateOrConnectWithoutNivelInput = {
    where: islaWhereUniqueInput
    create: XOR<islaCreateWithoutNivelInput, islaUncheckedCreateWithoutNivelInput>
  }

  export type video_cuestionarioCreateWithoutNivelInput = {
    nombre: string
    isla: islaCreateNestedOneWithoutVideo_cuestionarioInput
    parte_video_cuestionario?: parte_video_cuestionarioCreateNestedManyWithoutVideo_cuestionarioInput
    palabras_video_cuestionario?: palabras_video_cuestionarioCreateNestedManyWithoutVideo_cuestionarioInput
  }

  export type video_cuestionarioUncheckedCreateWithoutNivelInput = {
    id_video_cuestionario?: number
    nombre: string
    id_isla: number
    parte_video_cuestionario?: parte_video_cuestionarioUncheckedCreateNestedManyWithoutVideo_cuestionarioInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedCreateNestedManyWithoutVideo_cuestionarioInput
  }

  export type video_cuestionarioCreateOrConnectWithoutNivelInput = {
    where: video_cuestionarioWhereUniqueInput
    create: XOR<video_cuestionarioCreateWithoutNivelInput, video_cuestionarioUncheckedCreateWithoutNivelInput>
  }

  export type quizCreateWithoutNivelInput = {
    nombre: string
    isla: islaCreateNestedOneWithoutQuizInput
    detalles_quiz?: detalles_quizCreateNestedManyWithoutQuizInput
  }

  export type quizUncheckedCreateWithoutNivelInput = {
    id_quiz?: number
    id_isla: number
    nombre: string
    detalles_quiz?: detalles_quizUncheckedCreateNestedManyWithoutQuizInput
  }

  export type quizCreateOrConnectWithoutNivelInput = {
    where: quizWhereUniqueInput
    create: XOR<quizCreateWithoutNivelInput, quizUncheckedCreateWithoutNivelInput>
  }

  export type treasure_huntCreateWithoutNivelInput = {
    isla: islaCreateNestedOneWithoutTreasure_huntInput
    modelo_coml: modelo_comlCreateNestedOneWithoutTreasure_huntInput
  }

  export type treasure_huntUncheckedCreateWithoutNivelInput = {
    id_treasure_hunt?: number
    id_isla: number
    id_modelo_coml: number
  }

  export type treasure_huntCreateOrConnectWithoutNivelInput = {
    where: treasure_huntWhereUniqueInput
    create: XOR<treasure_huntCreateWithoutNivelInput, treasure_huntUncheckedCreateWithoutNivelInput>
  }

  export type islaUpsertWithoutNivelInput = {
    update: XOR<islaUpdateWithoutNivelInput, islaUncheckedUpdateWithoutNivelInput>
    create: XOR<islaCreateWithoutNivelInput, islaUncheckedCreateWithoutNivelInput>
    where?: islaWhereInput
  }

  export type islaUpdateToOneWithWhereWithoutNivelInput = {
    where?: islaWhereInput
    data: XOR<islaUpdateWithoutNivelInput, islaUncheckedUpdateWithoutNivelInput>
  }

  export type islaUpdateWithoutNivelInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    video_cuestionario?: video_cuestionarioUpdateManyWithoutIslaNestedInput
    quiz?: quizUpdateManyWithoutIslaNestedInput
    modelo_coml?: modelo_comlUpdateManyWithoutIslaNestedInput
    treasure_hunt?: treasure_huntUpdateManyWithoutIslaNestedInput
    palabra?: palabraUpdateManyWithoutIslaNestedInput
  }

  export type islaUncheckedUpdateWithoutNivelInput = {
    id_isla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    video_cuestionario?: video_cuestionarioUncheckedUpdateManyWithoutIslaNestedInput
    quiz?: quizUncheckedUpdateManyWithoutIslaNestedInput
    modelo_coml?: modelo_comlUncheckedUpdateManyWithoutIslaNestedInput
    treasure_hunt?: treasure_huntUncheckedUpdateManyWithoutIslaNestedInput
    palabra?: palabraUncheckedUpdateManyWithoutIslaNestedInput
  }

  export type video_cuestionarioUpsertWithoutNivelInput = {
    update: XOR<video_cuestionarioUpdateWithoutNivelInput, video_cuestionarioUncheckedUpdateWithoutNivelInput>
    create: XOR<video_cuestionarioCreateWithoutNivelInput, video_cuestionarioUncheckedCreateWithoutNivelInput>
    where?: video_cuestionarioWhereInput
  }

  export type video_cuestionarioUpdateToOneWithWhereWithoutNivelInput = {
    where?: video_cuestionarioWhereInput
    data: XOR<video_cuestionarioUpdateWithoutNivelInput, video_cuestionarioUncheckedUpdateWithoutNivelInput>
  }

  export type video_cuestionarioUpdateWithoutNivelInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    isla?: islaUpdateOneRequiredWithoutVideo_cuestionarioNestedInput
    parte_video_cuestionario?: parte_video_cuestionarioUpdateManyWithoutVideo_cuestionarioNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUpdateManyWithoutVideo_cuestionarioNestedInput
  }

  export type video_cuestionarioUncheckedUpdateWithoutNivelInput = {
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    id_isla?: IntFieldUpdateOperationsInput | number
    parte_video_cuestionario?: parte_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput
  }

  export type quizUpsertWithoutNivelInput = {
    update: XOR<quizUpdateWithoutNivelInput, quizUncheckedUpdateWithoutNivelInput>
    create: XOR<quizCreateWithoutNivelInput, quizUncheckedCreateWithoutNivelInput>
    where?: quizWhereInput
  }

  export type quizUpdateToOneWithWhereWithoutNivelInput = {
    where?: quizWhereInput
    data: XOR<quizUpdateWithoutNivelInput, quizUncheckedUpdateWithoutNivelInput>
  }

  export type quizUpdateWithoutNivelInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    isla?: islaUpdateOneRequiredWithoutQuizNestedInput
    detalles_quiz?: detalles_quizUpdateManyWithoutQuizNestedInput
  }

  export type quizUncheckedUpdateWithoutNivelInput = {
    id_quiz?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    detalles_quiz?: detalles_quizUncheckedUpdateManyWithoutQuizNestedInput
  }

  export type treasure_huntUpsertWithoutNivelInput = {
    update: XOR<treasure_huntUpdateWithoutNivelInput, treasure_huntUncheckedUpdateWithoutNivelInput>
    create: XOR<treasure_huntCreateWithoutNivelInput, treasure_huntUncheckedCreateWithoutNivelInput>
    where?: treasure_huntWhereInput
  }

  export type treasure_huntUpdateToOneWithWhereWithoutNivelInput = {
    where?: treasure_huntWhereInput
    data: XOR<treasure_huntUpdateWithoutNivelInput, treasure_huntUncheckedUpdateWithoutNivelInput>
  }

  export type treasure_huntUpdateWithoutNivelInput = {
    isla?: islaUpdateOneRequiredWithoutTreasure_huntNestedInput
    modelo_coml?: modelo_comlUpdateOneRequiredWithoutTreasure_huntNestedInput
  }

  export type treasure_huntUncheckedUpdateWithoutNivelInput = {
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    id_modelo_coml?: IntFieldUpdateOperationsInput | number
  }

  export type islaCreateWithoutPalabraInput = {
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    video_cuestionario?: video_cuestionarioCreateNestedManyWithoutIslaInput
    quiz?: quizCreateNestedManyWithoutIslaInput
    modelo_coml?: modelo_comlCreateNestedManyWithoutIslaInput
    treasure_hunt?: treasure_huntCreateNestedManyWithoutIslaInput
    nivel?: nivelCreateNestedManyWithoutIslaInput
  }

  export type islaUncheckedCreateWithoutPalabraInput = {
    id_isla?: number
    nombre: string
    modelo_general?: Buffer | null
    modelo_especifico?: Buffer | null
    video_cuestionario?: video_cuestionarioUncheckedCreateNestedManyWithoutIslaInput
    quiz?: quizUncheckedCreateNestedManyWithoutIslaInput
    modelo_coml?: modelo_comlUncheckedCreateNestedManyWithoutIslaInput
    treasure_hunt?: treasure_huntUncheckedCreateNestedManyWithoutIslaInput
    nivel?: nivelUncheckedCreateNestedManyWithoutIslaInput
  }

  export type islaCreateOrConnectWithoutPalabraInput = {
    where: islaWhereUniqueInput
    create: XOR<islaCreateWithoutPalabraInput, islaUncheckedCreateWithoutPalabraInput>
  }

  export type detalles_quizCreateWithoutPalabraInput = {
    quiz: quizCreateNestedOneWithoutDetalles_quizInput
  }

  export type detalles_quizUncheckedCreateWithoutPalabraInput = {
    id_quiz: number
  }

  export type detalles_quizCreateOrConnectWithoutPalabraInput = {
    where: detalles_quizWhereUniqueInput
    create: XOR<detalles_quizCreateWithoutPalabraInput, detalles_quizUncheckedCreateWithoutPalabraInput>
  }

  export type detalles_quizCreateManyPalabraInputEnvelope = {
    data: detalles_quizCreateManyPalabraInput | detalles_quizCreateManyPalabraInput[]
    skipDuplicates?: boolean
  }

  export type palabras_video_cuestionarioCreateWithoutPalabraInput = {
    video_cuestionario: video_cuestionarioCreateNestedOneWithoutPalabras_video_cuestionarioInput
  }

  export type palabras_video_cuestionarioUncheckedCreateWithoutPalabraInput = {
    id_video_cuestionario: number
  }

  export type palabras_video_cuestionarioCreateOrConnectWithoutPalabraInput = {
    where: palabras_video_cuestionarioWhereUniqueInput
    create: XOR<palabras_video_cuestionarioCreateWithoutPalabraInput, palabras_video_cuestionarioUncheckedCreateWithoutPalabraInput>
  }

  export type palabras_video_cuestionarioCreateManyPalabraInputEnvelope = {
    data: palabras_video_cuestionarioCreateManyPalabraInput | palabras_video_cuestionarioCreateManyPalabraInput[]
    skipDuplicates?: boolean
  }

  export type islaUpsertWithoutPalabraInput = {
    update: XOR<islaUpdateWithoutPalabraInput, islaUncheckedUpdateWithoutPalabraInput>
    create: XOR<islaCreateWithoutPalabraInput, islaUncheckedCreateWithoutPalabraInput>
    where?: islaWhereInput
  }

  export type islaUpdateToOneWithWhereWithoutPalabraInput = {
    where?: islaWhereInput
    data: XOR<islaUpdateWithoutPalabraInput, islaUncheckedUpdateWithoutPalabraInput>
  }

  export type islaUpdateWithoutPalabraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    video_cuestionario?: video_cuestionarioUpdateManyWithoutIslaNestedInput
    quiz?: quizUpdateManyWithoutIslaNestedInput
    modelo_coml?: modelo_comlUpdateManyWithoutIslaNestedInput
    treasure_hunt?: treasure_huntUpdateManyWithoutIslaNestedInput
    nivel?: nivelUpdateManyWithoutIslaNestedInput
  }

  export type islaUncheckedUpdateWithoutPalabraInput = {
    id_isla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    modelo_general?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    modelo_especifico?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    video_cuestionario?: video_cuestionarioUncheckedUpdateManyWithoutIslaNestedInput
    quiz?: quizUncheckedUpdateManyWithoutIslaNestedInput
    modelo_coml?: modelo_comlUncheckedUpdateManyWithoutIslaNestedInput
    treasure_hunt?: treasure_huntUncheckedUpdateManyWithoutIslaNestedInput
    nivel?: nivelUncheckedUpdateManyWithoutIslaNestedInput
  }

  export type detalles_quizUpsertWithWhereUniqueWithoutPalabraInput = {
    where: detalles_quizWhereUniqueInput
    update: XOR<detalles_quizUpdateWithoutPalabraInput, detalles_quizUncheckedUpdateWithoutPalabraInput>
    create: XOR<detalles_quizCreateWithoutPalabraInput, detalles_quizUncheckedCreateWithoutPalabraInput>
  }

  export type detalles_quizUpdateWithWhereUniqueWithoutPalabraInput = {
    where: detalles_quizWhereUniqueInput
    data: XOR<detalles_quizUpdateWithoutPalabraInput, detalles_quizUncheckedUpdateWithoutPalabraInput>
  }

  export type detalles_quizUpdateManyWithWhereWithoutPalabraInput = {
    where: detalles_quizScalarWhereInput
    data: XOR<detalles_quizUpdateManyMutationInput, detalles_quizUncheckedUpdateManyWithoutPalabraInput>
  }

  export type palabras_video_cuestionarioUpsertWithWhereUniqueWithoutPalabraInput = {
    where: palabras_video_cuestionarioWhereUniqueInput
    update: XOR<palabras_video_cuestionarioUpdateWithoutPalabraInput, palabras_video_cuestionarioUncheckedUpdateWithoutPalabraInput>
    create: XOR<palabras_video_cuestionarioCreateWithoutPalabraInput, palabras_video_cuestionarioUncheckedCreateWithoutPalabraInput>
  }

  export type palabras_video_cuestionarioUpdateWithWhereUniqueWithoutPalabraInput = {
    where: palabras_video_cuestionarioWhereUniqueInput
    data: XOR<palabras_video_cuestionarioUpdateWithoutPalabraInput, palabras_video_cuestionarioUncheckedUpdateWithoutPalabraInput>
  }

  export type palabras_video_cuestionarioUpdateManyWithWhereWithoutPalabraInput = {
    where: palabras_video_cuestionarioScalarWhereInput
    data: XOR<palabras_video_cuestionarioUpdateManyMutationInput, palabras_video_cuestionarioUncheckedUpdateManyWithoutPalabraInput>
  }

  export type video_cuestionarioCreateWithoutParte_video_cuestionarioInput = {
    nombre: string
    isla: islaCreateNestedOneWithoutVideo_cuestionarioInput
    nivel?: nivelCreateNestedManyWithoutVideo_cuestionarioInput
    palabras_video_cuestionario?: palabras_video_cuestionarioCreateNestedManyWithoutVideo_cuestionarioInput
  }

  export type video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput = {
    id_video_cuestionario?: number
    nombre: string
    id_isla: number
    nivel?: nivelUncheckedCreateNestedManyWithoutVideo_cuestionarioInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedCreateNestedManyWithoutVideo_cuestionarioInput
  }

  export type video_cuestionarioCreateOrConnectWithoutParte_video_cuestionarioInput = {
    where: video_cuestionarioWhereUniqueInput
    create: XOR<video_cuestionarioCreateWithoutParte_video_cuestionarioInput, video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput>
  }

  export type preguntas_video_cuestionarioCreateWithoutParte_video_cuestionarioInput = {
    pregunta: string
    respuestas_video_cuestionario?: respuestas_video_cuestionarioCreateNestedManyWithoutPreguntas_video_cuestionarioInput
  }

  export type preguntas_video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput = {
    id_preguntas_video_cuestionario?: number
    pregunta: string
    respuestas_video_cuestionario?: respuestas_video_cuestionarioUncheckedCreateNestedManyWithoutPreguntas_video_cuestionarioInput
  }

  export type preguntas_video_cuestionarioCreateOrConnectWithoutParte_video_cuestionarioInput = {
    where: preguntas_video_cuestionarioWhereUniqueInput
    create: XOR<preguntas_video_cuestionarioCreateWithoutParte_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput>
  }

  export type preguntas_video_cuestionarioCreateManyParte_video_cuestionarioInputEnvelope = {
    data: preguntas_video_cuestionarioCreateManyParte_video_cuestionarioInput | preguntas_video_cuestionarioCreateManyParte_video_cuestionarioInput[]
    skipDuplicates?: boolean
  }

  export type video_cuestionarioUpsertWithoutParte_video_cuestionarioInput = {
    update: XOR<video_cuestionarioUpdateWithoutParte_video_cuestionarioInput, video_cuestionarioUncheckedUpdateWithoutParte_video_cuestionarioInput>
    create: XOR<video_cuestionarioCreateWithoutParte_video_cuestionarioInput, video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput>
    where?: video_cuestionarioWhereInput
  }

  export type video_cuestionarioUpdateToOneWithWhereWithoutParte_video_cuestionarioInput = {
    where?: video_cuestionarioWhereInput
    data: XOR<video_cuestionarioUpdateWithoutParte_video_cuestionarioInput, video_cuestionarioUncheckedUpdateWithoutParte_video_cuestionarioInput>
  }

  export type video_cuestionarioUpdateWithoutParte_video_cuestionarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    isla?: islaUpdateOneRequiredWithoutVideo_cuestionarioNestedInput
    nivel?: nivelUpdateManyWithoutVideo_cuestionarioNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUpdateManyWithoutVideo_cuestionarioNestedInput
  }

  export type video_cuestionarioUncheckedUpdateWithoutParte_video_cuestionarioInput = {
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    id_isla?: IntFieldUpdateOperationsInput | number
    nivel?: nivelUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput
  }

  export type preguntas_video_cuestionarioUpsertWithWhereUniqueWithoutParte_video_cuestionarioInput = {
    where: preguntas_video_cuestionarioWhereUniqueInput
    update: XOR<preguntas_video_cuestionarioUpdateWithoutParte_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedUpdateWithoutParte_video_cuestionarioInput>
    create: XOR<preguntas_video_cuestionarioCreateWithoutParte_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedCreateWithoutParte_video_cuestionarioInput>
  }

  export type preguntas_video_cuestionarioUpdateWithWhereUniqueWithoutParte_video_cuestionarioInput = {
    where: preguntas_video_cuestionarioWhereUniqueInput
    data: XOR<preguntas_video_cuestionarioUpdateWithoutParte_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedUpdateWithoutParte_video_cuestionarioInput>
  }

  export type preguntas_video_cuestionarioUpdateManyWithWhereWithoutParte_video_cuestionarioInput = {
    where: preguntas_video_cuestionarioScalarWhereInput
    data: XOR<preguntas_video_cuestionarioUpdateManyMutationInput, preguntas_video_cuestionarioUncheckedUpdateManyWithoutParte_video_cuestionarioInput>
  }

  export type preguntas_video_cuestionarioScalarWhereInput = {
    AND?: preguntas_video_cuestionarioScalarWhereInput | preguntas_video_cuestionarioScalarWhereInput[]
    OR?: preguntas_video_cuestionarioScalarWhereInput[]
    NOT?: preguntas_video_cuestionarioScalarWhereInput | preguntas_video_cuestionarioScalarWhereInput[]
    id_preguntas_video_cuestionario?: IntFilter<"preguntas_video_cuestionario"> | number
    id_parte_video_cuestionario?: IntFilter<"preguntas_video_cuestionario"> | number
    pregunta?: StringFilter<"preguntas_video_cuestionario"> | string
  }

  export type video_cuestionarioCreateWithoutPalabras_video_cuestionarioInput = {
    nombre: string
    isla: islaCreateNestedOneWithoutVideo_cuestionarioInput
    nivel?: nivelCreateNestedManyWithoutVideo_cuestionarioInput
    parte_video_cuestionario?: parte_video_cuestionarioCreateNestedManyWithoutVideo_cuestionarioInput
  }

  export type video_cuestionarioUncheckedCreateWithoutPalabras_video_cuestionarioInput = {
    id_video_cuestionario?: number
    nombre: string
    id_isla: number
    nivel?: nivelUncheckedCreateNestedManyWithoutVideo_cuestionarioInput
    parte_video_cuestionario?: parte_video_cuestionarioUncheckedCreateNestedManyWithoutVideo_cuestionarioInput
  }

  export type video_cuestionarioCreateOrConnectWithoutPalabras_video_cuestionarioInput = {
    where: video_cuestionarioWhereUniqueInput
    create: XOR<video_cuestionarioCreateWithoutPalabras_video_cuestionarioInput, video_cuestionarioUncheckedCreateWithoutPalabras_video_cuestionarioInput>
  }

  export type palabraCreateWithoutPalabras_video_cuestionarioInput = {
    palabra: string
    id_video_segna: string
    url_icono: string
    isla: islaCreateNestedOneWithoutPalabraInput
    detalles_quiz?: detalles_quizCreateNestedManyWithoutPalabraInput
  }

  export type palabraUncheckedCreateWithoutPalabras_video_cuestionarioInput = {
    id_palabra?: number
    id_isla: number
    palabra: string
    id_video_segna: string
    url_icono: string
    detalles_quiz?: detalles_quizUncheckedCreateNestedManyWithoutPalabraInput
  }

  export type palabraCreateOrConnectWithoutPalabras_video_cuestionarioInput = {
    where: palabraWhereUniqueInput
    create: XOR<palabraCreateWithoutPalabras_video_cuestionarioInput, palabraUncheckedCreateWithoutPalabras_video_cuestionarioInput>
  }

  export type video_cuestionarioUpsertWithoutPalabras_video_cuestionarioInput = {
    update: XOR<video_cuestionarioUpdateWithoutPalabras_video_cuestionarioInput, video_cuestionarioUncheckedUpdateWithoutPalabras_video_cuestionarioInput>
    create: XOR<video_cuestionarioCreateWithoutPalabras_video_cuestionarioInput, video_cuestionarioUncheckedCreateWithoutPalabras_video_cuestionarioInput>
    where?: video_cuestionarioWhereInput
  }

  export type video_cuestionarioUpdateToOneWithWhereWithoutPalabras_video_cuestionarioInput = {
    where?: video_cuestionarioWhereInput
    data: XOR<video_cuestionarioUpdateWithoutPalabras_video_cuestionarioInput, video_cuestionarioUncheckedUpdateWithoutPalabras_video_cuestionarioInput>
  }

  export type video_cuestionarioUpdateWithoutPalabras_video_cuestionarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    isla?: islaUpdateOneRequiredWithoutVideo_cuestionarioNestedInput
    nivel?: nivelUpdateManyWithoutVideo_cuestionarioNestedInput
    parte_video_cuestionario?: parte_video_cuestionarioUpdateManyWithoutVideo_cuestionarioNestedInput
  }

  export type video_cuestionarioUncheckedUpdateWithoutPalabras_video_cuestionarioInput = {
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    id_isla?: IntFieldUpdateOperationsInput | number
    nivel?: nivelUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput
    parte_video_cuestionario?: parte_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput
  }

  export type palabraUpsertWithoutPalabras_video_cuestionarioInput = {
    update: XOR<palabraUpdateWithoutPalabras_video_cuestionarioInput, palabraUncheckedUpdateWithoutPalabras_video_cuestionarioInput>
    create: XOR<palabraCreateWithoutPalabras_video_cuestionarioInput, palabraUncheckedCreateWithoutPalabras_video_cuestionarioInput>
    where?: palabraWhereInput
  }

  export type palabraUpdateToOneWithWhereWithoutPalabras_video_cuestionarioInput = {
    where?: palabraWhereInput
    data: XOR<palabraUpdateWithoutPalabras_video_cuestionarioInput, palabraUncheckedUpdateWithoutPalabras_video_cuestionarioInput>
  }

  export type palabraUpdateWithoutPalabras_video_cuestionarioInput = {
    palabra?: StringFieldUpdateOperationsInput | string
    id_video_segna?: StringFieldUpdateOperationsInput | string
    url_icono?: StringFieldUpdateOperationsInput | string
    isla?: islaUpdateOneRequiredWithoutPalabraNestedInput
    detalles_quiz?: detalles_quizUpdateManyWithoutPalabraNestedInput
  }

  export type palabraUncheckedUpdateWithoutPalabras_video_cuestionarioInput = {
    id_palabra?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    palabra?: StringFieldUpdateOperationsInput | string
    id_video_segna?: StringFieldUpdateOperationsInput | string
    url_icono?: StringFieldUpdateOperationsInput | string
    detalles_quiz?: detalles_quizUncheckedUpdateManyWithoutPalabraNestedInput
  }

  export type parte_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput = {
    url_video: string
    indice: number
    nombre: string
    video_cuestionario: video_cuestionarioCreateNestedOneWithoutParte_video_cuestionarioInput
  }

  export type parte_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput = {
    id_parte_video_cuestionario?: number
    id_video_cuestionario: number
    url_video: string
    indice: number
    nombre: string
  }

  export type parte_video_cuestionarioCreateOrConnectWithoutPreguntas_video_cuestionarioInput = {
    where: parte_video_cuestionarioWhereUniqueInput
    create: XOR<parte_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput, parte_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput>
  }

  export type respuestas_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput = {
    respuesta: string
    es_correcta: boolean
  }

  export type respuestas_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput = {
    id_respuestas_video_cuestionario?: number
    respuesta: string
    es_correcta: boolean
  }

  export type respuestas_video_cuestionarioCreateOrConnectWithoutPreguntas_video_cuestionarioInput = {
    where: respuestas_video_cuestionarioWhereUniqueInput
    create: XOR<respuestas_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput, respuestas_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput>
  }

  export type respuestas_video_cuestionarioCreateManyPreguntas_video_cuestionarioInputEnvelope = {
    data: respuestas_video_cuestionarioCreateManyPreguntas_video_cuestionarioInput | respuestas_video_cuestionarioCreateManyPreguntas_video_cuestionarioInput[]
    skipDuplicates?: boolean
  }

  export type parte_video_cuestionarioUpsertWithoutPreguntas_video_cuestionarioInput = {
    update: XOR<parte_video_cuestionarioUpdateWithoutPreguntas_video_cuestionarioInput, parte_video_cuestionarioUncheckedUpdateWithoutPreguntas_video_cuestionarioInput>
    create: XOR<parte_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput, parte_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput>
    where?: parte_video_cuestionarioWhereInput
  }

  export type parte_video_cuestionarioUpdateToOneWithWhereWithoutPreguntas_video_cuestionarioInput = {
    where?: parte_video_cuestionarioWhereInput
    data: XOR<parte_video_cuestionarioUpdateWithoutPreguntas_video_cuestionarioInput, parte_video_cuestionarioUncheckedUpdateWithoutPreguntas_video_cuestionarioInput>
  }

  export type parte_video_cuestionarioUpdateWithoutPreguntas_video_cuestionarioInput = {
    url_video?: StringFieldUpdateOperationsInput | string
    indice?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    video_cuestionario?: video_cuestionarioUpdateOneRequiredWithoutParte_video_cuestionarioNestedInput
  }

  export type parte_video_cuestionarioUncheckedUpdateWithoutPreguntas_video_cuestionarioInput = {
    id_parte_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    url_video?: StringFieldUpdateOperationsInput | string
    indice?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type respuestas_video_cuestionarioUpsertWithWhereUniqueWithoutPreguntas_video_cuestionarioInput = {
    where: respuestas_video_cuestionarioWhereUniqueInput
    update: XOR<respuestas_video_cuestionarioUpdateWithoutPreguntas_video_cuestionarioInput, respuestas_video_cuestionarioUncheckedUpdateWithoutPreguntas_video_cuestionarioInput>
    create: XOR<respuestas_video_cuestionarioCreateWithoutPreguntas_video_cuestionarioInput, respuestas_video_cuestionarioUncheckedCreateWithoutPreguntas_video_cuestionarioInput>
  }

  export type respuestas_video_cuestionarioUpdateWithWhereUniqueWithoutPreguntas_video_cuestionarioInput = {
    where: respuestas_video_cuestionarioWhereUniqueInput
    data: XOR<respuestas_video_cuestionarioUpdateWithoutPreguntas_video_cuestionarioInput, respuestas_video_cuestionarioUncheckedUpdateWithoutPreguntas_video_cuestionarioInput>
  }

  export type respuestas_video_cuestionarioUpdateManyWithWhereWithoutPreguntas_video_cuestionarioInput = {
    where: respuestas_video_cuestionarioScalarWhereInput
    data: XOR<respuestas_video_cuestionarioUpdateManyMutationInput, respuestas_video_cuestionarioUncheckedUpdateManyWithoutPreguntas_video_cuestionarioInput>
  }

  export type respuestas_video_cuestionarioScalarWhereInput = {
    AND?: respuestas_video_cuestionarioScalarWhereInput | respuestas_video_cuestionarioScalarWhereInput[]
    OR?: respuestas_video_cuestionarioScalarWhereInput[]
    NOT?: respuestas_video_cuestionarioScalarWhereInput | respuestas_video_cuestionarioScalarWhereInput[]
    id_respuestas_video_cuestionario?: IntFilter<"respuestas_video_cuestionario"> | number
    id_preguntas_video_cuestionario?: IntFilter<"respuestas_video_cuestionario"> | number
    respuesta?: StringFilter<"respuestas_video_cuestionario"> | string
    es_correcta?: BoolFilter<"respuestas_video_cuestionario"> | boolean
  }

  export type preguntas_video_cuestionarioCreateWithoutRespuestas_video_cuestionarioInput = {
    pregunta: string
    parte_video_cuestionario: parte_video_cuestionarioCreateNestedOneWithoutPreguntas_video_cuestionarioInput
  }

  export type preguntas_video_cuestionarioUncheckedCreateWithoutRespuestas_video_cuestionarioInput = {
    id_preguntas_video_cuestionario?: number
    id_parte_video_cuestionario: number
    pregunta: string
  }

  export type preguntas_video_cuestionarioCreateOrConnectWithoutRespuestas_video_cuestionarioInput = {
    where: preguntas_video_cuestionarioWhereUniqueInput
    create: XOR<preguntas_video_cuestionarioCreateWithoutRespuestas_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedCreateWithoutRespuestas_video_cuestionarioInput>
  }

  export type preguntas_video_cuestionarioUpsertWithoutRespuestas_video_cuestionarioInput = {
    update: XOR<preguntas_video_cuestionarioUpdateWithoutRespuestas_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedUpdateWithoutRespuestas_video_cuestionarioInput>
    create: XOR<preguntas_video_cuestionarioCreateWithoutRespuestas_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedCreateWithoutRespuestas_video_cuestionarioInput>
    where?: preguntas_video_cuestionarioWhereInput
  }

  export type preguntas_video_cuestionarioUpdateToOneWithWhereWithoutRespuestas_video_cuestionarioInput = {
    where?: preguntas_video_cuestionarioWhereInput
    data: XOR<preguntas_video_cuestionarioUpdateWithoutRespuestas_video_cuestionarioInput, preguntas_video_cuestionarioUncheckedUpdateWithoutRespuestas_video_cuestionarioInput>
  }

  export type preguntas_video_cuestionarioUpdateWithoutRespuestas_video_cuestionarioInput = {
    pregunta?: StringFieldUpdateOperationsInput | string
    parte_video_cuestionario?: parte_video_cuestionarioUpdateOneRequiredWithoutPreguntas_video_cuestionarioNestedInput
  }

  export type preguntas_video_cuestionarioUncheckedUpdateWithoutRespuestas_video_cuestionarioInput = {
    id_preguntas_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_parte_video_cuestionario?: IntFieldUpdateOperationsInput | number
    pregunta?: StringFieldUpdateOperationsInput | string
  }

  export type quizCreateWithoutDetalles_quizInput = {
    nombre: string
    isla: islaCreateNestedOneWithoutQuizInput
    nivel?: nivelCreateNestedManyWithoutQuizInput
  }

  export type quizUncheckedCreateWithoutDetalles_quizInput = {
    id_quiz?: number
    id_isla: number
    nombre: string
    nivel?: nivelUncheckedCreateNestedManyWithoutQuizInput
  }

  export type quizCreateOrConnectWithoutDetalles_quizInput = {
    where: quizWhereUniqueInput
    create: XOR<quizCreateWithoutDetalles_quizInput, quizUncheckedCreateWithoutDetalles_quizInput>
  }

  export type palabraCreateWithoutDetalles_quizInput = {
    palabra: string
    id_video_segna: string
    url_icono: string
    isla: islaCreateNestedOneWithoutPalabraInput
    palabras_video_cuestionario?: palabras_video_cuestionarioCreateNestedManyWithoutPalabraInput
  }

  export type palabraUncheckedCreateWithoutDetalles_quizInput = {
    id_palabra?: number
    id_isla: number
    palabra: string
    id_video_segna: string
    url_icono: string
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedCreateNestedManyWithoutPalabraInput
  }

  export type palabraCreateOrConnectWithoutDetalles_quizInput = {
    where: palabraWhereUniqueInput
    create: XOR<palabraCreateWithoutDetalles_quizInput, palabraUncheckedCreateWithoutDetalles_quizInput>
  }

  export type quizUpsertWithoutDetalles_quizInput = {
    update: XOR<quizUpdateWithoutDetalles_quizInput, quizUncheckedUpdateWithoutDetalles_quizInput>
    create: XOR<quizCreateWithoutDetalles_quizInput, quizUncheckedCreateWithoutDetalles_quizInput>
    where?: quizWhereInput
  }

  export type quizUpdateToOneWithWhereWithoutDetalles_quizInput = {
    where?: quizWhereInput
    data: XOR<quizUpdateWithoutDetalles_quizInput, quizUncheckedUpdateWithoutDetalles_quizInput>
  }

  export type quizUpdateWithoutDetalles_quizInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    isla?: islaUpdateOneRequiredWithoutQuizNestedInput
    nivel?: nivelUpdateManyWithoutQuizNestedInput
  }

  export type quizUncheckedUpdateWithoutDetalles_quizInput = {
    id_quiz?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: nivelUncheckedUpdateManyWithoutQuizNestedInput
  }

  export type palabraUpsertWithoutDetalles_quizInput = {
    update: XOR<palabraUpdateWithoutDetalles_quizInput, palabraUncheckedUpdateWithoutDetalles_quizInput>
    create: XOR<palabraCreateWithoutDetalles_quizInput, palabraUncheckedCreateWithoutDetalles_quizInput>
    where?: palabraWhereInput
  }

  export type palabraUpdateToOneWithWhereWithoutDetalles_quizInput = {
    where?: palabraWhereInput
    data: XOR<palabraUpdateWithoutDetalles_quizInput, palabraUncheckedUpdateWithoutDetalles_quizInput>
  }

  export type palabraUpdateWithoutDetalles_quizInput = {
    palabra?: StringFieldUpdateOperationsInput | string
    id_video_segna?: StringFieldUpdateOperationsInput | string
    url_icono?: StringFieldUpdateOperationsInput | string
    isla?: islaUpdateOneRequiredWithoutPalabraNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUpdateManyWithoutPalabraNestedInput
  }

  export type palabraUncheckedUpdateWithoutDetalles_quizInput = {
    id_palabra?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    palabra?: StringFieldUpdateOperationsInput | string
    id_video_segna?: StringFieldUpdateOperationsInput | string
    url_icono?: StringFieldUpdateOperationsInput | string
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedUpdateManyWithoutPalabraNestedInput
  }

  export type video_cuestionarioCreateManyIslaInput = {
    id_video_cuestionario?: number
    nombre: string
  }

  export type quizCreateManyIslaInput = {
    id_quiz?: number
    nombre: string
  }

  export type modelo_comlCreateManyIslaInput = {
    id_modelo_coml?: number
  }

  export type treasure_huntCreateManyIslaInput = {
    id_treasure_hunt?: number
    id_modelo_coml: number
  }

  export type nivelCreateManyIslaInput = {
    id_nivel?: number
    id_video_cuestionario: number
    id_quiz: number
    id_treasure_hunt: number
  }

  export type palabraCreateManyIslaInput = {
    id_palabra?: number
    palabra: string
    id_video_segna: string
    url_icono: string
  }

  export type video_cuestionarioUpdateWithoutIslaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: nivelUpdateManyWithoutVideo_cuestionarioNestedInput
    parte_video_cuestionario?: parte_video_cuestionarioUpdateManyWithoutVideo_cuestionarioNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUpdateManyWithoutVideo_cuestionarioNestedInput
  }

  export type video_cuestionarioUncheckedUpdateWithoutIslaInput = {
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: nivelUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput
    parte_video_cuestionario?: parte_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioNestedInput
  }

  export type video_cuestionarioUncheckedUpdateManyWithoutIslaInput = {
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type quizUpdateWithoutIslaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: nivelUpdateManyWithoutQuizNestedInput
    detalles_quiz?: detalles_quizUpdateManyWithoutQuizNestedInput
  }

  export type quizUncheckedUpdateWithoutIslaInput = {
    id_quiz?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    nivel?: nivelUncheckedUpdateManyWithoutQuizNestedInput
    detalles_quiz?: detalles_quizUncheckedUpdateManyWithoutQuizNestedInput
  }

  export type quizUncheckedUpdateManyWithoutIslaInput = {
    id_quiz?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type modelo_comlUpdateWithoutIslaInput = {
    treasure_hunt?: treasure_huntUpdateManyWithoutModelo_comlNestedInput
  }

  export type modelo_comlUncheckedUpdateWithoutIslaInput = {
    id_modelo_coml?: IntFieldUpdateOperationsInput | number
    treasure_hunt?: treasure_huntUncheckedUpdateManyWithoutModelo_comlNestedInput
  }

  export type modelo_comlUncheckedUpdateManyWithoutIslaInput = {
    id_modelo_coml?: IntFieldUpdateOperationsInput | number
  }

  export type treasure_huntUpdateWithoutIslaInput = {
    modelo_coml?: modelo_comlUpdateOneRequiredWithoutTreasure_huntNestedInput
    nivel?: nivelUpdateManyWithoutTreasure_huntNestedInput
  }

  export type treasure_huntUncheckedUpdateWithoutIslaInput = {
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
    id_modelo_coml?: IntFieldUpdateOperationsInput | number
    nivel?: nivelUncheckedUpdateManyWithoutTreasure_huntNestedInput
  }

  export type treasure_huntUncheckedUpdateManyWithoutIslaInput = {
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
    id_modelo_coml?: IntFieldUpdateOperationsInput | number
  }

  export type nivelUpdateWithoutIslaInput = {
    video_cuestionario?: video_cuestionarioUpdateOneRequiredWithoutNivelNestedInput
    quiz?: quizUpdateOneRequiredWithoutNivelNestedInput
    treasure_hunt?: treasure_huntUpdateOneRequiredWithoutNivelNestedInput
  }

  export type nivelUncheckedUpdateWithoutIslaInput = {
    id_nivel?: IntFieldUpdateOperationsInput | number
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_quiz?: IntFieldUpdateOperationsInput | number
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
  }

  export type nivelUncheckedUpdateManyWithoutIslaInput = {
    id_nivel?: IntFieldUpdateOperationsInput | number
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_quiz?: IntFieldUpdateOperationsInput | number
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
  }

  export type palabraUpdateWithoutIslaInput = {
    palabra?: StringFieldUpdateOperationsInput | string
    id_video_segna?: StringFieldUpdateOperationsInput | string
    url_icono?: StringFieldUpdateOperationsInput | string
    detalles_quiz?: detalles_quizUpdateManyWithoutPalabraNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUpdateManyWithoutPalabraNestedInput
  }

  export type palabraUncheckedUpdateWithoutIslaInput = {
    id_palabra?: IntFieldUpdateOperationsInput | number
    palabra?: StringFieldUpdateOperationsInput | string
    id_video_segna?: StringFieldUpdateOperationsInput | string
    url_icono?: StringFieldUpdateOperationsInput | string
    detalles_quiz?: detalles_quizUncheckedUpdateManyWithoutPalabraNestedInput
    palabras_video_cuestionario?: palabras_video_cuestionarioUncheckedUpdateManyWithoutPalabraNestedInput
  }

  export type palabraUncheckedUpdateManyWithoutIslaInput = {
    id_palabra?: IntFieldUpdateOperationsInput | number
    palabra?: StringFieldUpdateOperationsInput | string
    id_video_segna?: StringFieldUpdateOperationsInput | string
    url_icono?: StringFieldUpdateOperationsInput | string
  }

  export type nivelCreateManyVideo_cuestionarioInput = {
    id_nivel?: number
    id_isla: number
    id_quiz: number
    id_treasure_hunt: number
  }

  export type parte_video_cuestionarioCreateManyVideo_cuestionarioInput = {
    id_parte_video_cuestionario?: number
    url_video: string
    indice: number
    nombre: string
  }

  export type palabras_video_cuestionarioCreateManyVideo_cuestionarioInput = {
    id_palabra: number
  }

  export type nivelUpdateWithoutVideo_cuestionarioInput = {
    isla?: islaUpdateOneRequiredWithoutNivelNestedInput
    quiz?: quizUpdateOneRequiredWithoutNivelNestedInput
    treasure_hunt?: treasure_huntUpdateOneRequiredWithoutNivelNestedInput
  }

  export type nivelUncheckedUpdateWithoutVideo_cuestionarioInput = {
    id_nivel?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    id_quiz?: IntFieldUpdateOperationsInput | number
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
  }

  export type nivelUncheckedUpdateManyWithoutVideo_cuestionarioInput = {
    id_nivel?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    id_quiz?: IntFieldUpdateOperationsInput | number
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
  }

  export type parte_video_cuestionarioUpdateWithoutVideo_cuestionarioInput = {
    url_video?: StringFieldUpdateOperationsInput | string
    indice?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    preguntas_video_cuestionario?: preguntas_video_cuestionarioUpdateManyWithoutParte_video_cuestionarioNestedInput
  }

  export type parte_video_cuestionarioUncheckedUpdateWithoutVideo_cuestionarioInput = {
    id_parte_video_cuestionario?: IntFieldUpdateOperationsInput | number
    url_video?: StringFieldUpdateOperationsInput | string
    indice?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    preguntas_video_cuestionario?: preguntas_video_cuestionarioUncheckedUpdateManyWithoutParte_video_cuestionarioNestedInput
  }

  export type parte_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioInput = {
    id_parte_video_cuestionario?: IntFieldUpdateOperationsInput | number
    url_video?: StringFieldUpdateOperationsInput | string
    indice?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type palabras_video_cuestionarioUpdateWithoutVideo_cuestionarioInput = {
    palabra?: palabraUpdateOneRequiredWithoutPalabras_video_cuestionarioNestedInput
  }

  export type palabras_video_cuestionarioUncheckedUpdateWithoutVideo_cuestionarioInput = {
    id_palabra?: IntFieldUpdateOperationsInput | number
  }

  export type palabras_video_cuestionarioUncheckedUpdateManyWithoutVideo_cuestionarioInput = {
    id_palabra?: IntFieldUpdateOperationsInput | number
  }

  export type nivelCreateManyQuizInput = {
    id_nivel?: number
    id_isla: number
    id_video_cuestionario: number
    id_treasure_hunt: number
  }

  export type detalles_quizCreateManyQuizInput = {
    id_palabra: number
  }

  export type nivelUpdateWithoutQuizInput = {
    isla?: islaUpdateOneRequiredWithoutNivelNestedInput
    video_cuestionario?: video_cuestionarioUpdateOneRequiredWithoutNivelNestedInput
    treasure_hunt?: treasure_huntUpdateOneRequiredWithoutNivelNestedInput
  }

  export type nivelUncheckedUpdateWithoutQuizInput = {
    id_nivel?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
  }

  export type nivelUncheckedUpdateManyWithoutQuizInput = {
    id_nivel?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
  }

  export type detalles_quizUpdateWithoutQuizInput = {
    palabra?: palabraUpdateOneRequiredWithoutDetalles_quizNestedInput
  }

  export type detalles_quizUncheckedUpdateWithoutQuizInput = {
    id_palabra?: IntFieldUpdateOperationsInput | number
  }

  export type detalles_quizUncheckedUpdateManyWithoutQuizInput = {
    id_palabra?: IntFieldUpdateOperationsInput | number
  }

  export type treasure_huntCreateManyModelo_comlInput = {
    id_treasure_hunt?: number
    id_isla: number
  }

  export type treasure_huntUpdateWithoutModelo_comlInput = {
    isla?: islaUpdateOneRequiredWithoutTreasure_huntNestedInput
    nivel?: nivelUpdateManyWithoutTreasure_huntNestedInput
  }

  export type treasure_huntUncheckedUpdateWithoutModelo_comlInput = {
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    nivel?: nivelUncheckedUpdateManyWithoutTreasure_huntNestedInput
  }

  export type treasure_huntUncheckedUpdateManyWithoutModelo_comlInput = {
    id_treasure_hunt?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
  }

  export type nivelCreateManyTreasure_huntInput = {
    id_nivel?: number
    id_isla: number
    id_video_cuestionario: number
    id_quiz: number
  }

  export type nivelUpdateWithoutTreasure_huntInput = {
    isla?: islaUpdateOneRequiredWithoutNivelNestedInput
    video_cuestionario?: video_cuestionarioUpdateOneRequiredWithoutNivelNestedInput
    quiz?: quizUpdateOneRequiredWithoutNivelNestedInput
  }

  export type nivelUncheckedUpdateWithoutTreasure_huntInput = {
    id_nivel?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_quiz?: IntFieldUpdateOperationsInput | number
  }

  export type nivelUncheckedUpdateManyWithoutTreasure_huntInput = {
    id_nivel?: IntFieldUpdateOperationsInput | number
    id_isla?: IntFieldUpdateOperationsInput | number
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
    id_quiz?: IntFieldUpdateOperationsInput | number
  }

  export type detalles_quizCreateManyPalabraInput = {
    id_quiz: number
  }

  export type palabras_video_cuestionarioCreateManyPalabraInput = {
    id_video_cuestionario: number
  }

  export type detalles_quizUpdateWithoutPalabraInput = {
    quiz?: quizUpdateOneRequiredWithoutDetalles_quizNestedInput
  }

  export type detalles_quizUncheckedUpdateWithoutPalabraInput = {
    id_quiz?: IntFieldUpdateOperationsInput | number
  }

  export type detalles_quizUncheckedUpdateManyWithoutPalabraInput = {
    id_quiz?: IntFieldUpdateOperationsInput | number
  }

  export type palabras_video_cuestionarioUpdateWithoutPalabraInput = {
    video_cuestionario?: video_cuestionarioUpdateOneRequiredWithoutPalabras_video_cuestionarioNestedInput
  }

  export type palabras_video_cuestionarioUncheckedUpdateWithoutPalabraInput = {
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
  }

  export type palabras_video_cuestionarioUncheckedUpdateManyWithoutPalabraInput = {
    id_video_cuestionario?: IntFieldUpdateOperationsInput | number
  }

  export type preguntas_video_cuestionarioCreateManyParte_video_cuestionarioInput = {
    id_preguntas_video_cuestionario?: number
    pregunta: string
  }

  export type preguntas_video_cuestionarioUpdateWithoutParte_video_cuestionarioInput = {
    pregunta?: StringFieldUpdateOperationsInput | string
    respuestas_video_cuestionario?: respuestas_video_cuestionarioUpdateManyWithoutPreguntas_video_cuestionarioNestedInput
  }

  export type preguntas_video_cuestionarioUncheckedUpdateWithoutParte_video_cuestionarioInput = {
    id_preguntas_video_cuestionario?: IntFieldUpdateOperationsInput | number
    pregunta?: StringFieldUpdateOperationsInput | string
    respuestas_video_cuestionario?: respuestas_video_cuestionarioUncheckedUpdateManyWithoutPreguntas_video_cuestionarioNestedInput
  }

  export type preguntas_video_cuestionarioUncheckedUpdateManyWithoutParte_video_cuestionarioInput = {
    id_preguntas_video_cuestionario?: IntFieldUpdateOperationsInput | number
    pregunta?: StringFieldUpdateOperationsInput | string
  }

  export type respuestas_video_cuestionarioCreateManyPreguntas_video_cuestionarioInput = {
    id_respuestas_video_cuestionario?: number
    respuesta: string
    es_correcta: boolean
  }

  export type respuestas_video_cuestionarioUpdateWithoutPreguntas_video_cuestionarioInput = {
    respuesta?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
  }

  export type respuestas_video_cuestionarioUncheckedUpdateWithoutPreguntas_video_cuestionarioInput = {
    id_respuestas_video_cuestionario?: IntFieldUpdateOperationsInput | number
    respuesta?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
  }

  export type respuestas_video_cuestionarioUncheckedUpdateManyWithoutPreguntas_video_cuestionarioInput = {
    id_respuestas_video_cuestionario?: IntFieldUpdateOperationsInput | number
    respuesta?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use IslaCountOutputTypeDefaultArgs instead
     */
    export type IslaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = IslaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Video_cuestionarioCountOutputTypeDefaultArgs instead
     */
    export type Video_cuestionarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Video_cuestionarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use QuizCountOutputTypeDefaultArgs instead
     */
    export type QuizCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = QuizCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Modelo_comlCountOutputTypeDefaultArgs instead
     */
    export type Modelo_comlCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Modelo_comlCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Treasure_huntCountOutputTypeDefaultArgs instead
     */
    export type Treasure_huntCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Treasure_huntCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PalabraCountOutputTypeDefaultArgs instead
     */
    export type PalabraCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PalabraCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Parte_video_cuestionarioCountOutputTypeDefaultArgs instead
     */
    export type Parte_video_cuestionarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Parte_video_cuestionarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Preguntas_video_cuestionarioCountOutputTypeDefaultArgs instead
     */
    export type Preguntas_video_cuestionarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Preguntas_video_cuestionarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use miembroDefaultArgs instead
     */
    export type miembroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = miembroDefaultArgs<ExtArgs>
    /**
     * @deprecated Use islaDefaultArgs instead
     */
    export type islaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = islaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use video_cuestionarioDefaultArgs instead
     */
    export type video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = video_cuestionarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use quizDefaultArgs instead
     */
    export type quizArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = quizDefaultArgs<ExtArgs>
    /**
     * @deprecated Use modelo_comlDefaultArgs instead
     */
    export type modelo_comlArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = modelo_comlDefaultArgs<ExtArgs>
    /**
     * @deprecated Use treasure_huntDefaultArgs instead
     */
    export type treasure_huntArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = treasure_huntDefaultArgs<ExtArgs>
    /**
     * @deprecated Use nivelDefaultArgs instead
     */
    export type nivelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = nivelDefaultArgs<ExtArgs>
    /**
     * @deprecated Use palabraDefaultArgs instead
     */
    export type palabraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = palabraDefaultArgs<ExtArgs>
    /**
     * @deprecated Use parte_video_cuestionarioDefaultArgs instead
     */
    export type parte_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = parte_video_cuestionarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use palabras_video_cuestionarioDefaultArgs instead
     */
    export type palabras_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = palabras_video_cuestionarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use preguntas_video_cuestionarioDefaultArgs instead
     */
    export type preguntas_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = preguntas_video_cuestionarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use respuestas_video_cuestionarioDefaultArgs instead
     */
    export type respuestas_video_cuestionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = respuestas_video_cuestionarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use detalles_quizDefaultArgs instead
     */
    export type detalles_quizArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = detalles_quizDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}